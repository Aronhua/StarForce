// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_botweaponconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_botweaponconfig.proto</summary>
  public static partial class XlsBeansBotweaponconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_botweaponconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansBotweaponconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch94bHNfYmVhbnNfYm90d2VhcG9uY29uZmlnLnByb3RvEgpEMTEuUGJlYW5z",
            "InYKD0JvdFdlYXBvbkNvbmZpZxIKCgJpZBgBIAEoDRINCgVDbGFzcxgCIAEo",
            "CRIMCgRUeXBlGAMgASgNEjoKCldlYXBvbkluZm8YBCADKAsyJi5EMTEuUGJl",
            "YW5zLkJvdFdlYXBvbkNvbmZpZ19XZWFwb25JbmZvIoYBChpCb3RXZWFwb25D",
            "b25maWdfV2VhcG9uSW5mbxIUCgxNYWluV2VhcG9uSWQYASABKA0SEwoLU3Vi",
            "V2VhcG9uSWQYAiABKA0SFwoPRGVmZW5jZUVxdWlwSWQxGAMgASgNEhUKDVBy",
            "b2plY3RpbGVJZDEYBCABKA0SDQoFUGFyYW0YBSABKA0iQwoVQm90V2VhcG9u",
            "Q29uZmlnX0FycmF5EioKBWl0ZW1zGAEgAygLMhsuRDExLlBiZWFucy5Cb3RX",
            "ZWFwb25Db25maWdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.BotWeaponConfig), global::D11.Pbeans.BotWeaponConfig.Parser, new[]{ "Id", "Class", "Type", "WeaponInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.BotWeaponConfig_WeaponInfo), global::D11.Pbeans.BotWeaponConfig_WeaponInfo.Parser, new[]{ "MainWeaponId", "SubWeaponId", "DefenceEquipId1", "ProjectileId1", "Param" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.BotWeaponConfig_Array), global::D11.Pbeans.BotWeaponConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BotWeaponConfig : pb::IMessage<BotWeaponConfig> {
    private static readonly pb::MessageParser<BotWeaponConfig> _parser = new pb::MessageParser<BotWeaponConfig>(() => new BotWeaponConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotWeaponConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansBotweaponconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotWeaponConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotWeaponConfig(BotWeaponConfig other) : this() {
      id_ = other.id_;
      class_ = other.class_;
      type_ = other.type_;
      weaponInfo_ = other.weaponInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotWeaponConfig Clone() {
      return new BotWeaponConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 编号 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Class" field.</summary>
    public const int ClassFieldNumber = 2;
    private string class_ = "";
    /// <summary>
    /// 职业 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Class {
      get { return class_; }
      set {
        class_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 3;
    private uint type_;
    /// <summary>
    /// 类型 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "WeaponInfo" field.</summary>
    public const int WeaponInfoFieldNumber = 4;
    private static readonly pb::FieldCodec<global::D11.Pbeans.BotWeaponConfig_WeaponInfo> _repeated_weaponInfo_codec
        = pb::FieldCodec.ForMessage(34, global::D11.Pbeans.BotWeaponConfig_WeaponInfo.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.BotWeaponConfig_WeaponInfo> weaponInfo_ = new pbc::RepeatedField<global::D11.Pbeans.BotWeaponConfig_WeaponInfo>();
    /// <summary>
    /// 主武器前缀ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.BotWeaponConfig_WeaponInfo> WeaponInfo {
      get { return weaponInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotWeaponConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotWeaponConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Class != other.Class) return false;
      if (Type != other.Type) return false;
      if(!weaponInfo_.Equals(other.weaponInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Class.Length != 0) hash ^= Class.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= weaponInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Class.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Class);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Type);
      }
      weaponInfo_.WriteTo(output, _repeated_weaponInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Class.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Class);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      size += weaponInfo_.CalculateSize(_repeated_weaponInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotWeaponConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Class.Length != 0) {
        Class = other.Class;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      weaponInfo_.Add(other.weaponInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Class = input.ReadString();
            break;
          }
          case 24: {
            Type = input.ReadUInt32();
            break;
          }
          case 34: {
            weaponInfo_.AddEntriesFrom(input, _repeated_weaponInfo_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BotWeaponConfig_WeaponInfo : pb::IMessage<BotWeaponConfig_WeaponInfo> {
    private static readonly pb::MessageParser<BotWeaponConfig_WeaponInfo> _parser = new pb::MessageParser<BotWeaponConfig_WeaponInfo>(() => new BotWeaponConfig_WeaponInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotWeaponConfig_WeaponInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansBotweaponconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotWeaponConfig_WeaponInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotWeaponConfig_WeaponInfo(BotWeaponConfig_WeaponInfo other) : this() {
      mainWeaponId_ = other.mainWeaponId_;
      subWeaponId_ = other.subWeaponId_;
      defenceEquipId1_ = other.defenceEquipId1_;
      projectileId1_ = other.projectileId1_;
      param_ = other.param_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotWeaponConfig_WeaponInfo Clone() {
      return new BotWeaponConfig_WeaponInfo(this);
    }

    /// <summary>Field number for the "MainWeaponId" field.</summary>
    public const int MainWeaponIdFieldNumber = 1;
    private uint mainWeaponId_;
    /// <summary>
    /// 主武器前缀ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MainWeaponId {
      get { return mainWeaponId_; }
      set {
        mainWeaponId_ = value;
      }
    }

    /// <summary>Field number for the "SubWeaponId" field.</summary>
    public const int SubWeaponIdFieldNumber = 2;
    private uint subWeaponId_;
    /// <summary>
    /// 副武器前缀ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SubWeaponId {
      get { return subWeaponId_; }
      set {
        subWeaponId_ = value;
      }
    }

    /// <summary>Field number for the "DefenceEquipId1" field.</summary>
    public const int DefenceEquipId1FieldNumber = 3;
    private uint defenceEquipId1_;
    /// <summary>
    /// 防具列表 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DefenceEquipId1 {
      get { return defenceEquipId1_; }
      set {
        defenceEquipId1_ = value;
      }
    }

    /// <summary>Field number for the "ProjectileId1" field.</summary>
    public const int ProjectileId1FieldNumber = 4;
    private uint projectileId1_;
    /// <summary>
    /// 投掷物列表 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ProjectileId1 {
      get { return projectileId1_; }
      set {
        projectileId1_ = value;
      }
    }

    /// <summary>Field number for the "Param" field.</summary>
    public const int ParamFieldNumber = 5;
    private uint param_;
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Param {
      get { return param_; }
      set {
        param_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotWeaponConfig_WeaponInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotWeaponConfig_WeaponInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MainWeaponId != other.MainWeaponId) return false;
      if (SubWeaponId != other.SubWeaponId) return false;
      if (DefenceEquipId1 != other.DefenceEquipId1) return false;
      if (ProjectileId1 != other.ProjectileId1) return false;
      if (Param != other.Param) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MainWeaponId != 0) hash ^= MainWeaponId.GetHashCode();
      if (SubWeaponId != 0) hash ^= SubWeaponId.GetHashCode();
      if (DefenceEquipId1 != 0) hash ^= DefenceEquipId1.GetHashCode();
      if (ProjectileId1 != 0) hash ^= ProjectileId1.GetHashCode();
      if (Param != 0) hash ^= Param.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MainWeaponId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MainWeaponId);
      }
      if (SubWeaponId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SubWeaponId);
      }
      if (DefenceEquipId1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(DefenceEquipId1);
      }
      if (ProjectileId1 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ProjectileId1);
      }
      if (Param != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Param);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MainWeaponId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MainWeaponId);
      }
      if (SubWeaponId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubWeaponId);
      }
      if (DefenceEquipId1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DefenceEquipId1);
      }
      if (ProjectileId1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProjectileId1);
      }
      if (Param != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Param);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotWeaponConfig_WeaponInfo other) {
      if (other == null) {
        return;
      }
      if (other.MainWeaponId != 0) {
        MainWeaponId = other.MainWeaponId;
      }
      if (other.SubWeaponId != 0) {
        SubWeaponId = other.SubWeaponId;
      }
      if (other.DefenceEquipId1 != 0) {
        DefenceEquipId1 = other.DefenceEquipId1;
      }
      if (other.ProjectileId1 != 0) {
        ProjectileId1 = other.ProjectileId1;
      }
      if (other.Param != 0) {
        Param = other.Param;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MainWeaponId = input.ReadUInt32();
            break;
          }
          case 16: {
            SubWeaponId = input.ReadUInt32();
            break;
          }
          case 24: {
            DefenceEquipId1 = input.ReadUInt32();
            break;
          }
          case 32: {
            ProjectileId1 = input.ReadUInt32();
            break;
          }
          case 40: {
            Param = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BotWeaponConfig_Array : pb::IMessage<BotWeaponConfig_Array> {
    private static readonly pb::MessageParser<BotWeaponConfig_Array> _parser = new pb::MessageParser<BotWeaponConfig_Array>(() => new BotWeaponConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BotWeaponConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansBotweaponconfigReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotWeaponConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotWeaponConfig_Array(BotWeaponConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BotWeaponConfig_Array Clone() {
      return new BotWeaponConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.BotWeaponConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.BotWeaponConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.BotWeaponConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.BotWeaponConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.BotWeaponConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BotWeaponConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BotWeaponConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BotWeaponConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
