// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_brscenehierarchyconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_brscenehierarchyconfig.proto</summary>
  public static partial class XlsBeansBrscenehierarchyconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_brscenehierarchyconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansBrscenehierarchyconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZ4bHNfYmVhbnNfYnJzY2VuZWhpZXJhcmNoeWNvbmZpZy5wcm90bxIKRDEx",
            "LlBiZWFucyLnAQoWQlJTY2VuZUhpZXJhcmNoeUNvbmZpZxIVCg1IaWVyYXJj",
            "aHlUeXBlGAEgASgFEhAKCFRpbGVTaXplGAIgASgFEhwKFExvYWRNaW5EaXN0",
            "YW5jZUxpbWl0GAMgASgFEhwKFExvYWRNYXhEaXN0YW5jZUxpbWl0GAQgASgF",
            "EhoKEkxvYWRNaW5IZWlnaHRMaW1pdBgFIAEoBRIaChJMb2FkTWF4SGVpZ2h0",
            "TGltaXQYBiABKAUSGgoSTG9hZExvd0RldmljZUxpbWl0GAcgASgIEhQKDExv",
            "YWRQcmlvcml0eRgIIAEoBSJRChxCUlNjZW5lSGllcmFyY2h5Q29uZmlnX0Fy",
            "cmF5EjEKBWl0ZW1zGAEgAygLMiIuRDExLlBiZWFucy5CUlNjZW5lSGllcmFy",
            "Y2h5Q29uZmlnYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.BRSceneHierarchyConfig), global::D11.Pbeans.BRSceneHierarchyConfig.Parser, new[]{ "HierarchyType", "TileSize", "LoadMinDistanceLimit", "LoadMaxDistanceLimit", "LoadMinHeightLimit", "LoadMaxHeightLimit", "LoadLowDeviceLimit", "LoadPriority" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.BRSceneHierarchyConfig_Array), global::D11.Pbeans.BRSceneHierarchyConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BRSceneHierarchyConfig : pb::IMessage<BRSceneHierarchyConfig> {
    private static readonly pb::MessageParser<BRSceneHierarchyConfig> _parser = new pb::MessageParser<BRSceneHierarchyConfig>(() => new BRSceneHierarchyConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BRSceneHierarchyConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansBrscenehierarchyconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRSceneHierarchyConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRSceneHierarchyConfig(BRSceneHierarchyConfig other) : this() {
      hierarchyType_ = other.hierarchyType_;
      tileSize_ = other.tileSize_;
      loadMinDistanceLimit_ = other.loadMinDistanceLimit_;
      loadMaxDistanceLimit_ = other.loadMaxDistanceLimit_;
      loadMinHeightLimit_ = other.loadMinHeightLimit_;
      loadMaxHeightLimit_ = other.loadMaxHeightLimit_;
      loadLowDeviceLimit_ = other.loadLowDeviceLimit_;
      loadPriority_ = other.loadPriority_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRSceneHierarchyConfig Clone() {
      return new BRSceneHierarchyConfig(this);
    }

    /// <summary>Field number for the "HierarchyType" field.</summary>
    public const int HierarchyTypeFieldNumber = 1;
    private int hierarchyType_;
    /// <summary>
    /// 层级类别 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HierarchyType {
      get { return hierarchyType_; }
      set {
        hierarchyType_ = value;
      }
    }

    /// <summary>Field number for the "TileSize" field.</summary>
    public const int TileSizeFieldNumber = 2;
    private int tileSize_;
    /// <summary>
    /// 分块尺寸（-1不限） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TileSize {
      get { return tileSize_; }
      set {
        tileSize_ = value;
      }
    }

    /// <summary>Field number for the "LoadMinDistanceLimit" field.</summary>
    public const int LoadMinDistanceLimitFieldNumber = 3;
    private int loadMinDistanceLimit_;
    /// <summary>
    /// 最小加载距离（大于等于此值时加载，-1不限） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LoadMinDistanceLimit {
      get { return loadMinDistanceLimit_; }
      set {
        loadMinDistanceLimit_ = value;
      }
    }

    /// <summary>Field number for the "LoadMaxDistanceLimit" field.</summary>
    public const int LoadMaxDistanceLimitFieldNumber = 4;
    private int loadMaxDistanceLimit_;
    /// <summary>
    /// 最大加载距离（小于此值时加载，-1不限） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LoadMaxDistanceLimit {
      get { return loadMaxDistanceLimit_; }
      set {
        loadMaxDistanceLimit_ = value;
      }
    }

    /// <summary>Field number for the "LoadMinHeightLimit" field.</summary>
    public const int LoadMinHeightLimitFieldNumber = 5;
    private int loadMinHeightLimit_;
    /// <summary>
    /// 最小加载高度（大于等于此值时加载，-1不限） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LoadMinHeightLimit {
      get { return loadMinHeightLimit_; }
      set {
        loadMinHeightLimit_ = value;
      }
    }

    /// <summary>Field number for the "LoadMaxHeightLimit" field.</summary>
    public const int LoadMaxHeightLimitFieldNumber = 6;
    private int loadMaxHeightLimit_;
    /// <summary>
    /// 最大加载高度（小于此值时加载，-1不限） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LoadMaxHeightLimit {
      get { return loadMaxHeightLimit_; }
      set {
        loadMaxHeightLimit_ = value;
      }
    }

    /// <summary>Field number for the "LoadLowDeviceLimit" field.</summary>
    public const int LoadLowDeviceLimitFieldNumber = 7;
    private bool loadLowDeviceLimit_;
    /// <summary>
    /// 低端机是否加载 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LoadLowDeviceLimit {
      get { return loadLowDeviceLimit_; }
      set {
        loadLowDeviceLimit_ = value;
      }
    }

    /// <summary>Field number for the "LoadPriority" field.</summary>
    public const int LoadPriorityFieldNumber = 8;
    private int loadPriority_;
    /// <summary>
    /// 加载优先级（从低到高排序） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LoadPriority {
      get { return loadPriority_; }
      set {
        loadPriority_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BRSceneHierarchyConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BRSceneHierarchyConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HierarchyType != other.HierarchyType) return false;
      if (TileSize != other.TileSize) return false;
      if (LoadMinDistanceLimit != other.LoadMinDistanceLimit) return false;
      if (LoadMaxDistanceLimit != other.LoadMaxDistanceLimit) return false;
      if (LoadMinHeightLimit != other.LoadMinHeightLimit) return false;
      if (LoadMaxHeightLimit != other.LoadMaxHeightLimit) return false;
      if (LoadLowDeviceLimit != other.LoadLowDeviceLimit) return false;
      if (LoadPriority != other.LoadPriority) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HierarchyType != 0) hash ^= HierarchyType.GetHashCode();
      if (TileSize != 0) hash ^= TileSize.GetHashCode();
      if (LoadMinDistanceLimit != 0) hash ^= LoadMinDistanceLimit.GetHashCode();
      if (LoadMaxDistanceLimit != 0) hash ^= LoadMaxDistanceLimit.GetHashCode();
      if (LoadMinHeightLimit != 0) hash ^= LoadMinHeightLimit.GetHashCode();
      if (LoadMaxHeightLimit != 0) hash ^= LoadMaxHeightLimit.GetHashCode();
      if (LoadLowDeviceLimit != false) hash ^= LoadLowDeviceLimit.GetHashCode();
      if (LoadPriority != 0) hash ^= LoadPriority.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HierarchyType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(HierarchyType);
      }
      if (TileSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TileSize);
      }
      if (LoadMinDistanceLimit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LoadMinDistanceLimit);
      }
      if (LoadMaxDistanceLimit != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LoadMaxDistanceLimit);
      }
      if (LoadMinHeightLimit != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LoadMinHeightLimit);
      }
      if (LoadMaxHeightLimit != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(LoadMaxHeightLimit);
      }
      if (LoadLowDeviceLimit != false) {
        output.WriteRawTag(56);
        output.WriteBool(LoadLowDeviceLimit);
      }
      if (LoadPriority != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(LoadPriority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HierarchyType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HierarchyType);
      }
      if (TileSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TileSize);
      }
      if (LoadMinDistanceLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoadMinDistanceLimit);
      }
      if (LoadMaxDistanceLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoadMaxDistanceLimit);
      }
      if (LoadMinHeightLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoadMinHeightLimit);
      }
      if (LoadMaxHeightLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoadMaxHeightLimit);
      }
      if (LoadLowDeviceLimit != false) {
        size += 1 + 1;
      }
      if (LoadPriority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoadPriority);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BRSceneHierarchyConfig other) {
      if (other == null) {
        return;
      }
      if (other.HierarchyType != 0) {
        HierarchyType = other.HierarchyType;
      }
      if (other.TileSize != 0) {
        TileSize = other.TileSize;
      }
      if (other.LoadMinDistanceLimit != 0) {
        LoadMinDistanceLimit = other.LoadMinDistanceLimit;
      }
      if (other.LoadMaxDistanceLimit != 0) {
        LoadMaxDistanceLimit = other.LoadMaxDistanceLimit;
      }
      if (other.LoadMinHeightLimit != 0) {
        LoadMinHeightLimit = other.LoadMinHeightLimit;
      }
      if (other.LoadMaxHeightLimit != 0) {
        LoadMaxHeightLimit = other.LoadMaxHeightLimit;
      }
      if (other.LoadLowDeviceLimit != false) {
        LoadLowDeviceLimit = other.LoadLowDeviceLimit;
      }
      if (other.LoadPriority != 0) {
        LoadPriority = other.LoadPriority;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HierarchyType = input.ReadInt32();
            break;
          }
          case 16: {
            TileSize = input.ReadInt32();
            break;
          }
          case 24: {
            LoadMinDistanceLimit = input.ReadInt32();
            break;
          }
          case 32: {
            LoadMaxDistanceLimit = input.ReadInt32();
            break;
          }
          case 40: {
            LoadMinHeightLimit = input.ReadInt32();
            break;
          }
          case 48: {
            LoadMaxHeightLimit = input.ReadInt32();
            break;
          }
          case 56: {
            LoadLowDeviceLimit = input.ReadBool();
            break;
          }
          case 64: {
            LoadPriority = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BRSceneHierarchyConfig_Array : pb::IMessage<BRSceneHierarchyConfig_Array> {
    private static readonly pb::MessageParser<BRSceneHierarchyConfig_Array> _parser = new pb::MessageParser<BRSceneHierarchyConfig_Array>(() => new BRSceneHierarchyConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BRSceneHierarchyConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansBrscenehierarchyconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRSceneHierarchyConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRSceneHierarchyConfig_Array(BRSceneHierarchyConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRSceneHierarchyConfig_Array Clone() {
      return new BRSceneHierarchyConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.BRSceneHierarchyConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.BRSceneHierarchyConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.BRSceneHierarchyConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.BRSceneHierarchyConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.BRSceneHierarchyConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BRSceneHierarchyConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BRSceneHierarchyConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BRSceneHierarchyConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
