// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_brscenetilinginfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_brscenetilinginfo.proto</summary>
  public static partial class XlsBeansBrscenetilinginfoReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_brscenetilinginfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansBrscenetilinginfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiF4bHNfYmVhbnNfYnJzY2VuZXRpbGluZ2luZm8ucHJvdG8SCkQxMS5QYmVh",
            "bnMifwoRQlJTY2VuZVRpbGluZ0luZm8SDwoHV29ybGRJZBgBIAEoBRIOCgZa",
            "b25lSWQYAiABKAUSFQoNSGllcmFyY2h5VHlwZRgDIAEoBRIOCgZJbmRleFgY",
            "BCABKAUSDgoGSW5kZXhaGAUgASgFEhIKClRpbGluZ1BhdGgYBiABKAkiRwoX",
            "QlJTY2VuZVRpbGluZ0luZm9fQXJyYXkSLAoFaXRlbXMYASADKAsyHS5EMTEu",
            "UGJlYW5zLkJSU2NlbmVUaWxpbmdJbmZvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.BRSceneTilingInfo), global::D11.Pbeans.BRSceneTilingInfo.Parser, new[]{ "WorldId", "ZoneId", "HierarchyType", "IndexX", "IndexZ", "TilingPath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.BRSceneTilingInfo_Array), global::D11.Pbeans.BRSceneTilingInfo_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BRSceneTilingInfo : pb::IMessage<BRSceneTilingInfo> {
    private static readonly pb::MessageParser<BRSceneTilingInfo> _parser = new pb::MessageParser<BRSceneTilingInfo>(() => new BRSceneTilingInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BRSceneTilingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansBrscenetilinginfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRSceneTilingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRSceneTilingInfo(BRSceneTilingInfo other) : this() {
      worldId_ = other.worldId_;
      zoneId_ = other.zoneId_;
      hierarchyType_ = other.hierarchyType_;
      indexX_ = other.indexX_;
      indexZ_ = other.indexZ_;
      tilingPath_ = other.tilingPath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRSceneTilingInfo Clone() {
      return new BRSceneTilingInfo(this);
    }

    /// <summary>Field number for the "WorldId" field.</summary>
    public const int WorldIdFieldNumber = 1;
    private int worldId_;
    /// <summary>
    /// 世界ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WorldId {
      get { return worldId_; }
      set {
        worldId_ = value;
      }
    }

    /// <summary>Field number for the "ZoneId" field.</summary>
    public const int ZoneIdFieldNumber = 2;
    private int zoneId_;
    /// <summary>
    /// 分区ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = value;
      }
    }

    /// <summary>Field number for the "HierarchyType" field.</summary>
    public const int HierarchyTypeFieldNumber = 3;
    private int hierarchyType_;
    /// <summary>
    /// 层级类别 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HierarchyType {
      get { return hierarchyType_; }
      set {
        hierarchyType_ = value;
      }
    }

    /// <summary>Field number for the "IndexX" field.</summary>
    public const int IndexXFieldNumber = 4;
    private int indexX_;
    /// <summary>
    /// 索引号X 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IndexX {
      get { return indexX_; }
      set {
        indexX_ = value;
      }
    }

    /// <summary>Field number for the "IndexZ" field.</summary>
    public const int IndexZFieldNumber = 5;
    private int indexZ_;
    /// <summary>
    /// 索引号Z 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IndexZ {
      get { return indexZ_; }
      set {
        indexZ_ = value;
      }
    }

    /// <summary>Field number for the "TilingPath" field.</summary>
    public const int TilingPathFieldNumber = 6;
    private string tilingPath_ = "";
    /// <summary>
    /// 场景分块路径 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TilingPath {
      get { return tilingPath_; }
      set {
        tilingPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BRSceneTilingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BRSceneTilingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldId != other.WorldId) return false;
      if (ZoneId != other.ZoneId) return false;
      if (HierarchyType != other.HierarchyType) return false;
      if (IndexX != other.IndexX) return false;
      if (IndexZ != other.IndexZ) return false;
      if (TilingPath != other.TilingPath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorldId != 0) hash ^= WorldId.GetHashCode();
      if (ZoneId != 0) hash ^= ZoneId.GetHashCode();
      if (HierarchyType != 0) hash ^= HierarchyType.GetHashCode();
      if (IndexX != 0) hash ^= IndexX.GetHashCode();
      if (IndexZ != 0) hash ^= IndexZ.GetHashCode();
      if (TilingPath.Length != 0) hash ^= TilingPath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorldId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WorldId);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ZoneId);
      }
      if (HierarchyType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HierarchyType);
      }
      if (IndexX != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IndexX);
      }
      if (IndexZ != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(IndexZ);
      }
      if (TilingPath.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TilingPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorldId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WorldId);
      }
      if (ZoneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneId);
      }
      if (HierarchyType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HierarchyType);
      }
      if (IndexX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IndexX);
      }
      if (IndexZ != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IndexZ);
      }
      if (TilingPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TilingPath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BRSceneTilingInfo other) {
      if (other == null) {
        return;
      }
      if (other.WorldId != 0) {
        WorldId = other.WorldId;
      }
      if (other.ZoneId != 0) {
        ZoneId = other.ZoneId;
      }
      if (other.HierarchyType != 0) {
        HierarchyType = other.HierarchyType;
      }
      if (other.IndexX != 0) {
        IndexX = other.IndexX;
      }
      if (other.IndexZ != 0) {
        IndexZ = other.IndexZ;
      }
      if (other.TilingPath.Length != 0) {
        TilingPath = other.TilingPath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WorldId = input.ReadInt32();
            break;
          }
          case 16: {
            ZoneId = input.ReadInt32();
            break;
          }
          case 24: {
            HierarchyType = input.ReadInt32();
            break;
          }
          case 32: {
            IndexX = input.ReadInt32();
            break;
          }
          case 40: {
            IndexZ = input.ReadInt32();
            break;
          }
          case 50: {
            TilingPath = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BRSceneTilingInfo_Array : pb::IMessage<BRSceneTilingInfo_Array> {
    private static readonly pb::MessageParser<BRSceneTilingInfo_Array> _parser = new pb::MessageParser<BRSceneTilingInfo_Array>(() => new BRSceneTilingInfo_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BRSceneTilingInfo_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansBrscenetilinginfoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRSceneTilingInfo_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRSceneTilingInfo_Array(BRSceneTilingInfo_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRSceneTilingInfo_Array Clone() {
      return new BRSceneTilingInfo_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.BRSceneTilingInfo> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.BRSceneTilingInfo.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.BRSceneTilingInfo> items_ = new pbc::RepeatedField<global::D11.Pbeans.BRSceneTilingInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.BRSceneTilingInfo> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BRSceneTilingInfo_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BRSceneTilingInfo_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BRSceneTilingInfo_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
