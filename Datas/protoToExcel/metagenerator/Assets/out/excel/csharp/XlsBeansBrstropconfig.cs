// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_brstropconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_brstropconfig.proto</summary>
  public static partial class XlsBeansBrstropconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_brstropconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansBrstropconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch14bHNfYmVhbnNfYnJzdHJvcGNvbmZpZy5wcm90bxIKRDExLlBiZWFucyLe",
            "AQoNQlJTdHJvcENvbmZpZxIPCgdzdHJvcElkGAEgASgNEhMKC3BsYXllcmhp",
            "Z2h0GAIgASgCEhIKCmFjY2VsZXJhdGUYAyABKAISEAoIbWF4U3BlZWQYBCAB",
            "KAISFQoNaW52ZXJzZUxlbmd0aBgFIAEoAhIcChRlbmRMZWF2ZUZvcndhcmRT",
            "cGVlZBgGIAEoAhIZChFvdXRlckZvcndhcmRTcGVlZBgHIAEoAhIUCgxvdXRl",
            "clVwU3BlZWQYCCABKAISGwoTb3V0ZXJVcFNwZWVkUGVyY2VudBgJIAEoAiI/",
            "ChNCUlN0cm9wQ29uZmlnX0FycmF5EigKBWl0ZW1zGAEgAygLMhkuRDExLlBi",
            "ZWFucy5CUlN0cm9wQ29uZmlnYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.BRStropConfig), global::D11.Pbeans.BRStropConfig.Parser, new[]{ "StropId", "Playerhight", "Accelerate", "MaxSpeed", "InverseLength", "EndLeaveForwardSpeed", "OuterForwardSpeed", "OuterUpSpeed", "OuterUpSpeedPercent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.BRStropConfig_Array), global::D11.Pbeans.BRStropConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BRStropConfig : pb::IMessage<BRStropConfig> {
    private static readonly pb::MessageParser<BRStropConfig> _parser = new pb::MessageParser<BRStropConfig>(() => new BRStropConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BRStropConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansBrstropconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRStropConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRStropConfig(BRStropConfig other) : this() {
      stropId_ = other.stropId_;
      playerhight_ = other.playerhight_;
      accelerate_ = other.accelerate_;
      maxSpeed_ = other.maxSpeed_;
      inverseLength_ = other.inverseLength_;
      endLeaveForwardSpeed_ = other.endLeaveForwardSpeed_;
      outerForwardSpeed_ = other.outerForwardSpeed_;
      outerUpSpeed_ = other.outerUpSpeed_;
      outerUpSpeedPercent_ = other.outerUpSpeedPercent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRStropConfig Clone() {
      return new BRStropConfig(this);
    }

    /// <summary>Field number for the "stropId" field.</summary>
    public const int StropIdFieldNumber = 1;
    private uint stropId_;
    /// <summary>
    /// 配置绳索类型 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StropId {
      get { return stropId_; }
      set {
        stropId_ = value;
      }
    }

    /// <summary>Field number for the "playerhight" field.</summary>
    public const int PlayerhightFieldNumber = 2;
    private float playerhight_;
    /// <summary>
    /// 玩家身高 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Playerhight {
      get { return playerhight_; }
      set {
        playerhight_ = value;
      }
    }

    /// <summary>Field number for the "accelerate" field.</summary>
    public const int AccelerateFieldNumber = 3;
    private float accelerate_;
    /// <summary>
    /// 加速度 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Accelerate {
      get { return accelerate_; }
      set {
        accelerate_ = value;
      }
    }

    /// <summary>Field number for the "maxSpeed" field.</summary>
    public const int MaxSpeedFieldNumber = 4;
    private float maxSpeed_;
    /// <summary>
    /// 最大速度 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MaxSpeed {
      get { return maxSpeed_; }
      set {
        maxSpeed_ = value;
      }
    }

    /// <summary>Field number for the "inverseLength" field.</summary>
    public const int InverseLengthFieldNumber = 5;
    private float inverseLength_;
    /// <summary>
    /// 登上滑索时的反向距离 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float InverseLength {
      get { return inverseLength_; }
      set {
        inverseLength_ = value;
      }
    }

    /// <summary>Field number for the "endLeaveForwardSpeed" field.</summary>
    public const int EndLeaveForwardSpeedFieldNumber = 6;
    private float endLeaveForwardSpeed_;
    /// <summary>
    /// 垂直滑索由低到高的离开时水平速度 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float EndLeaveForwardSpeed {
      get { return endLeaveForwardSpeed_; }
      set {
        endLeaveForwardSpeed_ = value;
      }
    }

    /// <summary>Field number for the "outerForwardSpeed" field.</summary>
    public const int OuterForwardSpeedFieldNumber = 7;
    private float outerForwardSpeed_;
    /// <summary>
    /// 垂直滑索中途退出滑索的向前速度 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float OuterForwardSpeed {
      get { return outerForwardSpeed_; }
      set {
        outerForwardSpeed_ = value;
      }
    }

    /// <summary>Field number for the "outerUpSpeed" field.</summary>
    public const int OuterUpSpeedFieldNumber = 8;
    private float outerUpSpeed_;
    /// <summary>
    /// 水平滑索中途退出滑索的向上速度 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float OuterUpSpeed {
      get { return outerUpSpeed_; }
      set {
        outerUpSpeed_ = value;
      }
    }

    /// <summary>Field number for the "outerUpSpeedPercent" field.</summary>
    public const int OuterUpSpeedPercentFieldNumber = 9;
    private float outerUpSpeedPercent_;
    /// <summary>
    /// 水平滑索中途退出滑索的向上速度继承比例,1为完全继承 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float OuterUpSpeedPercent {
      get { return outerUpSpeedPercent_; }
      set {
        outerUpSpeedPercent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BRStropConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BRStropConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StropId != other.StropId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Playerhight, other.Playerhight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Accelerate, other.Accelerate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxSpeed, other.MaxSpeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(InverseLength, other.InverseLength)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EndLeaveForwardSpeed, other.EndLeaveForwardSpeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OuterForwardSpeed, other.OuterForwardSpeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OuterUpSpeed, other.OuterUpSpeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OuterUpSpeedPercent, other.OuterUpSpeedPercent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StropId != 0) hash ^= StropId.GetHashCode();
      if (Playerhight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Playerhight);
      if (Accelerate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Accelerate);
      if (MaxSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxSpeed);
      if (InverseLength != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(InverseLength);
      if (EndLeaveForwardSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EndLeaveForwardSpeed);
      if (OuterForwardSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OuterForwardSpeed);
      if (OuterUpSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OuterUpSpeed);
      if (OuterUpSpeedPercent != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OuterUpSpeedPercent);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StropId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StropId);
      }
      if (Playerhight != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Playerhight);
      }
      if (Accelerate != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Accelerate);
      }
      if (MaxSpeed != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(MaxSpeed);
      }
      if (InverseLength != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(InverseLength);
      }
      if (EndLeaveForwardSpeed != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(EndLeaveForwardSpeed);
      }
      if (OuterForwardSpeed != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(OuterForwardSpeed);
      }
      if (OuterUpSpeed != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(OuterUpSpeed);
      }
      if (OuterUpSpeedPercent != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(OuterUpSpeedPercent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StropId);
      }
      if (Playerhight != 0F) {
        size += 1 + 4;
      }
      if (Accelerate != 0F) {
        size += 1 + 4;
      }
      if (MaxSpeed != 0F) {
        size += 1 + 4;
      }
      if (InverseLength != 0F) {
        size += 1 + 4;
      }
      if (EndLeaveForwardSpeed != 0F) {
        size += 1 + 4;
      }
      if (OuterForwardSpeed != 0F) {
        size += 1 + 4;
      }
      if (OuterUpSpeed != 0F) {
        size += 1 + 4;
      }
      if (OuterUpSpeedPercent != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BRStropConfig other) {
      if (other == null) {
        return;
      }
      if (other.StropId != 0) {
        StropId = other.StropId;
      }
      if (other.Playerhight != 0F) {
        Playerhight = other.Playerhight;
      }
      if (other.Accelerate != 0F) {
        Accelerate = other.Accelerate;
      }
      if (other.MaxSpeed != 0F) {
        MaxSpeed = other.MaxSpeed;
      }
      if (other.InverseLength != 0F) {
        InverseLength = other.InverseLength;
      }
      if (other.EndLeaveForwardSpeed != 0F) {
        EndLeaveForwardSpeed = other.EndLeaveForwardSpeed;
      }
      if (other.OuterForwardSpeed != 0F) {
        OuterForwardSpeed = other.OuterForwardSpeed;
      }
      if (other.OuterUpSpeed != 0F) {
        OuterUpSpeed = other.OuterUpSpeed;
      }
      if (other.OuterUpSpeedPercent != 0F) {
        OuterUpSpeedPercent = other.OuterUpSpeedPercent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StropId = input.ReadUInt32();
            break;
          }
          case 21: {
            Playerhight = input.ReadFloat();
            break;
          }
          case 29: {
            Accelerate = input.ReadFloat();
            break;
          }
          case 37: {
            MaxSpeed = input.ReadFloat();
            break;
          }
          case 45: {
            InverseLength = input.ReadFloat();
            break;
          }
          case 53: {
            EndLeaveForwardSpeed = input.ReadFloat();
            break;
          }
          case 61: {
            OuterForwardSpeed = input.ReadFloat();
            break;
          }
          case 69: {
            OuterUpSpeed = input.ReadFloat();
            break;
          }
          case 77: {
            OuterUpSpeedPercent = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BRStropConfig_Array : pb::IMessage<BRStropConfig_Array> {
    private static readonly pb::MessageParser<BRStropConfig_Array> _parser = new pb::MessageParser<BRStropConfig_Array>(() => new BRStropConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BRStropConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansBrstropconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRStropConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRStropConfig_Array(BRStropConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BRStropConfig_Array Clone() {
      return new BRStropConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.BRStropConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.BRStropConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.BRStropConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.BRStropConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.BRStropConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BRStropConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BRStropConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BRStropConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
