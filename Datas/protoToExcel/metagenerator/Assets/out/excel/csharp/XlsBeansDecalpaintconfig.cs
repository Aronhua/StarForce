// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_decalpaintconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_decalpaintconfig.proto</summary>
  public static partial class XlsBeansDecalpaintconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_decalpaintconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansDecalpaintconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiB4bHNfYmVhbnNfZGVjYWxwYWludGNvbmZpZy5wcm90bxIKRDExLlBiZWFu",
            "cyJdChBEZWNhbFBhaW50Q29uZmlnEgoKAmlkGAEgASgNEj0KC01vZGVsQ29u",
            "ZmlnGAIgAygLMiguRDExLlBiZWFucy5EZWNhbFBhaW50Q29uZmlnX01vZGVs",
            "Q29uZmlnIp8BChxEZWNhbFBhaW50Q29uZmlnX01vZGVsQ29uZmlnEhEKCUFP",
            "VGV4dHVyZRgBIAEoCRIUCgxXZWFyV2lkdGhNaW4YAiABKAISFAoMV2Vhcldp",
            "ZHRoTWF4GAMgASgCEhQKDFdlYXJSZW1hcE1pbhgEIAEoAhIUCgxXZWFyUmVt",
            "YXBNaWQYBSABKAISFAoMV2VhclJlbWFwTWF4GAYgASgCIkUKFkRlY2FsUGFp",
            "bnRDb25maWdfQXJyYXkSKwoFaXRlbXMYASADKAsyHC5EMTEuUGJlYW5zLkRl",
            "Y2FsUGFpbnRDb25maWdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.DecalPaintConfig), global::D11.Pbeans.DecalPaintConfig.Parser, new[]{ "Id", "ModelConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.DecalPaintConfig_ModelConfig), global::D11.Pbeans.DecalPaintConfig_ModelConfig.Parser, new[]{ "AOTexture", "WearWidthMin", "WearWidthMax", "WearRemapMin", "WearRemapMid", "WearRemapMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.DecalPaintConfig_Array), global::D11.Pbeans.DecalPaintConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DecalPaintConfig : pb::IMessage<DecalPaintConfig> {
    private static readonly pb::MessageParser<DecalPaintConfig> _parser = new pb::MessageParser<DecalPaintConfig>(() => new DecalPaintConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DecalPaintConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansDecalpaintconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecalPaintConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecalPaintConfig(DecalPaintConfig other) : this() {
      id_ = other.id_;
      modelConfig_ = other.modelConfig_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecalPaintConfig Clone() {
      return new DecalPaintConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// config的id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "ModelConfig" field.</summary>
    public const int ModelConfigFieldNumber = 2;
    private static readonly pb::FieldCodec<global::D11.Pbeans.DecalPaintConfig_ModelConfig> _repeated_modelConfig_codec
        = pb::FieldCodec.ForMessage(18, global::D11.Pbeans.DecalPaintConfig_ModelConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.DecalPaintConfig_ModelConfig> modelConfig_ = new pbc::RepeatedField<global::D11.Pbeans.DecalPaintConfig_ModelConfig>();
    /// <summary>
    /// AO路径，相对于"Assets\Bundle\Textures\_hd\Decals\Base" 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.DecalPaintConfig_ModelConfig> ModelConfig {
      get { return modelConfig_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DecalPaintConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DecalPaintConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!modelConfig_.Equals(other.modelConfig_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= modelConfig_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      modelConfig_.WriteTo(output, _repeated_modelConfig_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      size += modelConfig_.CalculateSize(_repeated_modelConfig_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DecalPaintConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      modelConfig_.Add(other.modelConfig_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            modelConfig_.AddEntriesFrom(input, _repeated_modelConfig_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DecalPaintConfig_ModelConfig : pb::IMessage<DecalPaintConfig_ModelConfig> {
    private static readonly pb::MessageParser<DecalPaintConfig_ModelConfig> _parser = new pb::MessageParser<DecalPaintConfig_ModelConfig>(() => new DecalPaintConfig_ModelConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DecalPaintConfig_ModelConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansDecalpaintconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecalPaintConfig_ModelConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecalPaintConfig_ModelConfig(DecalPaintConfig_ModelConfig other) : this() {
      aOTexture_ = other.aOTexture_;
      wearWidthMin_ = other.wearWidthMin_;
      wearWidthMax_ = other.wearWidthMax_;
      wearRemapMin_ = other.wearRemapMin_;
      wearRemapMid_ = other.wearRemapMid_;
      wearRemapMax_ = other.wearRemapMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecalPaintConfig_ModelConfig Clone() {
      return new DecalPaintConfig_ModelConfig(this);
    }

    /// <summary>Field number for the "AOTexture" field.</summary>
    public const int AOTextureFieldNumber = 1;
    private string aOTexture_ = "";
    /// <summary>
    /// AO路径，相对于"Assets\Bundle\Textures\_hd\Decals\Base" 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AOTexture {
      get { return aOTexture_; }
      set {
        aOTexture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "WearWidthMin" field.</summary>
    public const int WearWidthMinFieldNumber = 2;
    private float wearWidthMin_;
    /// <summary>
    /// 最小磨损值 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float WearWidthMin {
      get { return wearWidthMin_; }
      set {
        wearWidthMin_ = value;
      }
    }

    /// <summary>Field number for the "WearWidthMax" field.</summary>
    public const int WearWidthMaxFieldNumber = 3;
    private float wearWidthMax_;
    /// <summary>
    /// 最大磨损值 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float WearWidthMax {
      get { return wearWidthMax_; }
      set {
        wearWidthMax_ = value;
      }
    }

    /// <summary>Field number for the "WearRemapMin" field.</summary>
    public const int WearRemapMinFieldNumber = 4;
    private float wearRemapMin_;
    /// <summary>
    /// 最小磨损映射值 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float WearRemapMin {
      get { return wearRemapMin_; }
      set {
        wearRemapMin_ = value;
      }
    }

    /// <summary>Field number for the "WearRemapMid" field.</summary>
    public const int WearRemapMidFieldNumber = 5;
    private float wearRemapMid_;
    /// <summary>
    /// 中间磨损映射值 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float WearRemapMid {
      get { return wearRemapMid_; }
      set {
        wearRemapMid_ = value;
      }
    }

    /// <summary>Field number for the "WearRemapMax" field.</summary>
    public const int WearRemapMaxFieldNumber = 6;
    private float wearRemapMax_;
    /// <summary>
    /// 最大磨损映射值 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float WearRemapMax {
      get { return wearRemapMax_; }
      set {
        wearRemapMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DecalPaintConfig_ModelConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DecalPaintConfig_ModelConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AOTexture != other.AOTexture) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WearWidthMin, other.WearWidthMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WearWidthMax, other.WearWidthMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WearRemapMin, other.WearRemapMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WearRemapMid, other.WearRemapMid)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WearRemapMax, other.WearRemapMax)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AOTexture.Length != 0) hash ^= AOTexture.GetHashCode();
      if (WearWidthMin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WearWidthMin);
      if (WearWidthMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WearWidthMax);
      if (WearRemapMin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WearRemapMin);
      if (WearRemapMid != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WearRemapMid);
      if (WearRemapMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WearRemapMax);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AOTexture.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AOTexture);
      }
      if (WearWidthMin != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(WearWidthMin);
      }
      if (WearWidthMax != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(WearWidthMax);
      }
      if (WearRemapMin != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(WearRemapMin);
      }
      if (WearRemapMid != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(WearRemapMid);
      }
      if (WearRemapMax != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(WearRemapMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AOTexture.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AOTexture);
      }
      if (WearWidthMin != 0F) {
        size += 1 + 4;
      }
      if (WearWidthMax != 0F) {
        size += 1 + 4;
      }
      if (WearRemapMin != 0F) {
        size += 1 + 4;
      }
      if (WearRemapMid != 0F) {
        size += 1 + 4;
      }
      if (WearRemapMax != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DecalPaintConfig_ModelConfig other) {
      if (other == null) {
        return;
      }
      if (other.AOTexture.Length != 0) {
        AOTexture = other.AOTexture;
      }
      if (other.WearWidthMin != 0F) {
        WearWidthMin = other.WearWidthMin;
      }
      if (other.WearWidthMax != 0F) {
        WearWidthMax = other.WearWidthMax;
      }
      if (other.WearRemapMin != 0F) {
        WearRemapMin = other.WearRemapMin;
      }
      if (other.WearRemapMid != 0F) {
        WearRemapMid = other.WearRemapMid;
      }
      if (other.WearRemapMax != 0F) {
        WearRemapMax = other.WearRemapMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AOTexture = input.ReadString();
            break;
          }
          case 21: {
            WearWidthMin = input.ReadFloat();
            break;
          }
          case 29: {
            WearWidthMax = input.ReadFloat();
            break;
          }
          case 37: {
            WearRemapMin = input.ReadFloat();
            break;
          }
          case 45: {
            WearRemapMid = input.ReadFloat();
            break;
          }
          case 53: {
            WearRemapMax = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DecalPaintConfig_Array : pb::IMessage<DecalPaintConfig_Array> {
    private static readonly pb::MessageParser<DecalPaintConfig_Array> _parser = new pb::MessageParser<DecalPaintConfig_Array>(() => new DecalPaintConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DecalPaintConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansDecalpaintconfigReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecalPaintConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecalPaintConfig_Array(DecalPaintConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecalPaintConfig_Array Clone() {
      return new DecalPaintConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.DecalPaintConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.DecalPaintConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.DecalPaintConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.DecalPaintConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.DecalPaintConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DecalPaintConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DecalPaintConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DecalPaintConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
