// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_decoyweapondatatable.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_decoyweapondatatable.proto</summary>
  public static partial class XlsBeansDecoyweapondatatableReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_decoyweapondatatable.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansDecoyweapondatatableReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiR4bHNfYmVhbnNfZGVjb3l3ZWFwb25kYXRhdGFibGUucHJvdG8SCkQxMS5Q",
            "YmVhbnMifgoURGVjb3lXZWFwb25EYXRhVGFibGUSCgoCaWQYASABKA0SEAoI",
            "TWluU2hvdHMYAiABKA0SEAoITWF4U2hvdHMYAyABKA0SEAoIUGF1c2VNaW4Y",
            "BCABKAISEAoIUGF1c2VNYXgYBSABKAISEgoKRXh0cmFEZWxheRgGIAEoAiJN",
            "ChpEZWNveVdlYXBvbkRhdGFUYWJsZV9BcnJheRIvCgVpdGVtcxgBIAMoCzIg",
            "LkQxMS5QYmVhbnMuRGVjb3lXZWFwb25EYXRhVGFibGViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.DecoyWeaponDataTable), global::D11.Pbeans.DecoyWeaponDataTable.Parser, new[]{ "Id", "MinShots", "MaxShots", "PauseMin", "PauseMax", "ExtraDelay" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.DecoyWeaponDataTable_Array), global::D11.Pbeans.DecoyWeaponDataTable_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DecoyWeaponDataTable : pb::IMessage<DecoyWeaponDataTable> {
    private static readonly pb::MessageParser<DecoyWeaponDataTable> _parser = new pb::MessageParser<DecoyWeaponDataTable>(() => new DecoyWeaponDataTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DecoyWeaponDataTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansDecoyweapondatatableReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecoyWeaponDataTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecoyWeaponDataTable(DecoyWeaponDataTable other) : this() {
      id_ = other.id_;
      minShots_ = other.minShots_;
      maxShots_ = other.maxShots_;
      pauseMin_ = other.pauseMin_;
      pauseMax_ = other.pauseMax_;
      extraDelay_ = other.extraDelay_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecoyWeaponDataTable Clone() {
      return new DecoyWeaponDataTable(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 编号 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "MinShots" field.</summary>
    public const int MinShotsFieldNumber = 2;
    private uint minShots_;
    /// <summary>
    /// 最小射击数 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MinShots {
      get { return minShots_; }
      set {
        minShots_ = value;
      }
    }

    /// <summary>Field number for the "MaxShots" field.</summary>
    public const int MaxShotsFieldNumber = 3;
    private uint maxShots_;
    /// <summary>
    /// 最大射击数 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxShots {
      get { return maxShots_; }
      set {
        maxShots_ = value;
      }
    }

    /// <summary>Field number for the "PauseMin" field.</summary>
    public const int PauseMinFieldNumber = 4;
    private float pauseMin_;
    /// <summary>
    /// 最小暂停时间 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PauseMin {
      get { return pauseMin_; }
      set {
        pauseMin_ = value;
      }
    }

    /// <summary>Field number for the "PauseMax" field.</summary>
    public const int PauseMaxFieldNumber = 5;
    private float pauseMax_;
    /// <summary>
    /// 最大暂停时间 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PauseMax {
      get { return pauseMax_; }
      set {
        pauseMax_ = value;
      }
    }

    /// <summary>Field number for the "ExtraDelay" field.</summary>
    public const int ExtraDelayFieldNumber = 6;
    private float extraDelay_;
    /// <summary>
    /// 额外时间 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ExtraDelay {
      get { return extraDelay_; }
      set {
        extraDelay_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DecoyWeaponDataTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DecoyWeaponDataTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MinShots != other.MinShots) return false;
      if (MaxShots != other.MaxShots) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PauseMin, other.PauseMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PauseMax, other.PauseMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExtraDelay, other.ExtraDelay)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (MinShots != 0) hash ^= MinShots.GetHashCode();
      if (MaxShots != 0) hash ^= MaxShots.GetHashCode();
      if (PauseMin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PauseMin);
      if (PauseMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PauseMax);
      if (ExtraDelay != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExtraDelay);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (MinShots != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MinShots);
      }
      if (MaxShots != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MaxShots);
      }
      if (PauseMin != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PauseMin);
      }
      if (PauseMax != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(PauseMax);
      }
      if (ExtraDelay != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(ExtraDelay);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (MinShots != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinShots);
      }
      if (MaxShots != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxShots);
      }
      if (PauseMin != 0F) {
        size += 1 + 4;
      }
      if (PauseMax != 0F) {
        size += 1 + 4;
      }
      if (ExtraDelay != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DecoyWeaponDataTable other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.MinShots != 0) {
        MinShots = other.MinShots;
      }
      if (other.MaxShots != 0) {
        MaxShots = other.MaxShots;
      }
      if (other.PauseMin != 0F) {
        PauseMin = other.PauseMin;
      }
      if (other.PauseMax != 0F) {
        PauseMax = other.PauseMax;
      }
      if (other.ExtraDelay != 0F) {
        ExtraDelay = other.ExtraDelay;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            MinShots = input.ReadUInt32();
            break;
          }
          case 24: {
            MaxShots = input.ReadUInt32();
            break;
          }
          case 37: {
            PauseMin = input.ReadFloat();
            break;
          }
          case 45: {
            PauseMax = input.ReadFloat();
            break;
          }
          case 53: {
            ExtraDelay = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DecoyWeaponDataTable_Array : pb::IMessage<DecoyWeaponDataTable_Array> {
    private static readonly pb::MessageParser<DecoyWeaponDataTable_Array> _parser = new pb::MessageParser<DecoyWeaponDataTable_Array>(() => new DecoyWeaponDataTable_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DecoyWeaponDataTable_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansDecoyweapondatatableReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecoyWeaponDataTable_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecoyWeaponDataTable_Array(DecoyWeaponDataTable_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecoyWeaponDataTable_Array Clone() {
      return new DecoyWeaponDataTable_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.DecoyWeaponDataTable> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.DecoyWeaponDataTable.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.DecoyWeaponDataTable> items_ = new pbc::RepeatedField<global::D11.Pbeans.DecoyWeaponDataTable>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.DecoyWeaponDataTable> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DecoyWeaponDataTable_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DecoyWeaponDataTable_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DecoyWeaponDataTable_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
