// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_equipmentdropconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_equipmentdropconfig.proto</summary>
  public static partial class XlsBeansEquipmentdropconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_equipmentdropconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansEquipmentdropconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiN4bHNfYmVhbnNfZXF1aXBtZW50ZHJvcGNvbmZpZy5wcm90bxIKRDExLlBi",
            "ZWFucyK0AQoTRXF1aXBtZW50RHJvcENvbmZpZxIKCgJJRBgBIAEoDRIRCglk",
            "cm9wUG9pbnQYAiABKA0SEwoLaW5pdGlhbFRpbWUYAyABKA0SEAoIZHJvcFJ1",
            "bGUYBCABKA0SEAoIZHJvcFRpbWUYBSABKA0SEAoIZHJvcEtpbmQYBiABKA0S",
            "DgoGaXRlbUlkGAcgASgNEhEKCWl0ZW1WYWx1ZRgIIAEoDRIQCghJdGVtVHlw",
            "ZRgJIAEoDSJLChlFcXVpcG1lbnREcm9wQ29uZmlnX0FycmF5Ei4KBWl0ZW1z",
            "GAEgAygLMh8uRDExLlBiZWFucy5FcXVpcG1lbnREcm9wQ29uZmlnYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.EquipmentDropConfig), global::D11.Pbeans.EquipmentDropConfig.Parser, new[]{ "ID", "DropPoint", "InitialTime", "DropRule", "DropTime", "DropKind", "ItemId", "ItemValue", "ItemType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.EquipmentDropConfig_Array), global::D11.Pbeans.EquipmentDropConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EquipmentDropConfig : pb::IMessage<EquipmentDropConfig> {
    private static readonly pb::MessageParser<EquipmentDropConfig> _parser = new pb::MessageParser<EquipmentDropConfig>(() => new EquipmentDropConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipmentDropConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansEquipmentdropconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentDropConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentDropConfig(EquipmentDropConfig other) : this() {
      iD_ = other.iD_;
      dropPoint_ = other.dropPoint_;
      initialTime_ = other.initialTime_;
      dropRule_ = other.dropRule_;
      dropTime_ = other.dropTime_;
      dropKind_ = other.dropKind_;
      itemId_ = other.itemId_;
      itemValue_ = other.itemValue_;
      itemType_ = other.itemType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentDropConfig Clone() {
      return new EquipmentDropConfig(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private uint iD_;
    /// <summary>
    /// 玩法地图ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "dropPoint" field.</summary>
    public const int DropPointFieldNumber = 2;
    private uint dropPoint_;
    /// <summary>
    /// 刷新点ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DropPoint {
      get { return dropPoint_; }
      set {
        dropPoint_ = value;
      }
    }

    /// <summary>Field number for the "initialTime" field.</summary>
    public const int InitialTimeFieldNumber = 3;
    private uint initialTime_;
    /// <summary>
    /// 开局刷新时间（s :≥10000不刷） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint InitialTime {
      get { return initialTime_; }
      set {
        initialTime_ = value;
      }
    }

    /// <summary>Field number for the "dropRule" field.</summary>
    public const int DropRuleFieldNumber = 4;
    private uint dropRule_;
    /// <summary>
    /// 刷新规则（1拾取刷新，2固定刷新,3刷新一次,4不生成物体） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DropRule {
      get { return dropRule_; }
      set {
        dropRule_ = value;
      }
    }

    /// <summary>Field number for the "dropTime" field.</summary>
    public const int DropTimeFieldNumber = 5;
    private uint dropTime_;
    /// <summary>
    /// 刷新时间（s） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DropTime {
      get { return dropTime_; }
      set {
        dropTime_ = value;
      }
    }

    /// <summary>Field number for the "dropKind" field.</summary>
    public const int DropKindFieldNumber = 6;
    private uint dropKind_;
    /// <summary>
    /// 掉落种类（0：item掉落） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DropKind {
      get { return dropKind_; }
      set {
        dropKind_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 7;
    private uint itemId_;
    /// <summary>
    /// 物品id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "itemValue" field.</summary>
    public const int ItemValueFieldNumber = 8;
    private uint itemValue_;
    /// <summary>
    /// 数量 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemValue {
      get { return itemValue_; }
      set {
        itemValue_ = value;
      }
    }

    /// <summary>Field number for the "ItemType" field.</summary>
    public const int ItemTypeFieldNumber = 9;
    private uint itemType_;
    /// <summary>
    /// 固定掉落类型（防止某些时候整个地方配置其它类型物品） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemType {
      get { return itemType_; }
      set {
        itemType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipmentDropConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipmentDropConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (DropPoint != other.DropPoint) return false;
      if (InitialTime != other.InitialTime) return false;
      if (DropRule != other.DropRule) return false;
      if (DropTime != other.DropTime) return false;
      if (DropKind != other.DropKind) return false;
      if (ItemId != other.ItemId) return false;
      if (ItemValue != other.ItemValue) return false;
      if (ItemType != other.ItemType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (DropPoint != 0) hash ^= DropPoint.GetHashCode();
      if (InitialTime != 0) hash ^= InitialTime.GetHashCode();
      if (DropRule != 0) hash ^= DropRule.GetHashCode();
      if (DropTime != 0) hash ^= DropTime.GetHashCode();
      if (DropKind != 0) hash ^= DropKind.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (ItemValue != 0) hash ^= ItemValue.GetHashCode();
      if (ItemType != 0) hash ^= ItemType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ID);
      }
      if (DropPoint != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(DropPoint);
      }
      if (InitialTime != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(InitialTime);
      }
      if (DropRule != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(DropRule);
      }
      if (DropTime != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(DropTime);
      }
      if (DropKind != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(DropKind);
      }
      if (ItemId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ItemId);
      }
      if (ItemValue != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(ItemValue);
      }
      if (ItemType != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(ItemType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ID);
      }
      if (DropPoint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DropPoint);
      }
      if (InitialTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InitialTime);
      }
      if (DropRule != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DropRule);
      }
      if (DropTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DropTime);
      }
      if (DropKind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DropKind);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
      }
      if (ItemValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemValue);
      }
      if (ItemType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipmentDropConfig other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.DropPoint != 0) {
        DropPoint = other.DropPoint;
      }
      if (other.InitialTime != 0) {
        InitialTime = other.InitialTime;
      }
      if (other.DropRule != 0) {
        DropRule = other.DropRule;
      }
      if (other.DropTime != 0) {
        DropTime = other.DropTime;
      }
      if (other.DropKind != 0) {
        DropKind = other.DropKind;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.ItemValue != 0) {
        ItemValue = other.ItemValue;
      }
      if (other.ItemType != 0) {
        ItemType = other.ItemType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadUInt32();
            break;
          }
          case 16: {
            DropPoint = input.ReadUInt32();
            break;
          }
          case 24: {
            InitialTime = input.ReadUInt32();
            break;
          }
          case 32: {
            DropRule = input.ReadUInt32();
            break;
          }
          case 40: {
            DropTime = input.ReadUInt32();
            break;
          }
          case 48: {
            DropKind = input.ReadUInt32();
            break;
          }
          case 56: {
            ItemId = input.ReadUInt32();
            break;
          }
          case 64: {
            ItemValue = input.ReadUInt32();
            break;
          }
          case 72: {
            ItemType = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EquipmentDropConfig_Array : pb::IMessage<EquipmentDropConfig_Array> {
    private static readonly pb::MessageParser<EquipmentDropConfig_Array> _parser = new pb::MessageParser<EquipmentDropConfig_Array>(() => new EquipmentDropConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipmentDropConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansEquipmentdropconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentDropConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentDropConfig_Array(EquipmentDropConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipmentDropConfig_Array Clone() {
      return new EquipmentDropConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.EquipmentDropConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.EquipmentDropConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.EquipmentDropConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.EquipmentDropConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.EquipmentDropConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipmentDropConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipmentDropConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipmentDropConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
