// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_gunbufflistconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_gunbufflistconfig.proto</summary>
  public static partial class XlsBeansGunbufflistconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_gunbufflistconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansGunbufflistconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiF4bHNfYmVhbnNfZ3VuYnVmZmxpc3Rjb25maWcucHJvdG8SCkQxMS5QYmVh",
            "bnMi5wEKEUd1bkJ1ZmZMaXN0Q29uZmlnEgoKAmlkGAEgASgNEhoKEkJ1ZmZF",
            "bnRlckNvbmRpdGlvbhgCIAEoDRIZChFCdWZmRXhpdENvbmRpdGlvbhgDIAEo",
            "DRIQCghCdWZmTmFtZRgEIAEoCRIWCg5JY29uUmVzb3VyY2VJRBgFIAEoDRIP",
            "CgdCdWZmRGVzGAYgASgJEhAKCEJ1ZmZMaXN0GAcgAygNEhYKDkxpbWl0R3Vu",
            "VHlwZUlEGAggAygNEhkKEVNwZWNpZmljR3VuVHlwZUlEGAkgAygNEg8KB1F1",
            "YWxpdHkYCiABKA0iRwoXR3VuQnVmZkxpc3RDb25maWdfQXJyYXkSLAoFaXRl",
            "bXMYASADKAsyHS5EMTEuUGJlYW5zLkd1bkJ1ZmZMaXN0Q29uZmlnYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.GunBuffListConfig), global::D11.Pbeans.GunBuffListConfig.Parser, new[]{ "Id", "BuffEnterCondition", "BuffExitCondition", "BuffName", "IconResourceID", "BuffDes", "BuffList", "LimitGunTypeID", "SpecificGunTypeID", "Quality" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.GunBuffListConfig_Array), global::D11.Pbeans.GunBuffListConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GunBuffListConfig : pb::IMessage<GunBuffListConfig> {
    private static readonly pb::MessageParser<GunBuffListConfig> _parser = new pb::MessageParser<GunBuffListConfig>(() => new GunBuffListConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GunBuffListConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansGunbufflistconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunBuffListConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunBuffListConfig(GunBuffListConfig other) : this() {
      id_ = other.id_;
      buffEnterCondition_ = other.buffEnterCondition_;
      buffExitCondition_ = other.buffExitCondition_;
      buffName_ = other.buffName_;
      iconResourceID_ = other.iconResourceID_;
      buffDes_ = other.buffDes_;
      buffList_ = other.buffList_.Clone();
      limitGunTypeID_ = other.limitGunTypeID_.Clone();
      specificGunTypeID_ = other.specificGunTypeID_.Clone();
      quality_ = other.quality_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunBuffListConfig Clone() {
      return new GunBuffListConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 词条id(1000000开头弹幕词条；2000000开头数值词条) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "BuffEnterCondition" field.</summary>
    public const int BuffEnterConditionFieldNumber = 2;
    private uint buffEnterCondition_;
    /// <summary>
    /// 前置条件 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BuffEnterCondition {
      get { return buffEnterCondition_; }
      set {
        buffEnterCondition_ = value;
      }
    }

    /// <summary>Field number for the "BuffExitCondition" field.</summary>
    public const int BuffExitConditionFieldNumber = 3;
    private uint buffExitCondition_;
    /// <summary>
    /// 退出条件 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BuffExitCondition {
      get { return buffExitCondition_; }
      set {
        buffExitCondition_ = value;
      }
    }

    /// <summary>Field number for the "BuffName" field.</summary>
    public const int BuffNameFieldNumber = 4;
    private string buffName_ = "";
    /// <summary>
    /// 词条名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuffName {
      get { return buffName_; }
      set {
        buffName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IconResourceID" field.</summary>
    public const int IconResourceIDFieldNumber = 5;
    private uint iconResourceID_;
    /// <summary>
    /// 图标资源ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint IconResourceID {
      get { return iconResourceID_; }
      set {
        iconResourceID_ = value;
      }
    }

    /// <summary>Field number for the "BuffDes" field.</summary>
    public const int BuffDesFieldNumber = 6;
    private string buffDes_ = "";
    /// <summary>
    /// 词条内容说明（所有参数为整数类型 小数可以通过单位换算） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuffDes {
      get { return buffDes_; }
      set {
        buffDes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BuffList" field.</summary>
    public const int BuffListFieldNumber = 7;
    private static readonly pb::FieldCodec<uint> _repeated_buffList_codec
        = pb::FieldCodec.ForUInt32(58);
    private readonly pbc::RepeatedField<uint> buffList_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// buff参数(id 读buffdataconfig) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> BuffList {
      get { return buffList_; }
    }

    /// <summary>Field number for the "LimitGunTypeID" field.</summary>
    public const int LimitGunTypeIDFieldNumber = 8;
    private static readonly pb::FieldCodec<uint> _repeated_limitGunTypeID_codec
        = pb::FieldCodec.ForUInt32(66);
    private readonly pbc::RepeatedField<uint> limitGunTypeID_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 枪械种类限制 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> LimitGunTypeID {
      get { return limitGunTypeID_; }
    }

    /// <summary>Field number for the "SpecificGunTypeID" field.</summary>
    public const int SpecificGunTypeIDFieldNumber = 9;
    private static readonly pb::FieldCodec<uint> _repeated_specificGunTypeID_codec
        = pb::FieldCodec.ForUInt32(74);
    private readonly pbc::RepeatedField<uint> specificGunTypeID_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 特有词条枪械种类 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> SpecificGunTypeID {
      get { return specificGunTypeID_; }
    }

    /// <summary>Field number for the "Quality" field.</summary>
    public const int QualityFieldNumber = 10;
    private uint quality_;
    /// <summary>
    /// 品质 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GunBuffListConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GunBuffListConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BuffEnterCondition != other.BuffEnterCondition) return false;
      if (BuffExitCondition != other.BuffExitCondition) return false;
      if (BuffName != other.BuffName) return false;
      if (IconResourceID != other.IconResourceID) return false;
      if (BuffDes != other.BuffDes) return false;
      if(!buffList_.Equals(other.buffList_)) return false;
      if(!limitGunTypeID_.Equals(other.limitGunTypeID_)) return false;
      if(!specificGunTypeID_.Equals(other.specificGunTypeID_)) return false;
      if (Quality != other.Quality) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BuffEnterCondition != 0) hash ^= BuffEnterCondition.GetHashCode();
      if (BuffExitCondition != 0) hash ^= BuffExitCondition.GetHashCode();
      if (BuffName.Length != 0) hash ^= BuffName.GetHashCode();
      if (IconResourceID != 0) hash ^= IconResourceID.GetHashCode();
      if (BuffDes.Length != 0) hash ^= BuffDes.GetHashCode();
      hash ^= buffList_.GetHashCode();
      hash ^= limitGunTypeID_.GetHashCode();
      hash ^= specificGunTypeID_.GetHashCode();
      if (Quality != 0) hash ^= Quality.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (BuffEnterCondition != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(BuffEnterCondition);
      }
      if (BuffExitCondition != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(BuffExitCondition);
      }
      if (BuffName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BuffName);
      }
      if (IconResourceID != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(IconResourceID);
      }
      if (BuffDes.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(BuffDes);
      }
      buffList_.WriteTo(output, _repeated_buffList_codec);
      limitGunTypeID_.WriteTo(output, _repeated_limitGunTypeID_codec);
      specificGunTypeID_.WriteTo(output, _repeated_specificGunTypeID_codec);
      if (Quality != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Quality);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (BuffEnterCondition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BuffEnterCondition);
      }
      if (BuffExitCondition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BuffExitCondition);
      }
      if (BuffName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuffName);
      }
      if (IconResourceID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IconResourceID);
      }
      if (BuffDes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuffDes);
      }
      size += buffList_.CalculateSize(_repeated_buffList_codec);
      size += limitGunTypeID_.CalculateSize(_repeated_limitGunTypeID_codec);
      size += specificGunTypeID_.CalculateSize(_repeated_specificGunTypeID_codec);
      if (Quality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quality);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GunBuffListConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BuffEnterCondition != 0) {
        BuffEnterCondition = other.BuffEnterCondition;
      }
      if (other.BuffExitCondition != 0) {
        BuffExitCondition = other.BuffExitCondition;
      }
      if (other.BuffName.Length != 0) {
        BuffName = other.BuffName;
      }
      if (other.IconResourceID != 0) {
        IconResourceID = other.IconResourceID;
      }
      if (other.BuffDes.Length != 0) {
        BuffDes = other.BuffDes;
      }
      buffList_.Add(other.buffList_);
      limitGunTypeID_.Add(other.limitGunTypeID_);
      specificGunTypeID_.Add(other.specificGunTypeID_);
      if (other.Quality != 0) {
        Quality = other.Quality;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            BuffEnterCondition = input.ReadUInt32();
            break;
          }
          case 24: {
            BuffExitCondition = input.ReadUInt32();
            break;
          }
          case 34: {
            BuffName = input.ReadString();
            break;
          }
          case 40: {
            IconResourceID = input.ReadUInt32();
            break;
          }
          case 50: {
            BuffDes = input.ReadString();
            break;
          }
          case 58:
          case 56: {
            buffList_.AddEntriesFrom(input, _repeated_buffList_codec);
            break;
          }
          case 66:
          case 64: {
            limitGunTypeID_.AddEntriesFrom(input, _repeated_limitGunTypeID_codec);
            break;
          }
          case 74:
          case 72: {
            specificGunTypeID_.AddEntriesFrom(input, _repeated_specificGunTypeID_codec);
            break;
          }
          case 80: {
            Quality = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GunBuffListConfig_Array : pb::IMessage<GunBuffListConfig_Array> {
    private static readonly pb::MessageParser<GunBuffListConfig_Array> _parser = new pb::MessageParser<GunBuffListConfig_Array>(() => new GunBuffListConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GunBuffListConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansGunbufflistconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunBuffListConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunBuffListConfig_Array(GunBuffListConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunBuffListConfig_Array Clone() {
      return new GunBuffListConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.GunBuffListConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.GunBuffListConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.GunBuffListConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.GunBuffListConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.GunBuffListConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GunBuffListConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GunBuffListConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GunBuffListConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
