// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_gunfunctionqualitygropconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_gunfunctionqualitygropconfig.proto</summary>
  public static partial class XlsBeansGunfunctionqualitygropconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_gunfunctionqualitygropconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansGunfunctionqualitygropconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cix4bHNfYmVhbnNfZ3VuZnVuY3Rpb25xdWFsaXR5Z3JvcGNvbmZpZy5wcm90",
            "bxIKRDExLlBiZWFucyLGAwocR3VuRnVuY3Rpb25RdWFsaXR5R3JvcENvbmZp",
            "ZxIKCgJJRBgBIAEoDRIUCgxxdWFsaXR5TGV2ZWwYAiABKA0SFQoNYmFsbGlz",
            "dGljVHlwZRgDIAEoDRIUCgxzdHJlbmd0aGVuSWQYBCABKA0STQoNYmFsbGlz",
            "dGljSW5mbxgFIAMoCzI2LkQxMS5QYmVhbnMuR3VuRnVuY3Rpb25RdWFsaXR5",
            "R3JvcENvbmZpZ19iYWxsaXN0aWNJbmZvEkkKC0d1bkJ1ZmZJbmZvGAYgAygL",
            "MjQuRDExLlBiZWFucy5HdW5GdW5jdGlvblF1YWxpdHlHcm9wQ29uZmlnX0d1",
            "bkJ1ZmZJbmZvEk8KDkJhbGxpc3RpY0dyb3VwGAcgAygLMjcuRDExLlBiZWFu",
            "cy5HdW5GdW5jdGlvblF1YWxpdHlHcm9wQ29uZmlnX0JhbGxpc3RpY0dyb3Vw",
            "Eh8KF0V4Y2x1c2l2ZUd1bkJ1ZmZHcm91cElEGAggASgNEksKDEd1bkJ1ZmZH",
            "cm91cBgJIAMoCzI1LkQxMS5QYmVhbnMuR3VuRnVuY3Rpb25RdWFsaXR5R3Jv",
            "cENvbmZpZ19HdW5CdWZmR3JvdXAiSwoqR3VuRnVuY3Rpb25RdWFsaXR5R3Jv",
            "cENvbmZpZ19iYWxsaXN0aWNJbmZvEg0KBWNvdW50GAEgASgNEg4KBndlaWdo",
            "dBgCIAEoDSJJCihHdW5GdW5jdGlvblF1YWxpdHlHcm9wQ29uZmlnX0d1bkJ1",
            "ZmZJbmZvEg0KBWNvdW50GAEgASgNEg4KBndlaWdodBgCIAEoDSJJCitHdW5G",
            "dW5jdGlvblF1YWxpdHlHcm9wQ29uZmlnX0JhbGxpc3RpY0dyb3VwEgoKAmlk",
            "GAEgASgNEg4KBndlaWdodBgCIAEoDSJHCilHdW5GdW5jdGlvblF1YWxpdHlH",
            "cm9wQ29uZmlnX0d1bkJ1ZmZHcm91cBIKCgJpZBgBIAEoDRIOCgZ3ZWlnaHQY",
            "AiABKA0iXQoiR3VuRnVuY3Rpb25RdWFsaXR5R3JvcENvbmZpZ19BcnJheRI3",
            "CgVpdGVtcxgBIAMoCzIoLkQxMS5QYmVhbnMuR3VuRnVuY3Rpb25RdWFsaXR5",
            "R3JvcENvbmZpZ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.GunFunctionQualityGropConfig), global::D11.Pbeans.GunFunctionQualityGropConfig.Parser, new[]{ "ID", "QualityLevel", "BallisticType", "StrengthenId", "BallisticInfo", "GunBuffInfo", "BallisticGroup", "ExclusiveGunBuffGroupID", "GunBuffGroup" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.GunFunctionQualityGropConfig_ballisticInfo), global::D11.Pbeans.GunFunctionQualityGropConfig_ballisticInfo.Parser, new[]{ "Count", "Weight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.GunFunctionQualityGropConfig_GunBuffInfo), global::D11.Pbeans.GunFunctionQualityGropConfig_GunBuffInfo.Parser, new[]{ "Count", "Weight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.GunFunctionQualityGropConfig_BallisticGroup), global::D11.Pbeans.GunFunctionQualityGropConfig_BallisticGroup.Parser, new[]{ "Id", "Weight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.GunFunctionQualityGropConfig_GunBuffGroup), global::D11.Pbeans.GunFunctionQualityGropConfig_GunBuffGroup.Parser, new[]{ "Id", "Weight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.GunFunctionQualityGropConfig_Array), global::D11.Pbeans.GunFunctionQualityGropConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GunFunctionQualityGropConfig : pb::IMessage<GunFunctionQualityGropConfig> {
    private static readonly pb::MessageParser<GunFunctionQualityGropConfig> _parser = new pb::MessageParser<GunFunctionQualityGropConfig>(() => new GunFunctionQualityGropConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GunFunctionQualityGropConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansGunfunctionqualitygropconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig(GunFunctionQualityGropConfig other) : this() {
      iD_ = other.iD_;
      qualityLevel_ = other.qualityLevel_;
      ballisticType_ = other.ballisticType_;
      strengthenId_ = other.strengthenId_;
      ballisticInfo_ = other.ballisticInfo_.Clone();
      gunBuffInfo_ = other.gunBuffInfo_.Clone();
      ballisticGroup_ = other.ballisticGroup_.Clone();
      exclusiveGunBuffGroupID_ = other.exclusiveGunBuffGroupID_;
      gunBuffGroup_ = other.gunBuffGroup_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig Clone() {
      return new GunFunctionQualityGropConfig(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private uint iD_;
    /// <summary>
    /// 100000000(默认保底字段，其它字段为武器id) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "qualityLevel" field.</summary>
    public const int QualityLevelFieldNumber = 2;
    private uint qualityLevel_;
    /// <summary>
    /// 品质id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint QualityLevel {
      get { return qualityLevel_; }
      set {
        qualityLevel_ = value;
      }
    }

    /// <summary>Field number for the "ballisticType" field.</summary>
    public const int BallisticTypeFieldNumber = 3;
    private uint ballisticType_;
    /// <summary>
    /// 弹幕类型id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BallisticType {
      get { return ballisticType_; }
      set {
        ballisticType_ = value;
      }
    }

    /// <summary>Field number for the "strengthenId" field.</summary>
    public const int StrengthenIdFieldNumber = 4;
    private uint strengthenId_;
    /// <summary>
    /// 强化id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StrengthenId {
      get { return strengthenId_; }
      set {
        strengthenId_ = value;
      }
    }

    /// <summary>Field number for the "ballisticInfo" field.</summary>
    public const int BallisticInfoFieldNumber = 5;
    private static readonly pb::FieldCodec<global::D11.Pbeans.GunFunctionQualityGropConfig_ballisticInfo> _repeated_ballisticInfo_codec
        = pb::FieldCodec.ForMessage(42, global::D11.Pbeans.GunFunctionQualityGropConfig_ballisticInfo.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.GunFunctionQualityGropConfig_ballisticInfo> ballisticInfo_ = new pbc::RepeatedField<global::D11.Pbeans.GunFunctionQualityGropConfig_ballisticInfo>();
    /// <summary>
    /// 弹幕数量个数 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.GunFunctionQualityGropConfig_ballisticInfo> BallisticInfo {
      get { return ballisticInfo_; }
    }

    /// <summary>Field number for the "GunBuffInfo" field.</summary>
    public const int GunBuffInfoFieldNumber = 6;
    private static readonly pb::FieldCodec<global::D11.Pbeans.GunFunctionQualityGropConfig_GunBuffInfo> _repeated_gunBuffInfo_codec
        = pb::FieldCodec.ForMessage(50, global::D11.Pbeans.GunFunctionQualityGropConfig_GunBuffInfo.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.GunFunctionQualityGropConfig_GunBuffInfo> gunBuffInfo_ = new pbc::RepeatedField<global::D11.Pbeans.GunFunctionQualityGropConfig_GunBuffInfo>();
    /// <summary>
    /// 词条数量 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.GunFunctionQualityGropConfig_GunBuffInfo> GunBuffInfo {
      get { return gunBuffInfo_; }
    }

    /// <summary>Field number for the "BallisticGroup" field.</summary>
    public const int BallisticGroupFieldNumber = 7;
    private static readonly pb::FieldCodec<global::D11.Pbeans.GunFunctionQualityGropConfig_BallisticGroup> _repeated_ballisticGroup_codec
        = pb::FieldCodec.ForMessage(58, global::D11.Pbeans.GunFunctionQualityGropConfig_BallisticGroup.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.GunFunctionQualityGropConfig_BallisticGroup> ballisticGroup_ = new pbc::RepeatedField<global::D11.Pbeans.GunFunctionQualityGropConfig_BallisticGroup>();
    /// <summary>
    /// 弹道组id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.GunFunctionQualityGropConfig_BallisticGroup> BallisticGroup {
      get { return ballisticGroup_; }
    }

    /// <summary>Field number for the "ExclusiveGunBuffGroupID" field.</summary>
    public const int ExclusiveGunBuffGroupIDFieldNumber = 8;
    private uint exclusiveGunBuffGroupID_;
    /// <summary>
    /// 必掉词条组id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ExclusiveGunBuffGroupID {
      get { return exclusiveGunBuffGroupID_; }
      set {
        exclusiveGunBuffGroupID_ = value;
      }
    }

    /// <summary>Field number for the "GunBuffGroup" field.</summary>
    public const int GunBuffGroupFieldNumber = 9;
    private static readonly pb::FieldCodec<global::D11.Pbeans.GunFunctionQualityGropConfig_GunBuffGroup> _repeated_gunBuffGroup_codec
        = pb::FieldCodec.ForMessage(74, global::D11.Pbeans.GunFunctionQualityGropConfig_GunBuffGroup.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.GunFunctionQualityGropConfig_GunBuffGroup> gunBuffGroup_ = new pbc::RepeatedField<global::D11.Pbeans.GunFunctionQualityGropConfig_GunBuffGroup>();
    /// <summary>
    /// 词条组id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.GunFunctionQualityGropConfig_GunBuffGroup> GunBuffGroup {
      get { return gunBuffGroup_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GunFunctionQualityGropConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GunFunctionQualityGropConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (QualityLevel != other.QualityLevel) return false;
      if (BallisticType != other.BallisticType) return false;
      if (StrengthenId != other.StrengthenId) return false;
      if(!ballisticInfo_.Equals(other.ballisticInfo_)) return false;
      if(!gunBuffInfo_.Equals(other.gunBuffInfo_)) return false;
      if(!ballisticGroup_.Equals(other.ballisticGroup_)) return false;
      if (ExclusiveGunBuffGroupID != other.ExclusiveGunBuffGroupID) return false;
      if(!gunBuffGroup_.Equals(other.gunBuffGroup_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (QualityLevel != 0) hash ^= QualityLevel.GetHashCode();
      if (BallisticType != 0) hash ^= BallisticType.GetHashCode();
      if (StrengthenId != 0) hash ^= StrengthenId.GetHashCode();
      hash ^= ballisticInfo_.GetHashCode();
      hash ^= gunBuffInfo_.GetHashCode();
      hash ^= ballisticGroup_.GetHashCode();
      if (ExclusiveGunBuffGroupID != 0) hash ^= ExclusiveGunBuffGroupID.GetHashCode();
      hash ^= gunBuffGroup_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ID);
      }
      if (QualityLevel != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(QualityLevel);
      }
      if (BallisticType != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(BallisticType);
      }
      if (StrengthenId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(StrengthenId);
      }
      ballisticInfo_.WriteTo(output, _repeated_ballisticInfo_codec);
      gunBuffInfo_.WriteTo(output, _repeated_gunBuffInfo_codec);
      ballisticGroup_.WriteTo(output, _repeated_ballisticGroup_codec);
      if (ExclusiveGunBuffGroupID != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(ExclusiveGunBuffGroupID);
      }
      gunBuffGroup_.WriteTo(output, _repeated_gunBuffGroup_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ID);
      }
      if (QualityLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QualityLevel);
      }
      if (BallisticType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BallisticType);
      }
      if (StrengthenId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StrengthenId);
      }
      size += ballisticInfo_.CalculateSize(_repeated_ballisticInfo_codec);
      size += gunBuffInfo_.CalculateSize(_repeated_gunBuffInfo_codec);
      size += ballisticGroup_.CalculateSize(_repeated_ballisticGroup_codec);
      if (ExclusiveGunBuffGroupID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExclusiveGunBuffGroupID);
      }
      size += gunBuffGroup_.CalculateSize(_repeated_gunBuffGroup_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GunFunctionQualityGropConfig other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.QualityLevel != 0) {
        QualityLevel = other.QualityLevel;
      }
      if (other.BallisticType != 0) {
        BallisticType = other.BallisticType;
      }
      if (other.StrengthenId != 0) {
        StrengthenId = other.StrengthenId;
      }
      ballisticInfo_.Add(other.ballisticInfo_);
      gunBuffInfo_.Add(other.gunBuffInfo_);
      ballisticGroup_.Add(other.ballisticGroup_);
      if (other.ExclusiveGunBuffGroupID != 0) {
        ExclusiveGunBuffGroupID = other.ExclusiveGunBuffGroupID;
      }
      gunBuffGroup_.Add(other.gunBuffGroup_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadUInt32();
            break;
          }
          case 16: {
            QualityLevel = input.ReadUInt32();
            break;
          }
          case 24: {
            BallisticType = input.ReadUInt32();
            break;
          }
          case 32: {
            StrengthenId = input.ReadUInt32();
            break;
          }
          case 42: {
            ballisticInfo_.AddEntriesFrom(input, _repeated_ballisticInfo_codec);
            break;
          }
          case 50: {
            gunBuffInfo_.AddEntriesFrom(input, _repeated_gunBuffInfo_codec);
            break;
          }
          case 58: {
            ballisticGroup_.AddEntriesFrom(input, _repeated_ballisticGroup_codec);
            break;
          }
          case 64: {
            ExclusiveGunBuffGroupID = input.ReadUInt32();
            break;
          }
          case 74: {
            gunBuffGroup_.AddEntriesFrom(input, _repeated_gunBuffGroup_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GunFunctionQualityGropConfig_ballisticInfo : pb::IMessage<GunFunctionQualityGropConfig_ballisticInfo> {
    private static readonly pb::MessageParser<GunFunctionQualityGropConfig_ballisticInfo> _parser = new pb::MessageParser<GunFunctionQualityGropConfig_ballisticInfo>(() => new GunFunctionQualityGropConfig_ballisticInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GunFunctionQualityGropConfig_ballisticInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansGunfunctionqualitygropconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig_ballisticInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig_ballisticInfo(GunFunctionQualityGropConfig_ballisticInfo other) : this() {
      count_ = other.count_;
      weight_ = other.weight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig_ballisticInfo Clone() {
      return new GunFunctionQualityGropConfig_ballisticInfo(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private uint count_;
    /// <summary>
    /// 弹幕数量个数 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 2;
    private uint weight_;
    /// <summary>
    /// 权重 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GunFunctionQualityGropConfig_ballisticInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GunFunctionQualityGropConfig_ballisticInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      if (Weight != other.Weight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Weight != 0) hash ^= Weight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Count);
      }
      if (Weight != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (Weight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Weight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GunFunctionQualityGropConfig_ballisticInfo other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Weight != 0) {
        Weight = other.Weight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadUInt32();
            break;
          }
          case 16: {
            Weight = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GunFunctionQualityGropConfig_GunBuffInfo : pb::IMessage<GunFunctionQualityGropConfig_GunBuffInfo> {
    private static readonly pb::MessageParser<GunFunctionQualityGropConfig_GunBuffInfo> _parser = new pb::MessageParser<GunFunctionQualityGropConfig_GunBuffInfo>(() => new GunFunctionQualityGropConfig_GunBuffInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GunFunctionQualityGropConfig_GunBuffInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansGunfunctionqualitygropconfigReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig_GunBuffInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig_GunBuffInfo(GunFunctionQualityGropConfig_GunBuffInfo other) : this() {
      count_ = other.count_;
      weight_ = other.weight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig_GunBuffInfo Clone() {
      return new GunFunctionQualityGropConfig_GunBuffInfo(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private uint count_;
    /// <summary>
    /// 词条数量 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 2;
    private uint weight_;
    /// <summary>
    /// 权重 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GunFunctionQualityGropConfig_GunBuffInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GunFunctionQualityGropConfig_GunBuffInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      if (Weight != other.Weight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Weight != 0) hash ^= Weight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Count);
      }
      if (Weight != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (Weight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Weight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GunFunctionQualityGropConfig_GunBuffInfo other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Weight != 0) {
        Weight = other.Weight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadUInt32();
            break;
          }
          case 16: {
            Weight = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GunFunctionQualityGropConfig_BallisticGroup : pb::IMessage<GunFunctionQualityGropConfig_BallisticGroup> {
    private static readonly pb::MessageParser<GunFunctionQualityGropConfig_BallisticGroup> _parser = new pb::MessageParser<GunFunctionQualityGropConfig_BallisticGroup>(() => new GunFunctionQualityGropConfig_BallisticGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GunFunctionQualityGropConfig_BallisticGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansGunfunctionqualitygropconfigReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig_BallisticGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig_BallisticGroup(GunFunctionQualityGropConfig_BallisticGroup other) : this() {
      id_ = other.id_;
      weight_ = other.weight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig_BallisticGroup Clone() {
      return new GunFunctionQualityGropConfig_BallisticGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 弹道组id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 2;
    private uint weight_;
    /// <summary>
    /// 权重 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GunFunctionQualityGropConfig_BallisticGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GunFunctionQualityGropConfig_BallisticGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Weight != other.Weight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Weight != 0) hash ^= Weight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Weight != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Weight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Weight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GunFunctionQualityGropConfig_BallisticGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Weight != 0) {
        Weight = other.Weight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Weight = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GunFunctionQualityGropConfig_GunBuffGroup : pb::IMessage<GunFunctionQualityGropConfig_GunBuffGroup> {
    private static readonly pb::MessageParser<GunFunctionQualityGropConfig_GunBuffGroup> _parser = new pb::MessageParser<GunFunctionQualityGropConfig_GunBuffGroup>(() => new GunFunctionQualityGropConfig_GunBuffGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GunFunctionQualityGropConfig_GunBuffGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansGunfunctionqualitygropconfigReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig_GunBuffGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig_GunBuffGroup(GunFunctionQualityGropConfig_GunBuffGroup other) : this() {
      id_ = other.id_;
      weight_ = other.weight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig_GunBuffGroup Clone() {
      return new GunFunctionQualityGropConfig_GunBuffGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 词条组id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 2;
    private uint weight_;
    /// <summary>
    /// 权重 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GunFunctionQualityGropConfig_GunBuffGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GunFunctionQualityGropConfig_GunBuffGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Weight != other.Weight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Weight != 0) hash ^= Weight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Weight != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Weight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Weight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GunFunctionQualityGropConfig_GunBuffGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Weight != 0) {
        Weight = other.Weight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Weight = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GunFunctionQualityGropConfig_Array : pb::IMessage<GunFunctionQualityGropConfig_Array> {
    private static readonly pb::MessageParser<GunFunctionQualityGropConfig_Array> _parser = new pb::MessageParser<GunFunctionQualityGropConfig_Array>(() => new GunFunctionQualityGropConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GunFunctionQualityGropConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansGunfunctionqualitygropconfigReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig_Array(GunFunctionQualityGropConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunFunctionQualityGropConfig_Array Clone() {
      return new GunFunctionQualityGropConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.GunFunctionQualityGropConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.GunFunctionQualityGropConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.GunFunctionQualityGropConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.GunFunctionQualityGropConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.GunFunctionQualityGropConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GunFunctionQualityGropConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GunFunctionQualityGropConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GunFunctionQualityGropConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
