// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_humanoidtargetbattleconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_humanoidtargetbattleconfig.proto</summary>
  public static partial class XlsBeansHumanoidtargetbattleconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_humanoidtargetbattleconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansHumanoidtargetbattleconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cip4bHNfYmVhbnNfaHVtYW5vaWR0YXJnZXRiYXR0bGVjb25maWcucHJvdG8S",
            "CkQxMS5QYmVhbnMicwoaSHVtYW5vaWRUYXJnZXRCYXR0bGVDb25maWcSCgoC",
            "aWQYASABKA0SFAoMQmFzZUNvbmZpZ0lkGAIgASgNEhEKCUFybW9yVHlwZRgD",
            "IAEoDRINCgVNYXhIcBgEIAEoAhIRCglNb3ZlU3BlZWQYBSABKAIiWQogSHVt",
            "YW5vaWRUYXJnZXRCYXR0bGVDb25maWdfQXJyYXkSNQoFaXRlbXMYASADKAsy",
            "Ji5EMTEuUGJlYW5zLkh1bWFub2lkVGFyZ2V0QmF0dGxlQ29uZmlnYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.HumanoidTargetBattleConfig), global::D11.Pbeans.HumanoidTargetBattleConfig.Parser, new[]{ "Id", "BaseConfigId", "ArmorType", "MaxHp", "MoveSpeed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.HumanoidTargetBattleConfig_Array), global::D11.Pbeans.HumanoidTargetBattleConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class HumanoidTargetBattleConfig : pb::IMessage<HumanoidTargetBattleConfig> {
    private static readonly pb::MessageParser<HumanoidTargetBattleConfig> _parser = new pb::MessageParser<HumanoidTargetBattleConfig>(() => new HumanoidTargetBattleConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HumanoidTargetBattleConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansHumanoidtargetbattleconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HumanoidTargetBattleConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HumanoidTargetBattleConfig(HumanoidTargetBattleConfig other) : this() {
      id_ = other.id_;
      baseConfigId_ = other.baseConfigId_;
      armorType_ = other.armorType_;
      maxHp_ = other.maxHp_;
      moveSpeed_ = other.moveSpeed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HumanoidTargetBattleConfig Clone() {
      return new HumanoidTargetBattleConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 靶子id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "BaseConfigId" field.</summary>
    public const int BaseConfigIdFieldNumber = 2;
    private uint baseConfigId_;
    /// <summary>
    /// TargetBaseConfig中的id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BaseConfigId {
      get { return baseConfigId_; }
      set {
        baseConfigId_ = value;
      }
    }

    /// <summary>Field number for the "ArmorType" field.</summary>
    public const int ArmorTypeFieldNumber = 3;
    private uint armorType_;
    /// <summary>
    /// 护甲类型0.无甲1.半甲2.全甲 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ArmorType {
      get { return armorType_; }
      set {
        armorType_ = value;
      }
    }

    /// <summary>Field number for the "MaxHp" field.</summary>
    public const int MaxHpFieldNumber = 4;
    private float maxHp_;
    /// <summary>
    /// 最大血量 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MaxHp {
      get { return maxHp_; }
      set {
        maxHp_ = value;
      }
    }

    /// <summary>Field number for the "MoveSpeed" field.</summary>
    public const int MoveSpeedFieldNumber = 5;
    private float moveSpeed_;
    /// <summary>
    /// 移动速度 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MoveSpeed {
      get { return moveSpeed_; }
      set {
        moveSpeed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HumanoidTargetBattleConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HumanoidTargetBattleConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BaseConfigId != other.BaseConfigId) return false;
      if (ArmorType != other.ArmorType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxHp, other.MaxHp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MoveSpeed, other.MoveSpeed)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BaseConfigId != 0) hash ^= BaseConfigId.GetHashCode();
      if (ArmorType != 0) hash ^= ArmorType.GetHashCode();
      if (MaxHp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxHp);
      if (MoveSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MoveSpeed);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (BaseConfigId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(BaseConfigId);
      }
      if (ArmorType != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ArmorType);
      }
      if (MaxHp != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(MaxHp);
      }
      if (MoveSpeed != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(MoveSpeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (BaseConfigId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BaseConfigId);
      }
      if (ArmorType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ArmorType);
      }
      if (MaxHp != 0F) {
        size += 1 + 4;
      }
      if (MoveSpeed != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HumanoidTargetBattleConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BaseConfigId != 0) {
        BaseConfigId = other.BaseConfigId;
      }
      if (other.ArmorType != 0) {
        ArmorType = other.ArmorType;
      }
      if (other.MaxHp != 0F) {
        MaxHp = other.MaxHp;
      }
      if (other.MoveSpeed != 0F) {
        MoveSpeed = other.MoveSpeed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            BaseConfigId = input.ReadUInt32();
            break;
          }
          case 24: {
            ArmorType = input.ReadUInt32();
            break;
          }
          case 37: {
            MaxHp = input.ReadFloat();
            break;
          }
          case 45: {
            MoveSpeed = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HumanoidTargetBattleConfig_Array : pb::IMessage<HumanoidTargetBattleConfig_Array> {
    private static readonly pb::MessageParser<HumanoidTargetBattleConfig_Array> _parser = new pb::MessageParser<HumanoidTargetBattleConfig_Array>(() => new HumanoidTargetBattleConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HumanoidTargetBattleConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansHumanoidtargetbattleconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HumanoidTargetBattleConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HumanoidTargetBattleConfig_Array(HumanoidTargetBattleConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HumanoidTargetBattleConfig_Array Clone() {
      return new HumanoidTargetBattleConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.HumanoidTargetBattleConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.HumanoidTargetBattleConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.HumanoidTargetBattleConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.HumanoidTargetBattleConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.HumanoidTargetBattleConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HumanoidTargetBattleConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HumanoidTargetBattleConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HumanoidTargetBattleConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
