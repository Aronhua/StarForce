// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_indexresourceconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_indexresourceconfig.proto</summary>
  public static partial class XlsBeansIndexresourceconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_indexresourceconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansIndexresourceconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiN4bHNfYmVhbnNfaW5kZXhyZXNvdXJjZWNvbmZpZy5wcm90bxIKRDExLlBi",
            "ZWFucyKgAQoTSW5kZXhSZXNvdXJjZUNvbmZpZxIKCgJpZBgBIAEoDRIMCgRw",
            "YXRoGAIgASgJEgsKA251bRgDIAMoBRIOCgZtYXhOdW0YBCADKAUSEwoLaXNX",
            "aGl0ZUxpc3QYBSABKAgSDAoEbW9kZRgGIAMoBRIRCgljbGVhckZsYWcYByAD",
            "KA0SHAoUZXh0cmVtaXR5TWF4TXVsdGlwbGUYCCABKAUiSwoZSW5kZXhSZXNv",
            "dXJjZUNvbmZpZ19BcnJheRIuCgVpdGVtcxgBIAMoCzIfLkQxMS5QYmVhbnMu",
            "SW5kZXhSZXNvdXJjZUNvbmZpZ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.IndexResourceConfig), global::D11.Pbeans.IndexResourceConfig.Parser, new[]{ "Id", "Path", "Num", "MaxNum", "IsWhiteList", "Mode", "ClearFlag", "ExtremityMaxMultiple" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.IndexResourceConfig_Array), global::D11.Pbeans.IndexResourceConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class IndexResourceConfig : pb::IMessage<IndexResourceConfig> {
    private static readonly pb::MessageParser<IndexResourceConfig> _parser = new pb::MessageParser<IndexResourceConfig>(() => new IndexResourceConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IndexResourceConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansIndexresourceconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexResourceConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexResourceConfig(IndexResourceConfig other) : this() {
      id_ = other.id_;
      path_ = other.path_;
      num_ = other.num_.Clone();
      maxNum_ = other.maxNum_.Clone();
      isWhiteList_ = other.isWhiteList_;
      mode_ = other.mode_.Clone();
      clearFlag_ = other.clearFlag_.Clone();
      extremityMaxMultiple_ = other.extremityMaxMultiple_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexResourceConfig Clone() {
      return new IndexResourceConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 索引id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private string path_ = "";
    /// <summary>
    /// 路径 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_num_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> num_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 超低档机缓存数量 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Num {
      get { return num_; }
    }

    /// <summary>Field number for the "maxNum" field.</summary>
    public const int MaxNumFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_maxNum_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> maxNum_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 超低档机缓存最大数量 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MaxNum {
      get { return maxNum_; }
    }

    /// <summary>Field number for the "isWhiteList" field.</summary>
    public const int IsWhiteListFieldNumber = 5;
    private bool isWhiteList_;
    /// <summary>
    /// 读取需要预加载的模式的方式，白名单或是黑名单 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWhiteList {
      get { return isWhiteList_; }
      set {
        isWhiteList_ = value;
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_mode_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> mode_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 预加载模式 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Mode {
      get { return mode_; }
    }

    /// <summary>Field number for the "clearFlag" field.</summary>
    public const int ClearFlagFieldNumber = 7;
    private static readonly pb::FieldCodec<uint> _repeated_clearFlag_codec
        = pb::FieldCodec.ForUInt32(58);
    private readonly pbc::RepeatedField<uint> clearFlag_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 特效清除时机 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> ClearFlag {
      get { return clearFlag_; }
    }

    /// <summary>Field number for the "extremityMaxMultiple" field.</summary>
    public const int ExtremityMaxMultipleFieldNumber = 8;
    private int extremityMaxMultiple_;
    /// <summary>
    /// 不限数量时最大缓存数倍数 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExtremityMaxMultiple {
      get { return extremityMaxMultiple_; }
      set {
        extremityMaxMultiple_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IndexResourceConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IndexResourceConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Path != other.Path) return false;
      if(!num_.Equals(other.num_)) return false;
      if(!maxNum_.Equals(other.maxNum_)) return false;
      if (IsWhiteList != other.IsWhiteList) return false;
      if(!mode_.Equals(other.mode_)) return false;
      if(!clearFlag_.Equals(other.clearFlag_)) return false;
      if (ExtremityMaxMultiple != other.ExtremityMaxMultiple) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      hash ^= num_.GetHashCode();
      hash ^= maxNum_.GetHashCode();
      if (IsWhiteList != false) hash ^= IsWhiteList.GetHashCode();
      hash ^= mode_.GetHashCode();
      hash ^= clearFlag_.GetHashCode();
      if (ExtremityMaxMultiple != 0) hash ^= ExtremityMaxMultiple.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      num_.WriteTo(output, _repeated_num_codec);
      maxNum_.WriteTo(output, _repeated_maxNum_codec);
      if (IsWhiteList != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsWhiteList);
      }
      mode_.WriteTo(output, _repeated_mode_codec);
      clearFlag_.WriteTo(output, _repeated_clearFlag_codec);
      if (ExtremityMaxMultiple != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ExtremityMaxMultiple);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      size += num_.CalculateSize(_repeated_num_codec);
      size += maxNum_.CalculateSize(_repeated_maxNum_codec);
      if (IsWhiteList != false) {
        size += 1 + 1;
      }
      size += mode_.CalculateSize(_repeated_mode_codec);
      size += clearFlag_.CalculateSize(_repeated_clearFlag_codec);
      if (ExtremityMaxMultiple != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExtremityMaxMultiple);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IndexResourceConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      num_.Add(other.num_);
      maxNum_.Add(other.maxNum_);
      if (other.IsWhiteList != false) {
        IsWhiteList = other.IsWhiteList;
      }
      mode_.Add(other.mode_);
      clearFlag_.Add(other.clearFlag_);
      if (other.ExtremityMaxMultiple != 0) {
        ExtremityMaxMultiple = other.ExtremityMaxMultiple;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            num_.AddEntriesFrom(input, _repeated_num_codec);
            break;
          }
          case 34:
          case 32: {
            maxNum_.AddEntriesFrom(input, _repeated_maxNum_codec);
            break;
          }
          case 40: {
            IsWhiteList = input.ReadBool();
            break;
          }
          case 50:
          case 48: {
            mode_.AddEntriesFrom(input, _repeated_mode_codec);
            break;
          }
          case 58:
          case 56: {
            clearFlag_.AddEntriesFrom(input, _repeated_clearFlag_codec);
            break;
          }
          case 64: {
            ExtremityMaxMultiple = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IndexResourceConfig_Array : pb::IMessage<IndexResourceConfig_Array> {
    private static readonly pb::MessageParser<IndexResourceConfig_Array> _parser = new pb::MessageParser<IndexResourceConfig_Array>(() => new IndexResourceConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IndexResourceConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansIndexresourceconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexResourceConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexResourceConfig_Array(IndexResourceConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexResourceConfig_Array Clone() {
      return new IndexResourceConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.IndexResourceConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.IndexResourceConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.IndexResourceConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.IndexResourceConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.IndexResourceConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IndexResourceConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IndexResourceConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IndexResourceConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
