// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_itemqualityconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_itemqualityconfig.proto</summary>
  public static partial class XlsBeansItemqualityconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_itemqualityconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansItemqualityconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiF4bHNfYmVhbnNfaXRlbXF1YWxpdHljb25maWcucHJvdG8SCkQxMS5QYmVh",
            "bnMikgIKEUl0ZW1RdWFsaXR5Q29uZmlnEgoKAmlkGAEgASgNEhEKCWNvbG9y",
            "TGluZRgCIAEoCRITCgtjb2xvclNxdWFyZRgDIAEoCRISCgpjb2xvclVuZGVy",
            "GAQgASgJEhEKCWZyYW1lcGF0aBgFIAEoDRIZChF3ZWFwb25xdWFsaXR5bmFt",
            "ZRgGIAEoCRIXCg9yb2xlcXVhbGl0eW5hbWUYByABKAkSFwoPaXRlbXF1YWxp",
            "dHluYW1lGAggASgJEh4KFnVucGFja2VkQmFja2dyb3VuZFBhdGgYCSABKA0S",
            "HwoXdGFza1Jld2FyZEl0ZW1RdWFsaXR5QmcYCiABKA0SFAoMcXVhbGl0eVNj",
            "b3JlGAsgASgNIkcKF0l0ZW1RdWFsaXR5Q29uZmlnX0FycmF5EiwKBWl0ZW1z",
            "GAEgAygLMh0uRDExLlBiZWFucy5JdGVtUXVhbGl0eUNvbmZpZ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.ItemQualityConfig), global::D11.Pbeans.ItemQualityConfig.Parser, new[]{ "Id", "ColorLine", "ColorSquare", "ColorUnder", "Framepath", "Weaponqualityname", "Rolequalityname", "Itemqualityname", "UnpackedBackgroundPath", "TaskRewardItemQualityBg", "QualityScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.ItemQualityConfig_Array), global::D11.Pbeans.ItemQualityConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ItemQualityConfig : pb::IMessage<ItemQualityConfig> {
    private static readonly pb::MessageParser<ItemQualityConfig> _parser = new pb::MessageParser<ItemQualityConfig>(() => new ItemQualityConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemQualityConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansItemqualityconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemQualityConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemQualityConfig(ItemQualityConfig other) : this() {
      id_ = other.id_;
      colorLine_ = other.colorLine_;
      colorSquare_ = other.colorSquare_;
      colorUnder_ = other.colorUnder_;
      framepath_ = other.framepath_;
      weaponqualityname_ = other.weaponqualityname_;
      rolequalityname_ = other.rolequalityname_;
      itemqualityname_ = other.itemqualityname_;
      unpackedBackgroundPath_ = other.unpackedBackgroundPath_;
      taskRewardItemQualityBg_ = other.taskRewardItemQualityBg_;
      qualityScore_ = other.qualityScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemQualityConfig Clone() {
      return new ItemQualityConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 品质等级 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "colorLine" field.</summary>
    public const int ColorLineFieldNumber = 2;
    private string colorLine_ = "";
    /// <summary>
    /// 品质条色 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ColorLine {
      get { return colorLine_; }
      set {
        colorLine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "colorSquare" field.</summary>
    public const int ColorSquareFieldNumber = 3;
    private string colorSquare_ = "";
    /// <summary>
    /// 品质板色 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ColorSquare {
      get { return colorSquare_; }
      set {
        colorSquare_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "colorUnder" field.</summary>
    public const int ColorUnderFieldNumber = 4;
    private string colorUnder_ = "";
    /// <summary>
    /// 品质底线色 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ColorUnder {
      get { return colorUnder_; }
      set {
        colorUnder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "framepath" field.</summary>
    public const int FramepathFieldNumber = 5;
    private uint framepath_;
    /// <summary>
    /// 边框图片名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Framepath {
      get { return framepath_; }
      set {
        framepath_ = value;
      }
    }

    /// <summary>Field number for the "weaponqualityname" field.</summary>
    public const int WeaponqualitynameFieldNumber = 6;
    private string weaponqualityname_ = "";
    /// <summary>
    /// 武器名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Weaponqualityname {
      get { return weaponqualityname_; }
      set {
        weaponqualityname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rolequalityname" field.</summary>
    public const int RolequalitynameFieldNumber = 7;
    private string rolequalityname_ = "";
    /// <summary>
    /// 角色名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Rolequalityname {
      get { return rolequalityname_; }
      set {
        rolequalityname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "itemqualityname" field.</summary>
    public const int ItemqualitynameFieldNumber = 8;
    private string itemqualityname_ = "";
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Itemqualityname {
      get { return itemqualityname_; }
      set {
        itemqualityname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unpackedBackgroundPath" field.</summary>
    public const int UnpackedBackgroundPathFieldNumber = 9;
    private uint unpackedBackgroundPath_;
    /// <summary>
    /// 稀有物品背景图 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnpackedBackgroundPath {
      get { return unpackedBackgroundPath_; }
      set {
        unpackedBackgroundPath_ = value;
      }
    }

    /// <summary>Field number for the "taskRewardItemQualityBg" field.</summary>
    public const int TaskRewardItemQualityBgFieldNumber = 10;
    private uint taskRewardItemQualityBg_;
    /// <summary>
    /// 任务奖励品质背景 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TaskRewardItemQualityBg {
      get { return taskRewardItemQualityBg_; }
      set {
        taskRewardItemQualityBg_ = value;
      }
    }

    /// <summary>Field number for the "qualityScore" field.</summary>
    public const int QualityScoreFieldNumber = 11;
    private uint qualityScore_;
    /// <summary>
    /// 品质GS系数 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint QualityScore {
      get { return qualityScore_; }
      set {
        qualityScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemQualityConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemQualityConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ColorLine != other.ColorLine) return false;
      if (ColorSquare != other.ColorSquare) return false;
      if (ColorUnder != other.ColorUnder) return false;
      if (Framepath != other.Framepath) return false;
      if (Weaponqualityname != other.Weaponqualityname) return false;
      if (Rolequalityname != other.Rolequalityname) return false;
      if (Itemqualityname != other.Itemqualityname) return false;
      if (UnpackedBackgroundPath != other.UnpackedBackgroundPath) return false;
      if (TaskRewardItemQualityBg != other.TaskRewardItemQualityBg) return false;
      if (QualityScore != other.QualityScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ColorLine.Length != 0) hash ^= ColorLine.GetHashCode();
      if (ColorSquare.Length != 0) hash ^= ColorSquare.GetHashCode();
      if (ColorUnder.Length != 0) hash ^= ColorUnder.GetHashCode();
      if (Framepath != 0) hash ^= Framepath.GetHashCode();
      if (Weaponqualityname.Length != 0) hash ^= Weaponqualityname.GetHashCode();
      if (Rolequalityname.Length != 0) hash ^= Rolequalityname.GetHashCode();
      if (Itemqualityname.Length != 0) hash ^= Itemqualityname.GetHashCode();
      if (UnpackedBackgroundPath != 0) hash ^= UnpackedBackgroundPath.GetHashCode();
      if (TaskRewardItemQualityBg != 0) hash ^= TaskRewardItemQualityBg.GetHashCode();
      if (QualityScore != 0) hash ^= QualityScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (ColorLine.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ColorLine);
      }
      if (ColorSquare.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ColorSquare);
      }
      if (ColorUnder.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ColorUnder);
      }
      if (Framepath != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Framepath);
      }
      if (Weaponqualityname.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Weaponqualityname);
      }
      if (Rolequalityname.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Rolequalityname);
      }
      if (Itemqualityname.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Itemqualityname);
      }
      if (UnpackedBackgroundPath != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(UnpackedBackgroundPath);
      }
      if (TaskRewardItemQualityBg != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TaskRewardItemQualityBg);
      }
      if (QualityScore != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(QualityScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (ColorLine.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ColorLine);
      }
      if (ColorSquare.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ColorSquare);
      }
      if (ColorUnder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ColorUnder);
      }
      if (Framepath != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Framepath);
      }
      if (Weaponqualityname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Weaponqualityname);
      }
      if (Rolequalityname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rolequalityname);
      }
      if (Itemqualityname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Itemqualityname);
      }
      if (UnpackedBackgroundPath != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnpackedBackgroundPath);
      }
      if (TaskRewardItemQualityBg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskRewardItemQualityBg);
      }
      if (QualityScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QualityScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemQualityConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ColorLine.Length != 0) {
        ColorLine = other.ColorLine;
      }
      if (other.ColorSquare.Length != 0) {
        ColorSquare = other.ColorSquare;
      }
      if (other.ColorUnder.Length != 0) {
        ColorUnder = other.ColorUnder;
      }
      if (other.Framepath != 0) {
        Framepath = other.Framepath;
      }
      if (other.Weaponqualityname.Length != 0) {
        Weaponqualityname = other.Weaponqualityname;
      }
      if (other.Rolequalityname.Length != 0) {
        Rolequalityname = other.Rolequalityname;
      }
      if (other.Itemqualityname.Length != 0) {
        Itemqualityname = other.Itemqualityname;
      }
      if (other.UnpackedBackgroundPath != 0) {
        UnpackedBackgroundPath = other.UnpackedBackgroundPath;
      }
      if (other.TaskRewardItemQualityBg != 0) {
        TaskRewardItemQualityBg = other.TaskRewardItemQualityBg;
      }
      if (other.QualityScore != 0) {
        QualityScore = other.QualityScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            ColorLine = input.ReadString();
            break;
          }
          case 26: {
            ColorSquare = input.ReadString();
            break;
          }
          case 34: {
            ColorUnder = input.ReadString();
            break;
          }
          case 40: {
            Framepath = input.ReadUInt32();
            break;
          }
          case 50: {
            Weaponqualityname = input.ReadString();
            break;
          }
          case 58: {
            Rolequalityname = input.ReadString();
            break;
          }
          case 66: {
            Itemqualityname = input.ReadString();
            break;
          }
          case 72: {
            UnpackedBackgroundPath = input.ReadUInt32();
            break;
          }
          case 80: {
            TaskRewardItemQualityBg = input.ReadUInt32();
            break;
          }
          case 88: {
            QualityScore = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ItemQualityConfig_Array : pb::IMessage<ItemQualityConfig_Array> {
    private static readonly pb::MessageParser<ItemQualityConfig_Array> _parser = new pb::MessageParser<ItemQualityConfig_Array>(() => new ItemQualityConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemQualityConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansItemqualityconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemQualityConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemQualityConfig_Array(ItemQualityConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemQualityConfig_Array Clone() {
      return new ItemQualityConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.ItemQualityConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.ItemQualityConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.ItemQualityConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.ItemQualityConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.ItemQualityConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemQualityConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemQualityConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemQualityConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
