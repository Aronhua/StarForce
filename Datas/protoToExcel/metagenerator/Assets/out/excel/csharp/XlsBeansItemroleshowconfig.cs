// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_itemroleshowconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_itemroleshowconfig.proto</summary>
  public static partial class XlsBeansItemroleshowconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_itemroleshowconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansItemroleshowconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJ4bHNfYmVhbnNfaXRlbXJvbGVzaG93Y29uZmlnLnByb3RvEgpEMTEuUGJl",
            "YW5zIvMBChJJdGVtUm9sZVNob3dDb25maWcSCgoCaWQYASABKA0SDAoEbmFt",
            "ZRgCIAEoCRITCgtkZXNjcmlwdGlvbhgDIAEoCRIOCgZpY29uSUQYBCABKA0S",
            "EQoJYmlnSWNvbklEGAUgASgNEhQKDGl0ZW1Sb2xlTmFtZRgGIAEoCRIRCgl0",
            "aGVtZUljb24YByABKA0SDwoHdGhlbWVCZxgIIAEoDRIPCgdzaGFyZUJnGAkg",
            "ASgNEhcKD2luc3BlY3RvckJnVHlwZRgKIAEoDRIVCg1pbnNwZWN0b3JCZ0lE",
            "GAsgASgNEhAKCGZlYXR1cmVzGAwgAygNIkkKGEl0ZW1Sb2xlU2hvd0NvbmZp",
            "Z19BcnJheRItCgVpdGVtcxgBIAMoCzIeLkQxMS5QYmVhbnMuSXRlbVJvbGVT",
            "aG93Q29uZmlnYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.ItemRoleShowConfig), global::D11.Pbeans.ItemRoleShowConfig.Parser, new[]{ "Id", "Name", "Description", "IconID", "BigIconID", "ItemRoleName", "ThemeIcon", "ThemeBg", "ShareBg", "InspectorBgType", "InspectorBgID", "Features" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.ItemRoleShowConfig_Array), global::D11.Pbeans.ItemRoleShowConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ItemRoleShowConfig : pb::IMessage<ItemRoleShowConfig> {
    private static readonly pb::MessageParser<ItemRoleShowConfig> _parser = new pb::MessageParser<ItemRoleShowConfig>(() => new ItemRoleShowConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemRoleShowConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansItemroleshowconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemRoleShowConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemRoleShowConfig(ItemRoleShowConfig other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      description_ = other.description_;
      iconID_ = other.iconID_;
      bigIconID_ = other.bigIconID_;
      itemRoleName_ = other.itemRoleName_;
      themeIcon_ = other.themeIcon_;
      themeBg_ = other.themeBg_;
      shareBg_ = other.shareBg_;
      inspectorBgType_ = other.inspectorBgType_;
      inspectorBgID_ = other.inspectorBgID_;
      features_ = other.features_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemRoleShowConfig Clone() {
      return new ItemRoleShowConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 编号 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 物品名称 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// 道具描述tips 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iconID" field.</summary>
    public const int IconIDFieldNumber = 4;
    private uint iconID_;
    /// <summary>
    /// 资源id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint IconID {
      get { return iconID_; }
      set {
        iconID_ = value;
      }
    }

    /// <summary>Field number for the "bigIconID" field.</summary>
    public const int BigIconIDFieldNumber = 5;
    private uint bigIconID_;
    /// <summary>
    /// 大图id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BigIconID {
      get { return bigIconID_; }
      set {
        bigIconID_ = value;
      }
    }

    /// <summary>Field number for the "itemRoleName" field.</summary>
    public const int ItemRoleNameFieldNumber = 6;
    private string itemRoleName_ = "";
    /// <summary>
    /// 名称(局外模型拼路径用) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemRoleName {
      get { return itemRoleName_; }
      set {
        itemRoleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "themeIcon" field.</summary>
    public const int ThemeIconFieldNumber = 7;
    private uint themeIcon_;
    /// <summary>
    /// 主题标记图标 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ThemeIcon {
      get { return themeIcon_; }
      set {
        themeIcon_ = value;
      }
    }

    /// <summary>Field number for the "themeBg" field.</summary>
    public const int ThemeBgFieldNumber = 8;
    private uint themeBg_;
    /// <summary>
    /// 主题背景 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ThemeBg {
      get { return themeBg_; }
      set {
        themeBg_ = value;
      }
    }

    /// <summary>Field number for the "shareBg" field.</summary>
    public const int ShareBgFieldNumber = 9;
    private uint shareBg_;
    /// <summary>
    /// 分享背景 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ShareBg {
      get { return shareBg_; }
      set {
        shareBg_ = value;
      }
    }

    /// <summary>Field number for the "inspectorBgType" field.</summary>
    public const int InspectorBgTypeFieldNumber = 10;
    private uint inspectorBgType_;
    /// <summary>
    /// 检视背景类型 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint InspectorBgType {
      get { return inspectorBgType_; }
      set {
        inspectorBgType_ = value;
      }
    }

    /// <summary>Field number for the "inspectorBgID" field.</summary>
    public const int InspectorBgIDFieldNumber = 11;
    private uint inspectorBgID_;
    /// <summary>
    /// 检视背景 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint InspectorBgID {
      get { return inspectorBgID_; }
      set {
        inspectorBgID_ = value;
      }
    }

    /// <summary>Field number for the "features" field.</summary>
    public const int FeaturesFieldNumber = 12;
    private static readonly pb::FieldCodec<uint> _repeated_features_codec
        = pb::FieldCodec.ForUInt32(98);
    private readonly pbc::RepeatedField<uint> features_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 特性Id列表 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Features {
      get { return features_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemRoleShowConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemRoleShowConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (IconID != other.IconID) return false;
      if (BigIconID != other.BigIconID) return false;
      if (ItemRoleName != other.ItemRoleName) return false;
      if (ThemeIcon != other.ThemeIcon) return false;
      if (ThemeBg != other.ThemeBg) return false;
      if (ShareBg != other.ShareBg) return false;
      if (InspectorBgType != other.InspectorBgType) return false;
      if (InspectorBgID != other.InspectorBgID) return false;
      if(!features_.Equals(other.features_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (IconID != 0) hash ^= IconID.GetHashCode();
      if (BigIconID != 0) hash ^= BigIconID.GetHashCode();
      if (ItemRoleName.Length != 0) hash ^= ItemRoleName.GetHashCode();
      if (ThemeIcon != 0) hash ^= ThemeIcon.GetHashCode();
      if (ThemeBg != 0) hash ^= ThemeBg.GetHashCode();
      if (ShareBg != 0) hash ^= ShareBg.GetHashCode();
      if (InspectorBgType != 0) hash ^= InspectorBgType.GetHashCode();
      if (InspectorBgID != 0) hash ^= InspectorBgID.GetHashCode();
      hash ^= features_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (IconID != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(IconID);
      }
      if (BigIconID != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(BigIconID);
      }
      if (ItemRoleName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ItemRoleName);
      }
      if (ThemeIcon != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ThemeIcon);
      }
      if (ThemeBg != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(ThemeBg);
      }
      if (ShareBg != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(ShareBg);
      }
      if (InspectorBgType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(InspectorBgType);
      }
      if (InspectorBgID != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(InspectorBgID);
      }
      features_.WriteTo(output, _repeated_features_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (IconID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IconID);
      }
      if (BigIconID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BigIconID);
      }
      if (ItemRoleName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemRoleName);
      }
      if (ThemeIcon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ThemeIcon);
      }
      if (ThemeBg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ThemeBg);
      }
      if (ShareBg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ShareBg);
      }
      if (InspectorBgType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InspectorBgType);
      }
      if (InspectorBgID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InspectorBgID);
      }
      size += features_.CalculateSize(_repeated_features_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemRoleShowConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.IconID != 0) {
        IconID = other.IconID;
      }
      if (other.BigIconID != 0) {
        BigIconID = other.BigIconID;
      }
      if (other.ItemRoleName.Length != 0) {
        ItemRoleName = other.ItemRoleName;
      }
      if (other.ThemeIcon != 0) {
        ThemeIcon = other.ThemeIcon;
      }
      if (other.ThemeBg != 0) {
        ThemeBg = other.ThemeBg;
      }
      if (other.ShareBg != 0) {
        ShareBg = other.ShareBg;
      }
      if (other.InspectorBgType != 0) {
        InspectorBgType = other.InspectorBgType;
      }
      if (other.InspectorBgID != 0) {
        InspectorBgID = other.InspectorBgID;
      }
      features_.Add(other.features_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            IconID = input.ReadUInt32();
            break;
          }
          case 40: {
            BigIconID = input.ReadUInt32();
            break;
          }
          case 50: {
            ItemRoleName = input.ReadString();
            break;
          }
          case 56: {
            ThemeIcon = input.ReadUInt32();
            break;
          }
          case 64: {
            ThemeBg = input.ReadUInt32();
            break;
          }
          case 72: {
            ShareBg = input.ReadUInt32();
            break;
          }
          case 80: {
            InspectorBgType = input.ReadUInt32();
            break;
          }
          case 88: {
            InspectorBgID = input.ReadUInt32();
            break;
          }
          case 98:
          case 96: {
            features_.AddEntriesFrom(input, _repeated_features_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ItemRoleShowConfig_Array : pb::IMessage<ItemRoleShowConfig_Array> {
    private static readonly pb::MessageParser<ItemRoleShowConfig_Array> _parser = new pb::MessageParser<ItemRoleShowConfig_Array>(() => new ItemRoleShowConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemRoleShowConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansItemroleshowconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemRoleShowConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemRoleShowConfig_Array(ItemRoleShowConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemRoleShowConfig_Array Clone() {
      return new ItemRoleShowConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.ItemRoleShowConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.ItemRoleShowConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.ItemRoleShowConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.ItemRoleShowConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.ItemRoleShowConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemRoleShowConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemRoleShowConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemRoleShowConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
