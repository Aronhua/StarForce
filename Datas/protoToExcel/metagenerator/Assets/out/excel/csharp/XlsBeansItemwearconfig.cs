// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_itemwearconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_itemwearconfig.proto</summary>
  public static partial class XlsBeansItemwearconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_itemwearconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansItemwearconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch54bHNfYmVhbnNfaXRlbXdlYXJjb25maWcucHJvdG8SCkQxMS5QYmVhbnMi",
            "ogEKDkl0ZW1XZWFyQ29uZmlnEgoKAmlkGAEgASgNEg8KB3dlYXJNYXgYAiAB",
            "KAISGAoQd2VhckVmZmVjdEJyaWdodBgDIAEoAhIQCgh3ZWFyTmFtZRgEIAEo",
            "CRINCgVjb2xvchgFIAMoDRIRCglzaG9ydE5hbWUYBiABKAkSEgoKZnJhbWVj",
            "b2xvchgHIAMoDRIRCgl3ZWFyU2NvcmUYCCABKAIiQQoUSXRlbVdlYXJDb25m",
            "aWdfQXJyYXkSKQoFaXRlbXMYASADKAsyGi5EMTEuUGJlYW5zLkl0ZW1XZWFy",
            "Q29uZmlnYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.ItemWearConfig), global::D11.Pbeans.ItemWearConfig.Parser, new[]{ "Id", "WearMax", "WearEffectBright", "WearName", "Color", "ShortName", "Framecolor", "WearScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.ItemWearConfig_Array), global::D11.Pbeans.ItemWearConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ItemWearConfig : pb::IMessage<ItemWearConfig> {
    private static readonly pb::MessageParser<ItemWearConfig> _parser = new pb::MessageParser<ItemWearConfig>(() => new ItemWearConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemWearConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansItemwearconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemWearConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemWearConfig(ItemWearConfig other) : this() {
      id_ = other.id_;
      wearMax_ = other.wearMax_;
      wearEffectBright_ = other.wearEffectBright_;
      wearName_ = other.wearName_;
      color_ = other.color_.Clone();
      shortName_ = other.shortName_;
      framecolor_ = other.framecolor_.Clone();
      wearScore_ = other.wearScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemWearConfig Clone() {
      return new ItemWearConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 磨损分段 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "wearMax" field.</summary>
    public const int WearMaxFieldNumber = 2;
    private float wearMax_;
    /// <summary>
    /// 磨损上限 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float WearMax {
      get { return wearMax_; }
      set {
        wearMax_ = value;
      }
    }

    /// <summary>Field number for the "wearEffectBright" field.</summary>
    public const int WearEffectBrightFieldNumber = 3;
    private float wearEffectBright_;
    /// <summary>
    /// 材质特效亮度参数 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float WearEffectBright {
      get { return wearEffectBright_; }
      set {
        wearEffectBright_ = value;
      }
    }

    /// <summary>Field number for the "wearName" field.</summary>
    public const int WearNameFieldNumber = 4;
    private string wearName_ = "";
    /// <summary>
    /// 外观名字 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WearName {
      get { return wearName_; }
      set {
        wearName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 5;
    private static readonly pb::FieldCodec<uint> _repeated_color_codec
        = pb::FieldCodec.ForUInt32(42);
    private readonly pbc::RepeatedField<uint> color_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 颜色值r 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Color {
      get { return color_; }
    }

    /// <summary>Field number for the "shortName" field.</summary>
    public const int ShortNameFieldNumber = 6;
    private string shortName_ = "";
    /// <summary>
    /// 缩写名字 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShortName {
      get { return shortName_; }
      set {
        shortName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "framecolor" field.</summary>
    public const int FramecolorFieldNumber = 7;
    private static readonly pb::FieldCodec<uint> _repeated_framecolor_codec
        = pb::FieldCodec.ForUInt32(58);
    private readonly pbc::RepeatedField<uint> framecolor_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 边框颜色值r 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Framecolor {
      get { return framecolor_; }
    }

    /// <summary>Field number for the "wearScore" field.</summary>
    public const int WearScoreFieldNumber = 8;
    private float wearScore_;
    /// <summary>
    /// 磨损分数 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float WearScore {
      get { return wearScore_; }
      set {
        wearScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemWearConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemWearConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WearMax, other.WearMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WearEffectBright, other.WearEffectBright)) return false;
      if (WearName != other.WearName) return false;
      if(!color_.Equals(other.color_)) return false;
      if (ShortName != other.ShortName) return false;
      if(!framecolor_.Equals(other.framecolor_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WearScore, other.WearScore)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (WearMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WearMax);
      if (WearEffectBright != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WearEffectBright);
      if (WearName.Length != 0) hash ^= WearName.GetHashCode();
      hash ^= color_.GetHashCode();
      if (ShortName.Length != 0) hash ^= ShortName.GetHashCode();
      hash ^= framecolor_.GetHashCode();
      if (WearScore != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WearScore);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (WearMax != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(WearMax);
      }
      if (WearEffectBright != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(WearEffectBright);
      }
      if (WearName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(WearName);
      }
      color_.WriteTo(output, _repeated_color_codec);
      if (ShortName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ShortName);
      }
      framecolor_.WriteTo(output, _repeated_framecolor_codec);
      if (WearScore != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(WearScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (WearMax != 0F) {
        size += 1 + 4;
      }
      if (WearEffectBright != 0F) {
        size += 1 + 4;
      }
      if (WearName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WearName);
      }
      size += color_.CalculateSize(_repeated_color_codec);
      if (ShortName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShortName);
      }
      size += framecolor_.CalculateSize(_repeated_framecolor_codec);
      if (WearScore != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemWearConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.WearMax != 0F) {
        WearMax = other.WearMax;
      }
      if (other.WearEffectBright != 0F) {
        WearEffectBright = other.WearEffectBright;
      }
      if (other.WearName.Length != 0) {
        WearName = other.WearName;
      }
      color_.Add(other.color_);
      if (other.ShortName.Length != 0) {
        ShortName = other.ShortName;
      }
      framecolor_.Add(other.framecolor_);
      if (other.WearScore != 0F) {
        WearScore = other.WearScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 21: {
            WearMax = input.ReadFloat();
            break;
          }
          case 29: {
            WearEffectBright = input.ReadFloat();
            break;
          }
          case 34: {
            WearName = input.ReadString();
            break;
          }
          case 42:
          case 40: {
            color_.AddEntriesFrom(input, _repeated_color_codec);
            break;
          }
          case 50: {
            ShortName = input.ReadString();
            break;
          }
          case 58:
          case 56: {
            framecolor_.AddEntriesFrom(input, _repeated_framecolor_codec);
            break;
          }
          case 69: {
            WearScore = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ItemWearConfig_Array : pb::IMessage<ItemWearConfig_Array> {
    private static readonly pb::MessageParser<ItemWearConfig_Array> _parser = new pb::MessageParser<ItemWearConfig_Array>(() => new ItemWearConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemWearConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansItemwearconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemWearConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemWearConfig_Array(ItemWearConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemWearConfig_Array Clone() {
      return new ItemWearConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.ItemWearConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.ItemWearConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.ItemWearConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.ItemWearConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.ItemWearConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemWearConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemWearConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemWearConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
