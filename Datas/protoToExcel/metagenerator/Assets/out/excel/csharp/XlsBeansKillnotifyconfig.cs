// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_killnotifyconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_killnotifyconfig.proto</summary>
  public static partial class XlsBeansKillnotifyconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_killnotifyconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansKillnotifyconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiB4bHNfYmVhbnNfa2lsbG5vdGlmeWNvbmZpZy5wcm90bxIKRDExLlBiZWFu",
            "cyKQAgoQS2lsbE5vdGlmeUNvbmZpZxIKCgJpZBgBIAEoDRIOCgZpdGVtSWQY",
            "AiABKA0SDAoEbmFtZRgDIAEoCRIQCghzdWl0TmFtZRgEIAEoCRIPCgdxdWFs",
            "aXR5GAUgASgNEhUKDWRlc2NyaXB0aW9uSUQYBiABKA0SDgoGaWNvbklEGAcg",
            "ASgNEhYKDm5vcm1hbEtpbGxQYXRoGAggASgJEhcKD3NwZWNpYWxLaWxsUGF0",
            "aBgJIAEoCRINCgVvcmRlchgKIAEoDRIRCglpc0RlZmF1bHQYCyABKAgSEwoL",
            "aXNFeGNsdXNpdmUYDCABKAgSEQoJcm9ib3RVc2VkGA0gASgNEg0KBUl0ZW1z",
            "GA4gAygNIkUKFktpbGxOb3RpZnlDb25maWdfQXJyYXkSKwoFaXRlbXMYASAD",
            "KAsyHC5EMTEuUGJlYW5zLktpbGxOb3RpZnlDb25maWdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.KillNotifyConfig), global::D11.Pbeans.KillNotifyConfig.Parser, new[]{ "Id", "ItemId", "Name", "SuitName", "Quality", "DescriptionID", "IconID", "NormalKillPath", "SpecialKillPath", "Order", "IsDefault", "IsExclusive", "RobotUsed", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.KillNotifyConfig_Array), global::D11.Pbeans.KillNotifyConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class KillNotifyConfig : pb::IMessage<KillNotifyConfig> {
    private static readonly pb::MessageParser<KillNotifyConfig> _parser = new pb::MessageParser<KillNotifyConfig>(() => new KillNotifyConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KillNotifyConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansKillnotifyconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KillNotifyConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KillNotifyConfig(KillNotifyConfig other) : this() {
      id_ = other.id_;
      itemId_ = other.itemId_;
      name_ = other.name_;
      suitName_ = other.suitName_;
      quality_ = other.quality_;
      descriptionID_ = other.descriptionID_;
      iconID_ = other.iconID_;
      normalKillPath_ = other.normalKillPath_;
      specialKillPath_ = other.specialKillPath_;
      order_ = other.order_;
      isDefault_ = other.isDefault_;
      isExclusive_ = other.isExclusive_;
      robotUsed_ = other.robotUsed_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KillNotifyConfig Clone() {
      return new KillNotifyConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 检查用 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private uint itemId_;
    /// <summary>
    /// 物品ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// 名称 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "suitName" field.</summary>
    public const int SuitNameFieldNumber = 4;
    private string suitName_ = "";
    /// <summary>
    /// 系列名称 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SuitName {
      get { return suitName_; }
      set {
        suitName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 5;
    private uint quality_;
    /// <summary>
    /// 品质 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "descriptionID" field.</summary>
    public const int DescriptionIDFieldNumber = 6;
    private uint descriptionID_;
    /// <summary>
    /// 描述 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DescriptionID {
      get { return descriptionID_; }
      set {
        descriptionID_ = value;
      }
    }

    /// <summary>Field number for the "iconID" field.</summary>
    public const int IconIDFieldNumber = 7;
    private uint iconID_;
    /// <summary>
    /// 图片资源id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint IconID {
      get { return iconID_; }
      set {
        iconID_ = value;
      }
    }

    /// <summary>Field number for the "normalKillPath" field.</summary>
    public const int NormalKillPathFieldNumber = 8;
    private string normalKillPath_ = "";
    /// <summary>
    /// 普通击杀资源路径 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NormalKillPath {
      get { return normalKillPath_; }
      set {
        normalKillPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "specialKillPath" field.</summary>
    public const int SpecialKillPathFieldNumber = 9;
    private string specialKillPath_ = "";
    /// <summary>
    /// 特殊击杀资源路径 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpecialKillPath {
      get { return specialKillPath_; }
      set {
        specialKillPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 10;
    private uint order_;
    /// <summary>
    /// 排序(从小到大) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "isDefault" field.</summary>
    public const int IsDefaultFieldNumber = 11;
    private bool isDefault_;
    /// <summary>
    /// 默认解锁 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDefault {
      get { return isDefault_; }
      set {
        isDefault_ = value;
      }
    }

    /// <summary>Field number for the "isExclusive" field.</summary>
    public const int IsExclusiveFieldNumber = 12;
    private bool isExclusive_;
    /// <summary>
    /// 是否是专属 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsExclusive {
      get { return isExclusive_; }
      set {
        isExclusive_ = value;
      }
    }

    /// <summary>Field number for the "robotUsed" field.</summary>
    public const int RobotUsedFieldNumber = 13;
    private uint robotUsed_;
    /// <summary>
    /// 机器人是否可用,1:可用 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RobotUsed {
      get { return robotUsed_; }
      set {
        robotUsed_ = value;
      }
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 14;
    private static readonly pb::FieldCodec<uint> _repeated_items_codec
        = pb::FieldCodec.ForUInt32(114);
    private readonly pbc::RepeatedField<uint> items_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 普通击杀 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KillNotifyConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KillNotifyConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ItemId != other.ItemId) return false;
      if (Name != other.Name) return false;
      if (SuitName != other.SuitName) return false;
      if (Quality != other.Quality) return false;
      if (DescriptionID != other.DescriptionID) return false;
      if (IconID != other.IconID) return false;
      if (NormalKillPath != other.NormalKillPath) return false;
      if (SpecialKillPath != other.SpecialKillPath) return false;
      if (Order != other.Order) return false;
      if (IsDefault != other.IsDefault) return false;
      if (IsExclusive != other.IsExclusive) return false;
      if (RobotUsed != other.RobotUsed) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SuitName.Length != 0) hash ^= SuitName.GetHashCode();
      if (Quality != 0) hash ^= Quality.GetHashCode();
      if (DescriptionID != 0) hash ^= DescriptionID.GetHashCode();
      if (IconID != 0) hash ^= IconID.GetHashCode();
      if (NormalKillPath.Length != 0) hash ^= NormalKillPath.GetHashCode();
      if (SpecialKillPath.Length != 0) hash ^= SpecialKillPath.GetHashCode();
      if (Order != 0) hash ^= Order.GetHashCode();
      if (IsDefault != false) hash ^= IsDefault.GetHashCode();
      if (IsExclusive != false) hash ^= IsExclusive.GetHashCode();
      if (RobotUsed != 0) hash ^= RobotUsed.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ItemId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (SuitName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SuitName);
      }
      if (Quality != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Quality);
      }
      if (DescriptionID != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(DescriptionID);
      }
      if (IconID != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(IconID);
      }
      if (NormalKillPath.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(NormalKillPath);
      }
      if (SpecialKillPath.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SpecialKillPath);
      }
      if (Order != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Order);
      }
      if (IsDefault != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsDefault);
      }
      if (IsExclusive != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsExclusive);
      }
      if (RobotUsed != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(RobotUsed);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SuitName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SuitName);
      }
      if (Quality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quality);
      }
      if (DescriptionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DescriptionID);
      }
      if (IconID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IconID);
      }
      if (NormalKillPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NormalKillPath);
      }
      if (SpecialKillPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpecialKillPath);
      }
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Order);
      }
      if (IsDefault != false) {
        size += 1 + 1;
      }
      if (IsExclusive != false) {
        size += 1 + 1;
      }
      if (RobotUsed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RobotUsed);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KillNotifyConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SuitName.Length != 0) {
        SuitName = other.SuitName;
      }
      if (other.Quality != 0) {
        Quality = other.Quality;
      }
      if (other.DescriptionID != 0) {
        DescriptionID = other.DescriptionID;
      }
      if (other.IconID != 0) {
        IconID = other.IconID;
      }
      if (other.NormalKillPath.Length != 0) {
        NormalKillPath = other.NormalKillPath;
      }
      if (other.SpecialKillPath.Length != 0) {
        SpecialKillPath = other.SpecialKillPath;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      if (other.IsDefault != false) {
        IsDefault = other.IsDefault;
      }
      if (other.IsExclusive != false) {
        IsExclusive = other.IsExclusive;
      }
      if (other.RobotUsed != 0) {
        RobotUsed = other.RobotUsed;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadUInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            SuitName = input.ReadString();
            break;
          }
          case 40: {
            Quality = input.ReadUInt32();
            break;
          }
          case 48: {
            DescriptionID = input.ReadUInt32();
            break;
          }
          case 56: {
            IconID = input.ReadUInt32();
            break;
          }
          case 66: {
            NormalKillPath = input.ReadString();
            break;
          }
          case 74: {
            SpecialKillPath = input.ReadString();
            break;
          }
          case 80: {
            Order = input.ReadUInt32();
            break;
          }
          case 88: {
            IsDefault = input.ReadBool();
            break;
          }
          case 96: {
            IsExclusive = input.ReadBool();
            break;
          }
          case 104: {
            RobotUsed = input.ReadUInt32();
            break;
          }
          case 114:
          case 112: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KillNotifyConfig_Array : pb::IMessage<KillNotifyConfig_Array> {
    private static readonly pb::MessageParser<KillNotifyConfig_Array> _parser = new pb::MessageParser<KillNotifyConfig_Array>(() => new KillNotifyConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KillNotifyConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansKillnotifyconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KillNotifyConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KillNotifyConfig_Array(KillNotifyConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KillNotifyConfig_Array Clone() {
      return new KillNotifyConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.KillNotifyConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.KillNotifyConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.KillNotifyConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.KillNotifyConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.KillNotifyConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KillNotifyConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KillNotifyConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KillNotifyConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
