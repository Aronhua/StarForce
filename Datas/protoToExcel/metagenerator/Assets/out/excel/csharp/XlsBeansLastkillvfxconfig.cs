// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_lastkillvfxconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_lastkillvfxconfig.proto</summary>
  public static partial class XlsBeansLastkillvfxconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_lastkillvfxconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansLastkillvfxconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiF4bHNfYmVhbnNfbGFzdGtpbGx2Znhjb25maWcucHJvdG8SCkQxMS5QYmVh",
            "bnMizAYKEUxhc3RLaWxsVkZYQ29uZmlnEgoKAmlkGAEgASgNEhAKCHdlYXBv",
            "bklkGAIgASgNEhYKDm5vcm1hbEtpbGxQYXRoGAMgASgJEhcKD3NwZWNpYWxL",
            "aWxsUGF0aBgEIAEoCRIUCgx0aW1lSW50ZXJ2YWwYBSABKAISFwoPbm9ybWFs",
            "S2lsbFZvaWNlGAYgASgJEhgKEHNwZWNpYWxLaWxsVm9pY2UYByABKAkSFQoN",
            "ZGVzY3JpcHRpb25JRBgIIAEoDRJACgxub3JtYWxCb3VuZHMYCSABKAsyKi5E",
            "MTEuUGJlYW5zLkxhc3RLaWxsVkZYQ29uZmlnX25vcm1hbEJvdW5kcxJCCg1z",
            "cGVjaWFsQm91bmRzGAogASgLMisuRDExLlBiZWFucy5MYXN0S2lsbFZGWENv",
            "bmZpZ19zcGVjaWFsQm91bmRzEgwKBG5hbWUYCyABKAkSDgoGaWNvbklEGAwg",
            "ASgNEhMKC2lzRXhjbHVzaXZlGA0gASgIEg0KBW9yZGVyGA4gASgNEhgKEG1f",
            "aGF2ZU5vcm1hbEtpbGwYDyABKAgSFQoNbV9Ta2luS2lsbFZGWBgQIAEoDRIX",
            "Cg9tX1NraW5LaWxsQXVkaW8YESABKAkSGwoTbV9Ta2luS2lsbEFsbG93QW5p",
            "bRgSIAEoCBIiChptX1NraW5LaWxsQ2FtZXJhU2hha2VBc3NldBgTIAEoCRIn",
            "Ch9tX1NraW5LaWxsQ2FtZXJhU2hha2VEZWxheVRpbWVzGBQgASgCEiAKGG1f",
            "U2tpbktpbGxBbXBsaXR1ZGVSYW5nZRgVIAEoAhIWCg5tX2hhdmVMYXN0S2ls",
            "bBgWIAEoCBIZChFtX1NraW5MYXN0S2lsbFZGWBgXIAEoDRIbChNtX1NraW5M",
            "YXN0S2lsbEF1ZGlvGBggASgJEh8KF21fU2tpbkxhc3RLaWxsQWxsb3dBbmlt",
            "GBkgASgIEiYKHm1fU2tpbkxhc3RLaWxsQ2FtZXJhU2hha2VBc3NldBgaIAEo",
            "CRIrCiNtX1NraW5MYXN0S2lsbENhbWVyYVNoYWtlRGVsYXlUaW1lcxgbIAEo",
            "AhIkChxtX1NraW5MYXN0S2lsbEFtcGxpdHVkZVJhbmdlGBwgASgCImQKHkxh",
            "c3RLaWxsVkZYQ29uZmlnX25vcm1hbEJvdW5kcxIPCgdjZW50ZXJYGAEgASgC",
            "Eg8KB2NlbnRlclkYAiABKAISDwoHZXh0ZW50WBgDIAEoAhIPCgdleHRlbnRZ",
            "GAQgASgCImUKH0xhc3RLaWxsVkZYQ29uZmlnX3NwZWNpYWxCb3VuZHMSDwoH",
            "Y2VudGVyWBgBIAEoAhIPCgdjZW50ZXJZGAIgASgCEg8KB2V4dGVudFgYAyAB",
            "KAISDwoHZXh0ZW50WRgEIAEoAiJHChdMYXN0S2lsbFZGWENvbmZpZ19BcnJh",
            "eRIsCgVpdGVtcxgBIAMoCzIdLkQxMS5QYmVhbnMuTGFzdEtpbGxWRlhDb25m",
            "aWdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.LastKillVFXConfig), global::D11.Pbeans.LastKillVFXConfig.Parser, new[]{ "Id", "WeaponId", "NormalKillPath", "SpecialKillPath", "TimeInterval", "NormalKillVoice", "SpecialKillVoice", "DescriptionID", "NormalBounds", "SpecialBounds", "Name", "IconID", "IsExclusive", "Order", "MHaveNormalKill", "MSkinKillVFX", "MSkinKillAudio", "MSkinKillAllowAnim", "MSkinKillCameraShakeAsset", "MSkinKillCameraShakeDelayTimes", "MSkinKillAmplitudeRange", "MHaveLastKill", "MSkinLastKillVFX", "MSkinLastKillAudio", "MSkinLastKillAllowAnim", "MSkinLastKillCameraShakeAsset", "MSkinLastKillCameraShakeDelayTimes", "MSkinLastKillAmplitudeRange" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.LastKillVFXConfig_normalBounds), global::D11.Pbeans.LastKillVFXConfig_normalBounds.Parser, new[]{ "CenterX", "CenterY", "ExtentX", "ExtentY" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.LastKillVFXConfig_specialBounds), global::D11.Pbeans.LastKillVFXConfig_specialBounds.Parser, new[]{ "CenterX", "CenterY", "ExtentX", "ExtentY" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.LastKillVFXConfig_Array), global::D11.Pbeans.LastKillVFXConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LastKillVFXConfig : pb::IMessage<LastKillVFXConfig> {
    private static readonly pb::MessageParser<LastKillVFXConfig> _parser = new pb::MessageParser<LastKillVFXConfig>(() => new LastKillVFXConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LastKillVFXConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansLastkillvfxconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastKillVFXConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastKillVFXConfig(LastKillVFXConfig other) : this() {
      id_ = other.id_;
      weaponId_ = other.weaponId_;
      normalKillPath_ = other.normalKillPath_;
      specialKillPath_ = other.specialKillPath_;
      timeInterval_ = other.timeInterval_;
      normalKillVoice_ = other.normalKillVoice_;
      specialKillVoice_ = other.specialKillVoice_;
      descriptionID_ = other.descriptionID_;
      normalBounds_ = other.normalBounds_ != null ? other.normalBounds_.Clone() : null;
      specialBounds_ = other.specialBounds_ != null ? other.specialBounds_.Clone() : null;
      name_ = other.name_;
      iconID_ = other.iconID_;
      isExclusive_ = other.isExclusive_;
      order_ = other.order_;
      mHaveNormalKill_ = other.mHaveNormalKill_;
      mSkinKillVFX_ = other.mSkinKillVFX_;
      mSkinKillAudio_ = other.mSkinKillAudio_;
      mSkinKillAllowAnim_ = other.mSkinKillAllowAnim_;
      mSkinKillCameraShakeAsset_ = other.mSkinKillCameraShakeAsset_;
      mSkinKillCameraShakeDelayTimes_ = other.mSkinKillCameraShakeDelayTimes_;
      mSkinKillAmplitudeRange_ = other.mSkinKillAmplitudeRange_;
      mHaveLastKill_ = other.mHaveLastKill_;
      mSkinLastKillVFX_ = other.mSkinLastKillVFX_;
      mSkinLastKillAudio_ = other.mSkinLastKillAudio_;
      mSkinLastKillAllowAnim_ = other.mSkinLastKillAllowAnim_;
      mSkinLastKillCameraShakeAsset_ = other.mSkinLastKillCameraShakeAsset_;
      mSkinLastKillCameraShakeDelayTimes_ = other.mSkinLastKillCameraShakeDelayTimes_;
      mSkinLastKillAmplitudeRange_ = other.mSkinLastKillAmplitudeRange_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastKillVFXConfig Clone() {
      return new LastKillVFXConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "weaponId" field.</summary>
    public const int WeaponIdFieldNumber = 2;
    private uint weaponId_;
    /// <summary>
    /// 武器ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WeaponId {
      get { return weaponId_; }
      set {
        weaponId_ = value;
      }
    }

    /// <summary>Field number for the "normalKillPath" field.</summary>
    public const int NormalKillPathFieldNumber = 3;
    private string normalKillPath_ = "";
    /// <summary>
    /// 普通击杀资源路径 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NormalKillPath {
      get { return normalKillPath_; }
      set {
        normalKillPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "specialKillPath" field.</summary>
    public const int SpecialKillPathFieldNumber = 4;
    private string specialKillPath_ = "";
    /// <summary>
    /// 最后击杀资源路径 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpecialKillPath {
      get { return specialKillPath_; }
      set {
        specialKillPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timeInterval" field.</summary>
    public const int TimeIntervalFieldNumber = 5;
    private float timeInterval_;
    /// <summary>
    /// 特效播放间隔时长，填写大于0的数字时生效，小于等于0则为不循环 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float TimeInterval {
      get { return timeInterval_; }
      set {
        timeInterval_ = value;
      }
    }

    /// <summary>Field number for the "normalKillVoice" field.</summary>
    public const int NormalKillVoiceFieldNumber = 6;
    private string normalKillVoice_ = "";
    /// <summary>
    /// 局外普通击杀音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NormalKillVoice {
      get { return normalKillVoice_; }
      set {
        normalKillVoice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "specialKillVoice" field.</summary>
    public const int SpecialKillVoiceFieldNumber = 7;
    private string specialKillVoice_ = "";
    /// <summary>
    /// 局外特殊击杀音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpecialKillVoice {
      get { return specialKillVoice_; }
      set {
        specialKillVoice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "descriptionID" field.</summary>
    public const int DescriptionIDFieldNumber = 8;
    private uint descriptionID_;
    /// <summary>
    /// 描述（对应ResourceItemDescriptionConfig表中的id列） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DescriptionID {
      get { return descriptionID_; }
      set {
        descriptionID_ = value;
      }
    }

    /// <summary>Field number for the "normalBounds" field.</summary>
    public const int NormalBoundsFieldNumber = 9;
    private global::D11.Pbeans.LastKillVFXConfig_normalBounds normalBounds_;
    /// <summary>
    /// 包围盒中心X 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::D11.Pbeans.LastKillVFXConfig_normalBounds NormalBounds {
      get { return normalBounds_; }
      set {
        normalBounds_ = value;
      }
    }

    /// <summary>Field number for the "specialBounds" field.</summary>
    public const int SpecialBoundsFieldNumber = 10;
    private global::D11.Pbeans.LastKillVFXConfig_specialBounds specialBounds_;
    /// <summary>
    /// 包围盒中心X 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::D11.Pbeans.LastKillVFXConfig_specialBounds SpecialBounds {
      get { return specialBounds_; }
      set {
        specialBounds_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 11;
    private string name_ = "";
    /// <summary>
    /// 物品名称 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iconID" field.</summary>
    public const int IconIDFieldNumber = 12;
    private uint iconID_;
    /// <summary>
    /// 图标资源ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint IconID {
      get { return iconID_; }
      set {
        iconID_ = value;
      }
    }

    /// <summary>Field number for the "isExclusive" field.</summary>
    public const int IsExclusiveFieldNumber = 13;
    private bool isExclusive_;
    /// <summary>
    /// 是否是专属 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsExclusive {
      get { return isExclusive_; }
      set {
        isExclusive_ = value;
      }
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 14;
    private uint order_;
    /// <summary>
    /// 排序(从小到大) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "m_haveNormalKill" field.</summary>
    public const int MHaveNormalKillFieldNumber = 15;
    private bool mHaveNormalKill_;
    /// <summary>
    /// 是否存在普通击杀 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MHaveNormalKill {
      get { return mHaveNormalKill_; }
      set {
        mHaveNormalKill_ = value;
      }
    }

    /// <summary>Field number for the "m_SkinKillVFX" field.</summary>
    public const int MSkinKillVFXFieldNumber = 16;
    private uint mSkinKillVFX_;
    /// <summary>
    /// 普通击杀3p特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MSkinKillVFX {
      get { return mSkinKillVFX_; }
      set {
        mSkinKillVFX_ = value;
      }
    }

    /// <summary>Field number for the "m_SkinKillAudio" field.</summary>
    public const int MSkinKillAudioFieldNumber = 17;
    private string mSkinKillAudio_ = "";
    /// <summary>
    /// 普通击杀3p音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MSkinKillAudio {
      get { return mSkinKillAudio_; }
      set {
        mSkinKillAudio_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "m_SkinKillAllowAnim" field.</summary>
    public const int MSkinKillAllowAnimFieldNumber = 18;
    private bool mSkinKillAllowAnim_;
    /// <summary>
    /// 普通击杀打断3p人物动画/Rag 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MSkinKillAllowAnim {
      get { return mSkinKillAllowAnim_; }
      set {
        mSkinKillAllowAnim_ = value;
      }
    }

    /// <summary>Field number for the "m_SkinKillCameraShakeAsset" field.</summary>
    public const int MSkinKillCameraShakeAssetFieldNumber = 19;
    private string mSkinKillCameraShakeAsset_ = "";
    /// <summary>
    /// 普通击杀震屏文件 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MSkinKillCameraShakeAsset {
      get { return mSkinKillCameraShakeAsset_; }
      set {
        mSkinKillCameraShakeAsset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "m_SkinKillCameraShakeDelayTimes" field.</summary>
    public const int MSkinKillCameraShakeDelayTimesFieldNumber = 20;
    private float mSkinKillCameraShakeDelayTimes_;
    /// <summary>
    /// 普通击杀震屏延迟时间 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MSkinKillCameraShakeDelayTimes {
      get { return mSkinKillCameraShakeDelayTimes_; }
      set {
        mSkinKillCameraShakeDelayTimes_ = value;
      }
    }

    /// <summary>Field number for the "m_SkinKillAmplitudeRange" field.</summary>
    public const int MSkinKillAmplitudeRangeFieldNumber = 21;
    private float mSkinKillAmplitudeRange_;
    /// <summary>
    /// 普通击杀振幅 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MSkinKillAmplitudeRange {
      get { return mSkinKillAmplitudeRange_; }
      set {
        mSkinKillAmplitudeRange_ = value;
      }
    }

    /// <summary>Field number for the "m_haveLastKill" field.</summary>
    public const int MHaveLastKillFieldNumber = 22;
    private bool mHaveLastKill_;
    /// <summary>
    /// 是否存在最后击杀 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MHaveLastKill {
      get { return mHaveLastKill_; }
      set {
        mHaveLastKill_ = value;
      }
    }

    /// <summary>Field number for the "m_SkinLastKillVFX" field.</summary>
    public const int MSkinLastKillVFXFieldNumber = 23;
    private uint mSkinLastKillVFX_;
    /// <summary>
    /// 最后一击3p特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MSkinLastKillVFX {
      get { return mSkinLastKillVFX_; }
      set {
        mSkinLastKillVFX_ = value;
      }
    }

    /// <summary>Field number for the "m_SkinLastKillAudio" field.</summary>
    public const int MSkinLastKillAudioFieldNumber = 24;
    private string mSkinLastKillAudio_ = "";
    /// <summary>
    /// 最后一击3p音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MSkinLastKillAudio {
      get { return mSkinLastKillAudio_; }
      set {
        mSkinLastKillAudio_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "m_SkinLastKillAllowAnim" field.</summary>
    public const int MSkinLastKillAllowAnimFieldNumber = 25;
    private bool mSkinLastKillAllowAnim_;
    /// <summary>
    /// 最后一击打断3p人物动画/Rag 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MSkinLastKillAllowAnim {
      get { return mSkinLastKillAllowAnim_; }
      set {
        mSkinLastKillAllowAnim_ = value;
      }
    }

    /// <summary>Field number for the "m_SkinLastKillCameraShakeAsset" field.</summary>
    public const int MSkinLastKillCameraShakeAssetFieldNumber = 26;
    private string mSkinLastKillCameraShakeAsset_ = "";
    /// <summary>
    /// 最后一击震屏文件 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MSkinLastKillCameraShakeAsset {
      get { return mSkinLastKillCameraShakeAsset_; }
      set {
        mSkinLastKillCameraShakeAsset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "m_SkinLastKillCameraShakeDelayTimes" field.</summary>
    public const int MSkinLastKillCameraShakeDelayTimesFieldNumber = 27;
    private float mSkinLastKillCameraShakeDelayTimes_;
    /// <summary>
    /// 最后一击震屏延迟时间 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MSkinLastKillCameraShakeDelayTimes {
      get { return mSkinLastKillCameraShakeDelayTimes_; }
      set {
        mSkinLastKillCameraShakeDelayTimes_ = value;
      }
    }

    /// <summary>Field number for the "m_SkinLastKillAmplitudeRange" field.</summary>
    public const int MSkinLastKillAmplitudeRangeFieldNumber = 28;
    private float mSkinLastKillAmplitudeRange_;
    /// <summary>
    /// 最后一击振幅 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MSkinLastKillAmplitudeRange {
      get { return mSkinLastKillAmplitudeRange_; }
      set {
        mSkinLastKillAmplitudeRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LastKillVFXConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LastKillVFXConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (WeaponId != other.WeaponId) return false;
      if (NormalKillPath != other.NormalKillPath) return false;
      if (SpecialKillPath != other.SpecialKillPath) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TimeInterval, other.TimeInterval)) return false;
      if (NormalKillVoice != other.NormalKillVoice) return false;
      if (SpecialKillVoice != other.SpecialKillVoice) return false;
      if (DescriptionID != other.DescriptionID) return false;
      if (!object.Equals(NormalBounds, other.NormalBounds)) return false;
      if (!object.Equals(SpecialBounds, other.SpecialBounds)) return false;
      if (Name != other.Name) return false;
      if (IconID != other.IconID) return false;
      if (IsExclusive != other.IsExclusive) return false;
      if (Order != other.Order) return false;
      if (MHaveNormalKill != other.MHaveNormalKill) return false;
      if (MSkinKillVFX != other.MSkinKillVFX) return false;
      if (MSkinKillAudio != other.MSkinKillAudio) return false;
      if (MSkinKillAllowAnim != other.MSkinKillAllowAnim) return false;
      if (MSkinKillCameraShakeAsset != other.MSkinKillCameraShakeAsset) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MSkinKillCameraShakeDelayTimes, other.MSkinKillCameraShakeDelayTimes)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MSkinKillAmplitudeRange, other.MSkinKillAmplitudeRange)) return false;
      if (MHaveLastKill != other.MHaveLastKill) return false;
      if (MSkinLastKillVFX != other.MSkinLastKillVFX) return false;
      if (MSkinLastKillAudio != other.MSkinLastKillAudio) return false;
      if (MSkinLastKillAllowAnim != other.MSkinLastKillAllowAnim) return false;
      if (MSkinLastKillCameraShakeAsset != other.MSkinLastKillCameraShakeAsset) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MSkinLastKillCameraShakeDelayTimes, other.MSkinLastKillCameraShakeDelayTimes)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MSkinLastKillAmplitudeRange, other.MSkinLastKillAmplitudeRange)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (WeaponId != 0) hash ^= WeaponId.GetHashCode();
      if (NormalKillPath.Length != 0) hash ^= NormalKillPath.GetHashCode();
      if (SpecialKillPath.Length != 0) hash ^= SpecialKillPath.GetHashCode();
      if (TimeInterval != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TimeInterval);
      if (NormalKillVoice.Length != 0) hash ^= NormalKillVoice.GetHashCode();
      if (SpecialKillVoice.Length != 0) hash ^= SpecialKillVoice.GetHashCode();
      if (DescriptionID != 0) hash ^= DescriptionID.GetHashCode();
      if (normalBounds_ != null) hash ^= NormalBounds.GetHashCode();
      if (specialBounds_ != null) hash ^= SpecialBounds.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (IconID != 0) hash ^= IconID.GetHashCode();
      if (IsExclusive != false) hash ^= IsExclusive.GetHashCode();
      if (Order != 0) hash ^= Order.GetHashCode();
      if (MHaveNormalKill != false) hash ^= MHaveNormalKill.GetHashCode();
      if (MSkinKillVFX != 0) hash ^= MSkinKillVFX.GetHashCode();
      if (MSkinKillAudio.Length != 0) hash ^= MSkinKillAudio.GetHashCode();
      if (MSkinKillAllowAnim != false) hash ^= MSkinKillAllowAnim.GetHashCode();
      if (MSkinKillCameraShakeAsset.Length != 0) hash ^= MSkinKillCameraShakeAsset.GetHashCode();
      if (MSkinKillCameraShakeDelayTimes != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MSkinKillCameraShakeDelayTimes);
      if (MSkinKillAmplitudeRange != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MSkinKillAmplitudeRange);
      if (MHaveLastKill != false) hash ^= MHaveLastKill.GetHashCode();
      if (MSkinLastKillVFX != 0) hash ^= MSkinLastKillVFX.GetHashCode();
      if (MSkinLastKillAudio.Length != 0) hash ^= MSkinLastKillAudio.GetHashCode();
      if (MSkinLastKillAllowAnim != false) hash ^= MSkinLastKillAllowAnim.GetHashCode();
      if (MSkinLastKillCameraShakeAsset.Length != 0) hash ^= MSkinLastKillCameraShakeAsset.GetHashCode();
      if (MSkinLastKillCameraShakeDelayTimes != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MSkinLastKillCameraShakeDelayTimes);
      if (MSkinLastKillAmplitudeRange != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MSkinLastKillAmplitudeRange);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (WeaponId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(WeaponId);
      }
      if (NormalKillPath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NormalKillPath);
      }
      if (SpecialKillPath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SpecialKillPath);
      }
      if (TimeInterval != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(TimeInterval);
      }
      if (NormalKillVoice.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NormalKillVoice);
      }
      if (SpecialKillVoice.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SpecialKillVoice);
      }
      if (DescriptionID != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(DescriptionID);
      }
      if (normalBounds_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(NormalBounds);
      }
      if (specialBounds_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(SpecialBounds);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Name);
      }
      if (IconID != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(IconID);
      }
      if (IsExclusive != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsExclusive);
      }
      if (Order != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Order);
      }
      if (MHaveNormalKill != false) {
        output.WriteRawTag(120);
        output.WriteBool(MHaveNormalKill);
      }
      if (MSkinKillVFX != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(MSkinKillVFX);
      }
      if (MSkinKillAudio.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(MSkinKillAudio);
      }
      if (MSkinKillAllowAnim != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(MSkinKillAllowAnim);
      }
      if (MSkinKillCameraShakeAsset.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(MSkinKillCameraShakeAsset);
      }
      if (MSkinKillCameraShakeDelayTimes != 0F) {
        output.WriteRawTag(165, 1);
        output.WriteFloat(MSkinKillCameraShakeDelayTimes);
      }
      if (MSkinKillAmplitudeRange != 0F) {
        output.WriteRawTag(173, 1);
        output.WriteFloat(MSkinKillAmplitudeRange);
      }
      if (MHaveLastKill != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(MHaveLastKill);
      }
      if (MSkinLastKillVFX != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(MSkinLastKillVFX);
      }
      if (MSkinLastKillAudio.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(MSkinLastKillAudio);
      }
      if (MSkinLastKillAllowAnim != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(MSkinLastKillAllowAnim);
      }
      if (MSkinLastKillCameraShakeAsset.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(MSkinLastKillCameraShakeAsset);
      }
      if (MSkinLastKillCameraShakeDelayTimes != 0F) {
        output.WriteRawTag(221, 1);
        output.WriteFloat(MSkinLastKillCameraShakeDelayTimes);
      }
      if (MSkinLastKillAmplitudeRange != 0F) {
        output.WriteRawTag(229, 1);
        output.WriteFloat(MSkinLastKillAmplitudeRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (WeaponId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WeaponId);
      }
      if (NormalKillPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NormalKillPath);
      }
      if (SpecialKillPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpecialKillPath);
      }
      if (TimeInterval != 0F) {
        size += 1 + 4;
      }
      if (NormalKillVoice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NormalKillVoice);
      }
      if (SpecialKillVoice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpecialKillVoice);
      }
      if (DescriptionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DescriptionID);
      }
      if (normalBounds_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NormalBounds);
      }
      if (specialBounds_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpecialBounds);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (IconID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IconID);
      }
      if (IsExclusive != false) {
        size += 1 + 1;
      }
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Order);
      }
      if (MHaveNormalKill != false) {
        size += 1 + 1;
      }
      if (MSkinKillVFX != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MSkinKillVFX);
      }
      if (MSkinKillAudio.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MSkinKillAudio);
      }
      if (MSkinKillAllowAnim != false) {
        size += 2 + 1;
      }
      if (MSkinKillCameraShakeAsset.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MSkinKillCameraShakeAsset);
      }
      if (MSkinKillCameraShakeDelayTimes != 0F) {
        size += 2 + 4;
      }
      if (MSkinKillAmplitudeRange != 0F) {
        size += 2 + 4;
      }
      if (MHaveLastKill != false) {
        size += 2 + 1;
      }
      if (MSkinLastKillVFX != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MSkinLastKillVFX);
      }
      if (MSkinLastKillAudio.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MSkinLastKillAudio);
      }
      if (MSkinLastKillAllowAnim != false) {
        size += 2 + 1;
      }
      if (MSkinLastKillCameraShakeAsset.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MSkinLastKillCameraShakeAsset);
      }
      if (MSkinLastKillCameraShakeDelayTimes != 0F) {
        size += 2 + 4;
      }
      if (MSkinLastKillAmplitudeRange != 0F) {
        size += 2 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LastKillVFXConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.WeaponId != 0) {
        WeaponId = other.WeaponId;
      }
      if (other.NormalKillPath.Length != 0) {
        NormalKillPath = other.NormalKillPath;
      }
      if (other.SpecialKillPath.Length != 0) {
        SpecialKillPath = other.SpecialKillPath;
      }
      if (other.TimeInterval != 0F) {
        TimeInterval = other.TimeInterval;
      }
      if (other.NormalKillVoice.Length != 0) {
        NormalKillVoice = other.NormalKillVoice;
      }
      if (other.SpecialKillVoice.Length != 0) {
        SpecialKillVoice = other.SpecialKillVoice;
      }
      if (other.DescriptionID != 0) {
        DescriptionID = other.DescriptionID;
      }
      if (other.normalBounds_ != null) {
        if (normalBounds_ == null) {
          NormalBounds = new global::D11.Pbeans.LastKillVFXConfig_normalBounds();
        }
        NormalBounds.MergeFrom(other.NormalBounds);
      }
      if (other.specialBounds_ != null) {
        if (specialBounds_ == null) {
          SpecialBounds = new global::D11.Pbeans.LastKillVFXConfig_specialBounds();
        }
        SpecialBounds.MergeFrom(other.SpecialBounds);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.IconID != 0) {
        IconID = other.IconID;
      }
      if (other.IsExclusive != false) {
        IsExclusive = other.IsExclusive;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      if (other.MHaveNormalKill != false) {
        MHaveNormalKill = other.MHaveNormalKill;
      }
      if (other.MSkinKillVFX != 0) {
        MSkinKillVFX = other.MSkinKillVFX;
      }
      if (other.MSkinKillAudio.Length != 0) {
        MSkinKillAudio = other.MSkinKillAudio;
      }
      if (other.MSkinKillAllowAnim != false) {
        MSkinKillAllowAnim = other.MSkinKillAllowAnim;
      }
      if (other.MSkinKillCameraShakeAsset.Length != 0) {
        MSkinKillCameraShakeAsset = other.MSkinKillCameraShakeAsset;
      }
      if (other.MSkinKillCameraShakeDelayTimes != 0F) {
        MSkinKillCameraShakeDelayTimes = other.MSkinKillCameraShakeDelayTimes;
      }
      if (other.MSkinKillAmplitudeRange != 0F) {
        MSkinKillAmplitudeRange = other.MSkinKillAmplitudeRange;
      }
      if (other.MHaveLastKill != false) {
        MHaveLastKill = other.MHaveLastKill;
      }
      if (other.MSkinLastKillVFX != 0) {
        MSkinLastKillVFX = other.MSkinLastKillVFX;
      }
      if (other.MSkinLastKillAudio.Length != 0) {
        MSkinLastKillAudio = other.MSkinLastKillAudio;
      }
      if (other.MSkinLastKillAllowAnim != false) {
        MSkinLastKillAllowAnim = other.MSkinLastKillAllowAnim;
      }
      if (other.MSkinLastKillCameraShakeAsset.Length != 0) {
        MSkinLastKillCameraShakeAsset = other.MSkinLastKillCameraShakeAsset;
      }
      if (other.MSkinLastKillCameraShakeDelayTimes != 0F) {
        MSkinLastKillCameraShakeDelayTimes = other.MSkinLastKillCameraShakeDelayTimes;
      }
      if (other.MSkinLastKillAmplitudeRange != 0F) {
        MSkinLastKillAmplitudeRange = other.MSkinLastKillAmplitudeRange;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            WeaponId = input.ReadUInt32();
            break;
          }
          case 26: {
            NormalKillPath = input.ReadString();
            break;
          }
          case 34: {
            SpecialKillPath = input.ReadString();
            break;
          }
          case 45: {
            TimeInterval = input.ReadFloat();
            break;
          }
          case 50: {
            NormalKillVoice = input.ReadString();
            break;
          }
          case 58: {
            SpecialKillVoice = input.ReadString();
            break;
          }
          case 64: {
            DescriptionID = input.ReadUInt32();
            break;
          }
          case 74: {
            if (normalBounds_ == null) {
              NormalBounds = new global::D11.Pbeans.LastKillVFXConfig_normalBounds();
            }
            input.ReadMessage(NormalBounds);
            break;
          }
          case 82: {
            if (specialBounds_ == null) {
              SpecialBounds = new global::D11.Pbeans.LastKillVFXConfig_specialBounds();
            }
            input.ReadMessage(SpecialBounds);
            break;
          }
          case 90: {
            Name = input.ReadString();
            break;
          }
          case 96: {
            IconID = input.ReadUInt32();
            break;
          }
          case 104: {
            IsExclusive = input.ReadBool();
            break;
          }
          case 112: {
            Order = input.ReadUInt32();
            break;
          }
          case 120: {
            MHaveNormalKill = input.ReadBool();
            break;
          }
          case 128: {
            MSkinKillVFX = input.ReadUInt32();
            break;
          }
          case 138: {
            MSkinKillAudio = input.ReadString();
            break;
          }
          case 144: {
            MSkinKillAllowAnim = input.ReadBool();
            break;
          }
          case 154: {
            MSkinKillCameraShakeAsset = input.ReadString();
            break;
          }
          case 165: {
            MSkinKillCameraShakeDelayTimes = input.ReadFloat();
            break;
          }
          case 173: {
            MSkinKillAmplitudeRange = input.ReadFloat();
            break;
          }
          case 176: {
            MHaveLastKill = input.ReadBool();
            break;
          }
          case 184: {
            MSkinLastKillVFX = input.ReadUInt32();
            break;
          }
          case 194: {
            MSkinLastKillAudio = input.ReadString();
            break;
          }
          case 200: {
            MSkinLastKillAllowAnim = input.ReadBool();
            break;
          }
          case 210: {
            MSkinLastKillCameraShakeAsset = input.ReadString();
            break;
          }
          case 221: {
            MSkinLastKillCameraShakeDelayTimes = input.ReadFloat();
            break;
          }
          case 229: {
            MSkinLastKillAmplitudeRange = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LastKillVFXConfig_normalBounds : pb::IMessage<LastKillVFXConfig_normalBounds> {
    private static readonly pb::MessageParser<LastKillVFXConfig_normalBounds> _parser = new pb::MessageParser<LastKillVFXConfig_normalBounds>(() => new LastKillVFXConfig_normalBounds());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LastKillVFXConfig_normalBounds> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansLastkillvfxconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastKillVFXConfig_normalBounds() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastKillVFXConfig_normalBounds(LastKillVFXConfig_normalBounds other) : this() {
      centerX_ = other.centerX_;
      centerY_ = other.centerY_;
      extentX_ = other.extentX_;
      extentY_ = other.extentY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastKillVFXConfig_normalBounds Clone() {
      return new LastKillVFXConfig_normalBounds(this);
    }

    /// <summary>Field number for the "centerX" field.</summary>
    public const int CenterXFieldNumber = 1;
    private float centerX_;
    /// <summary>
    /// 包围盒中心X 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CenterX {
      get { return centerX_; }
      set {
        centerX_ = value;
      }
    }

    /// <summary>Field number for the "centerY" field.</summary>
    public const int CenterYFieldNumber = 2;
    private float centerY_;
    /// <summary>
    /// 包围盒中心Y 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CenterY {
      get { return centerY_; }
      set {
        centerY_ = value;
      }
    }

    /// <summary>Field number for the "extentX" field.</summary>
    public const int ExtentXFieldNumber = 3;
    private float extentX_;
    /// <summary>
    /// 包围盒范围X 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ExtentX {
      get { return extentX_; }
      set {
        extentX_ = value;
      }
    }

    /// <summary>Field number for the "extentY" field.</summary>
    public const int ExtentYFieldNumber = 4;
    private float extentY_;
    /// <summary>
    /// 包围盒范围Y 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ExtentY {
      get { return extentY_; }
      set {
        extentY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LastKillVFXConfig_normalBounds);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LastKillVFXConfig_normalBounds other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CenterX, other.CenterX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CenterY, other.CenterY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExtentX, other.ExtentX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExtentY, other.ExtentY)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CenterX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CenterX);
      if (CenterY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CenterY);
      if (ExtentX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExtentX);
      if (ExtentY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExtentY);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CenterX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(CenterX);
      }
      if (CenterY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(CenterY);
      }
      if (ExtentX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ExtentX);
      }
      if (ExtentY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(ExtentY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CenterX != 0F) {
        size += 1 + 4;
      }
      if (CenterY != 0F) {
        size += 1 + 4;
      }
      if (ExtentX != 0F) {
        size += 1 + 4;
      }
      if (ExtentY != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LastKillVFXConfig_normalBounds other) {
      if (other == null) {
        return;
      }
      if (other.CenterX != 0F) {
        CenterX = other.CenterX;
      }
      if (other.CenterY != 0F) {
        CenterY = other.CenterY;
      }
      if (other.ExtentX != 0F) {
        ExtentX = other.ExtentX;
      }
      if (other.ExtentY != 0F) {
        ExtentY = other.ExtentY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            CenterX = input.ReadFloat();
            break;
          }
          case 21: {
            CenterY = input.ReadFloat();
            break;
          }
          case 29: {
            ExtentX = input.ReadFloat();
            break;
          }
          case 37: {
            ExtentY = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LastKillVFXConfig_specialBounds : pb::IMessage<LastKillVFXConfig_specialBounds> {
    private static readonly pb::MessageParser<LastKillVFXConfig_specialBounds> _parser = new pb::MessageParser<LastKillVFXConfig_specialBounds>(() => new LastKillVFXConfig_specialBounds());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LastKillVFXConfig_specialBounds> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansLastkillvfxconfigReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastKillVFXConfig_specialBounds() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastKillVFXConfig_specialBounds(LastKillVFXConfig_specialBounds other) : this() {
      centerX_ = other.centerX_;
      centerY_ = other.centerY_;
      extentX_ = other.extentX_;
      extentY_ = other.extentY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastKillVFXConfig_specialBounds Clone() {
      return new LastKillVFXConfig_specialBounds(this);
    }

    /// <summary>Field number for the "centerX" field.</summary>
    public const int CenterXFieldNumber = 1;
    private float centerX_;
    /// <summary>
    /// 包围盒中心X 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CenterX {
      get { return centerX_; }
      set {
        centerX_ = value;
      }
    }

    /// <summary>Field number for the "centerY" field.</summary>
    public const int CenterYFieldNumber = 2;
    private float centerY_;
    /// <summary>
    /// 包围盒中心Y 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CenterY {
      get { return centerY_; }
      set {
        centerY_ = value;
      }
    }

    /// <summary>Field number for the "extentX" field.</summary>
    public const int ExtentXFieldNumber = 3;
    private float extentX_;
    /// <summary>
    /// 包围盒范围X 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ExtentX {
      get { return extentX_; }
      set {
        extentX_ = value;
      }
    }

    /// <summary>Field number for the "extentY" field.</summary>
    public const int ExtentYFieldNumber = 4;
    private float extentY_;
    /// <summary>
    /// 包围盒范围Y 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ExtentY {
      get { return extentY_; }
      set {
        extentY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LastKillVFXConfig_specialBounds);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LastKillVFXConfig_specialBounds other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CenterX, other.CenterX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CenterY, other.CenterY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExtentX, other.ExtentX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExtentY, other.ExtentY)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CenterX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CenterX);
      if (CenterY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CenterY);
      if (ExtentX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExtentX);
      if (ExtentY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExtentY);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CenterX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(CenterX);
      }
      if (CenterY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(CenterY);
      }
      if (ExtentX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ExtentX);
      }
      if (ExtentY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(ExtentY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CenterX != 0F) {
        size += 1 + 4;
      }
      if (CenterY != 0F) {
        size += 1 + 4;
      }
      if (ExtentX != 0F) {
        size += 1 + 4;
      }
      if (ExtentY != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LastKillVFXConfig_specialBounds other) {
      if (other == null) {
        return;
      }
      if (other.CenterX != 0F) {
        CenterX = other.CenterX;
      }
      if (other.CenterY != 0F) {
        CenterY = other.CenterY;
      }
      if (other.ExtentX != 0F) {
        ExtentX = other.ExtentX;
      }
      if (other.ExtentY != 0F) {
        ExtentY = other.ExtentY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            CenterX = input.ReadFloat();
            break;
          }
          case 21: {
            CenterY = input.ReadFloat();
            break;
          }
          case 29: {
            ExtentX = input.ReadFloat();
            break;
          }
          case 37: {
            ExtentY = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LastKillVFXConfig_Array : pb::IMessage<LastKillVFXConfig_Array> {
    private static readonly pb::MessageParser<LastKillVFXConfig_Array> _parser = new pb::MessageParser<LastKillVFXConfig_Array>(() => new LastKillVFXConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LastKillVFXConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansLastkillvfxconfigReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastKillVFXConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastKillVFXConfig_Array(LastKillVFXConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastKillVFXConfig_Array Clone() {
      return new LastKillVFXConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.LastKillVFXConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.LastKillVFXConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.LastKillVFXConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.LastKillVFXConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.LastKillVFXConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LastKillVFXConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LastKillVFXConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LastKillVFXConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
