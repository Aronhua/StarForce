// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_modebgmconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_modebgmconfig.proto</summary>
  public static partial class XlsBeansModebgmconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_modebgmconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansModebgmconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch14bHNfYmVhbnNfbW9kZWJnbWNvbmZpZy5wcm90bxIKRDExLlBiZWFucyKx",
            "AgoNTW9kZUJHTUNvbmZpZxIKCgJpZBgBIAEoDRIQCghCYW5rTmFtZRgCIAEo",
            "CRIVCg1QbGF5RXZlbnROYW1lGAMgASgJEhUKDVN0b3BFdmVudE5hbWUYBCAB",
            "KAkSIQoZUm91bmRQcmVwYXJlUGxheUV2ZW50TmFtZRgFIAEoCRIlCh1TdG9w",
            "Um91bmRQcmVwYXJlUGxheUV2ZW50TmFtZRgGIAEoCRIgChhDb21tb25GaWdo",
            "dFBsYXlFdmVudE5hbWUYByABKAkSJAocU3RvcENvbW1vbkZpZ2h0UGxheUV2",
            "ZW50TmFtZRgIIAEoCRIeChZCb3NzRmlnaHRQbGF5RXZlbnROYW1lGAkgASgJ",
            "EiIKGlN0b3BCb3NzRmlnaHRQbGF5RXZlbnROYW1lGAogASgJIj8KE01vZGVC",
            "R01Db25maWdfQXJyYXkSKAoFaXRlbXMYASADKAsyGS5EMTEuUGJlYW5zLk1v",
            "ZGVCR01Db25maWdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.ModeBGMConfig), global::D11.Pbeans.ModeBGMConfig.Parser, new[]{ "Id", "BankName", "PlayEventName", "StopEventName", "RoundPreparePlayEventName", "StopRoundPreparePlayEventName", "CommonFightPlayEventName", "StopCommonFightPlayEventName", "BossFightPlayEventName", "StopBossFightPlayEventName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.ModeBGMConfig_Array), global::D11.Pbeans.ModeBGMConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ModeBGMConfig : pb::IMessage<ModeBGMConfig> {
    private static readonly pb::MessageParser<ModeBGMConfig> _parser = new pb::MessageParser<ModeBGMConfig>(() => new ModeBGMConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModeBGMConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansModebgmconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModeBGMConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModeBGMConfig(ModeBGMConfig other) : this() {
      id_ = other.id_;
      bankName_ = other.bankName_;
      playEventName_ = other.playEventName_;
      stopEventName_ = other.stopEventName_;
      roundPreparePlayEventName_ = other.roundPreparePlayEventName_;
      stopRoundPreparePlayEventName_ = other.stopRoundPreparePlayEventName_;
      commonFightPlayEventName_ = other.commonFightPlayEventName_;
      stopCommonFightPlayEventName_ = other.stopCommonFightPlayEventName_;
      bossFightPlayEventName_ = other.bossFightPlayEventName_;
      stopBossFightPlayEventName_ = other.stopBossFightPlayEventName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModeBGMConfig Clone() {
      return new ModeBGMConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 模式 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "BankName" field.</summary>
    public const int BankNameFieldNumber = 2;
    private string bankName_ = "";
    /// <summary>
    /// bank资源名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BankName {
      get { return bankName_; }
      set {
        bankName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PlayEventName" field.</summary>
    public const int PlayEventNameFieldNumber = 3;
    private string playEventName_ = "";
    /// <summary>
    /// 音乐播放event名 （Init阶段） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayEventName {
      get { return playEventName_; }
      set {
        playEventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StopEventName" field.</summary>
    public const int StopEventNameFieldNumber = 4;
    private string stopEventName_ = "";
    /// <summary>
    /// 音乐停止event名（endmatch阶段） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StopEventName {
      get { return stopEventName_; }
      set {
        stopEventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RoundPreparePlayEventName" field.</summary>
    public const int RoundPreparePlayEventNameFieldNumber = 5;
    private string roundPreparePlayEventName_ = "";
    /// <summary>
    /// 准备阶段音乐播放event名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoundPreparePlayEventName {
      get { return roundPreparePlayEventName_; }
      set {
        roundPreparePlayEventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StopRoundPreparePlayEventName" field.</summary>
    public const int StopRoundPreparePlayEventNameFieldNumber = 6;
    private string stopRoundPreparePlayEventName_ = "";
    /// <summary>
    /// 停止准备阶段音乐播放event名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StopRoundPreparePlayEventName {
      get { return stopRoundPreparePlayEventName_; }
      set {
        stopRoundPreparePlayEventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CommonFightPlayEventName" field.</summary>
    public const int CommonFightPlayEventNameFieldNumber = 7;
    private string commonFightPlayEventName_ = "";
    /// <summary>
    /// 普通战斗进行阶段音乐播放event名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommonFightPlayEventName {
      get { return commonFightPlayEventName_; }
      set {
        commonFightPlayEventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StopCommonFightPlayEventName" field.</summary>
    public const int StopCommonFightPlayEventNameFieldNumber = 8;
    private string stopCommonFightPlayEventName_ = "";
    /// <summary>
    /// 停止普通战斗进行阶段音乐播放event名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StopCommonFightPlayEventName {
      get { return stopCommonFightPlayEventName_; }
      set {
        stopCommonFightPlayEventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BossFightPlayEventName" field.</summary>
    public const int BossFightPlayEventNameFieldNumber = 9;
    private string bossFightPlayEventName_ = "";
    /// <summary>
    /// Boss战斗进行阶段音乐播放event名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BossFightPlayEventName {
      get { return bossFightPlayEventName_; }
      set {
        bossFightPlayEventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StopBossFightPlayEventName" field.</summary>
    public const int StopBossFightPlayEventNameFieldNumber = 10;
    private string stopBossFightPlayEventName_ = "";
    /// <summary>
    /// 停止Boss战斗进行阶段音乐播放event名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StopBossFightPlayEventName {
      get { return stopBossFightPlayEventName_; }
      set {
        stopBossFightPlayEventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModeBGMConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModeBGMConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BankName != other.BankName) return false;
      if (PlayEventName != other.PlayEventName) return false;
      if (StopEventName != other.StopEventName) return false;
      if (RoundPreparePlayEventName != other.RoundPreparePlayEventName) return false;
      if (StopRoundPreparePlayEventName != other.StopRoundPreparePlayEventName) return false;
      if (CommonFightPlayEventName != other.CommonFightPlayEventName) return false;
      if (StopCommonFightPlayEventName != other.StopCommonFightPlayEventName) return false;
      if (BossFightPlayEventName != other.BossFightPlayEventName) return false;
      if (StopBossFightPlayEventName != other.StopBossFightPlayEventName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BankName.Length != 0) hash ^= BankName.GetHashCode();
      if (PlayEventName.Length != 0) hash ^= PlayEventName.GetHashCode();
      if (StopEventName.Length != 0) hash ^= StopEventName.GetHashCode();
      if (RoundPreparePlayEventName.Length != 0) hash ^= RoundPreparePlayEventName.GetHashCode();
      if (StopRoundPreparePlayEventName.Length != 0) hash ^= StopRoundPreparePlayEventName.GetHashCode();
      if (CommonFightPlayEventName.Length != 0) hash ^= CommonFightPlayEventName.GetHashCode();
      if (StopCommonFightPlayEventName.Length != 0) hash ^= StopCommonFightPlayEventName.GetHashCode();
      if (BossFightPlayEventName.Length != 0) hash ^= BossFightPlayEventName.GetHashCode();
      if (StopBossFightPlayEventName.Length != 0) hash ^= StopBossFightPlayEventName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (BankName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BankName);
      }
      if (PlayEventName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayEventName);
      }
      if (StopEventName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StopEventName);
      }
      if (RoundPreparePlayEventName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RoundPreparePlayEventName);
      }
      if (StopRoundPreparePlayEventName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StopRoundPreparePlayEventName);
      }
      if (CommonFightPlayEventName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CommonFightPlayEventName);
      }
      if (StopCommonFightPlayEventName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(StopCommonFightPlayEventName);
      }
      if (BossFightPlayEventName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(BossFightPlayEventName);
      }
      if (StopBossFightPlayEventName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(StopBossFightPlayEventName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (BankName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BankName);
      }
      if (PlayEventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayEventName);
      }
      if (StopEventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StopEventName);
      }
      if (RoundPreparePlayEventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoundPreparePlayEventName);
      }
      if (StopRoundPreparePlayEventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StopRoundPreparePlayEventName);
      }
      if (CommonFightPlayEventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommonFightPlayEventName);
      }
      if (StopCommonFightPlayEventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StopCommonFightPlayEventName);
      }
      if (BossFightPlayEventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BossFightPlayEventName);
      }
      if (StopBossFightPlayEventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StopBossFightPlayEventName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModeBGMConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BankName.Length != 0) {
        BankName = other.BankName;
      }
      if (other.PlayEventName.Length != 0) {
        PlayEventName = other.PlayEventName;
      }
      if (other.StopEventName.Length != 0) {
        StopEventName = other.StopEventName;
      }
      if (other.RoundPreparePlayEventName.Length != 0) {
        RoundPreparePlayEventName = other.RoundPreparePlayEventName;
      }
      if (other.StopRoundPreparePlayEventName.Length != 0) {
        StopRoundPreparePlayEventName = other.StopRoundPreparePlayEventName;
      }
      if (other.CommonFightPlayEventName.Length != 0) {
        CommonFightPlayEventName = other.CommonFightPlayEventName;
      }
      if (other.StopCommonFightPlayEventName.Length != 0) {
        StopCommonFightPlayEventName = other.StopCommonFightPlayEventName;
      }
      if (other.BossFightPlayEventName.Length != 0) {
        BossFightPlayEventName = other.BossFightPlayEventName;
      }
      if (other.StopBossFightPlayEventName.Length != 0) {
        StopBossFightPlayEventName = other.StopBossFightPlayEventName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            BankName = input.ReadString();
            break;
          }
          case 26: {
            PlayEventName = input.ReadString();
            break;
          }
          case 34: {
            StopEventName = input.ReadString();
            break;
          }
          case 42: {
            RoundPreparePlayEventName = input.ReadString();
            break;
          }
          case 50: {
            StopRoundPreparePlayEventName = input.ReadString();
            break;
          }
          case 58: {
            CommonFightPlayEventName = input.ReadString();
            break;
          }
          case 66: {
            StopCommonFightPlayEventName = input.ReadString();
            break;
          }
          case 74: {
            BossFightPlayEventName = input.ReadString();
            break;
          }
          case 82: {
            StopBossFightPlayEventName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModeBGMConfig_Array : pb::IMessage<ModeBGMConfig_Array> {
    private static readonly pb::MessageParser<ModeBGMConfig_Array> _parser = new pb::MessageParser<ModeBGMConfig_Array>(() => new ModeBGMConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModeBGMConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansModebgmconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModeBGMConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModeBGMConfig_Array(ModeBGMConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModeBGMConfig_Array Clone() {
      return new ModeBGMConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.ModeBGMConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.ModeBGMConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.ModeBGMConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.ModeBGMConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.ModeBGMConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModeBGMConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModeBGMConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModeBGMConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
