// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_monsterleveldata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_monsterleveldata.proto</summary>
  public static partial class XlsBeansMonsterleveldataReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_monsterleveldata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansMonsterleveldataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiB4bHNfYmVhbnNfbW9uc3RlcmxldmVsZGF0YS5wcm90bxIKRDExLlBiZWFu",
            "cyKoAQoQTW9uc3RlckxldmVsRGF0YRIKCgJpZBgBIAEoDRIRCglNb25zdGVy",
            "SWQYAiABKA0SDQoFTGV2ZWwYAyABKA0SCgoCSFAYBCABKA0SDQoFU3BlZWQY",
            "BSABKAISDQoFU2NvcmUYBiABKA0SEAoIQWRkTW9uZXkYByABKA0SDQoFU2Nh",
            "bGUYCCABKAISGwoTRGVmYXVsdE1vdmVBbmlTcGVlZBgJIAEoAiJFChZNb25z",
            "dGVyTGV2ZWxEYXRhX0FycmF5EisKBWl0ZW1zGAEgAygLMhwuRDExLlBiZWFu",
            "cy5Nb25zdGVyTGV2ZWxEYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.MonsterLevelData), global::D11.Pbeans.MonsterLevelData.Parser, new[]{ "Id", "MonsterId", "Level", "HP", "Speed", "Score", "AddMoney", "Scale", "DefaultMoveAniSpeed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.MonsterLevelData_Array), global::D11.Pbeans.MonsterLevelData_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MonsterLevelData : pb::IMessage<MonsterLevelData> {
    private static readonly pb::MessageParser<MonsterLevelData> _parser = new pb::MessageParser<MonsterLevelData>(() => new MonsterLevelData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MonsterLevelData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansMonsterleveldataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterLevelData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterLevelData(MonsterLevelData other) : this() {
      id_ = other.id_;
      monsterId_ = other.monsterId_;
      level_ = other.level_;
      hP_ = other.hP_;
      speed_ = other.speed_;
      score_ = other.score_;
      addMoney_ = other.addMoney_;
      scale_ = other.scale_;
      defaultMoveAniSpeed_ = other.defaultMoveAniSpeed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterLevelData Clone() {
      return new MonsterLevelData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 查找id(level * 100000 + monsterid) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "MonsterId" field.</summary>
    public const int MonsterIdFieldNumber = 2;
    private uint monsterId_;
    /// <summary>
    /// 怪物id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MonsterId {
      get { return monsterId_; }
      set {
        monsterId_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 3;
    private uint level_;
    /// <summary>
    /// 等级 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "HP" field.</summary>
    public const int HPFieldNumber = 4;
    private uint hP_;
    /// <summary>
    /// 血量 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HP {
      get { return hP_; }
      set {
        hP_ = value;
      }
    }

    /// <summary>Field number for the "Speed" field.</summary>
    public const int SpeedFieldNumber = 5;
    private float speed_;
    /// <summary>
    /// 移速(米/秒) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 6;
    private uint score_;
    /// <summary>
    /// 得分 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "AddMoney" field.</summary>
    public const int AddMoneyFieldNumber = 7;
    private uint addMoney_;
    /// <summary>
    /// 击杀奖励经济 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AddMoney {
      get { return addMoney_; }
      set {
        addMoney_ = value;
      }
    }

    /// <summary>Field number for the "Scale" field.</summary>
    public const int ScaleFieldNumber = 8;
    private float scale_;
    /// <summary>
    /// 资源缩放 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    /// <summary>Field number for the "DefaultMoveAniSpeed" field.</summary>
    public const int DefaultMoveAniSpeedFieldNumber = 9;
    private float defaultMoveAniSpeed_;
    /// <summary>
    /// 移动动作在默认播放速度下对应的移动速度 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DefaultMoveAniSpeed {
      get { return defaultMoveAniSpeed_; }
      set {
        defaultMoveAniSpeed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MonsterLevelData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MonsterLevelData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MonsterId != other.MonsterId) return false;
      if (Level != other.Level) return false;
      if (HP != other.HP) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Speed, other.Speed)) return false;
      if (Score != other.Score) return false;
      if (AddMoney != other.AddMoney) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DefaultMoveAniSpeed, other.DefaultMoveAniSpeed)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (MonsterId != 0) hash ^= MonsterId.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (HP != 0) hash ^= HP.GetHashCode();
      if (Speed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Speed);
      if (Score != 0) hash ^= Score.GetHashCode();
      if (AddMoney != 0) hash ^= AddMoney.GetHashCode();
      if (Scale != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
      if (DefaultMoveAniSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DefaultMoveAniSpeed);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (MonsterId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MonsterId);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Level);
      }
      if (HP != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(HP);
      }
      if (Speed != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Speed);
      }
      if (Score != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Score);
      }
      if (AddMoney != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(AddMoney);
      }
      if (Scale != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Scale);
      }
      if (DefaultMoveAniSpeed != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(DefaultMoveAniSpeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (MonsterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MonsterId);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (HP != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HP);
      }
      if (Speed != 0F) {
        size += 1 + 4;
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Score);
      }
      if (AddMoney != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AddMoney);
      }
      if (Scale != 0F) {
        size += 1 + 4;
      }
      if (DefaultMoveAniSpeed != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MonsterLevelData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.MonsterId != 0) {
        MonsterId = other.MonsterId;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.HP != 0) {
        HP = other.HP;
      }
      if (other.Speed != 0F) {
        Speed = other.Speed;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.AddMoney != 0) {
        AddMoney = other.AddMoney;
      }
      if (other.Scale != 0F) {
        Scale = other.Scale;
      }
      if (other.DefaultMoveAniSpeed != 0F) {
        DefaultMoveAniSpeed = other.DefaultMoveAniSpeed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            MonsterId = input.ReadUInt32();
            break;
          }
          case 24: {
            Level = input.ReadUInt32();
            break;
          }
          case 32: {
            HP = input.ReadUInt32();
            break;
          }
          case 45: {
            Speed = input.ReadFloat();
            break;
          }
          case 48: {
            Score = input.ReadUInt32();
            break;
          }
          case 56: {
            AddMoney = input.ReadUInt32();
            break;
          }
          case 69: {
            Scale = input.ReadFloat();
            break;
          }
          case 77: {
            DefaultMoveAniSpeed = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MonsterLevelData_Array : pb::IMessage<MonsterLevelData_Array> {
    private static readonly pb::MessageParser<MonsterLevelData_Array> _parser = new pb::MessageParser<MonsterLevelData_Array>(() => new MonsterLevelData_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MonsterLevelData_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansMonsterleveldataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterLevelData_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterLevelData_Array(MonsterLevelData_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterLevelData_Array Clone() {
      return new MonsterLevelData_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.MonsterLevelData> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.MonsterLevelData.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.MonsterLevelData> items_ = new pbc::RepeatedField<global::D11.Pbeans.MonsterLevelData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.MonsterLevelData> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MonsterLevelData_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MonsterLevelData_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MonsterLevelData_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
