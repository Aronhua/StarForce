// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_musicboxconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_musicboxconfig.proto</summary>
  public static partial class XlsBeansMusicboxconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_musicboxconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansMusicboxconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch54bHNfYmVhbnNfbXVzaWNib3hjb25maWcucHJvdG8SCkQxMS5QYmVhbnMi",
            "pQMKDk11c2ljQm94Q29uZmlnEgoKAmlkGAEgASgEEg4KBml0ZW1JRBgCIAEo",
            "DRIUCgxpbnNpZGVJY29uSUQYAyABKA0SEgoKZmFsbGJhY2tJZBgEIAEoDRIM",
            "CgRuYW1lGAUgASgJEg4KBm5hbWVFThgGIAEoCRIMCgRCYW5rGAcgASgJEg0K",
            "BWxldmVsGAggASgNEhwKFEluc2lkZU11c2ljTmFtZV9QbGF5GAkgASgJEhwK",
            "FEluc2lkZU11c2ljTmFtZV9TdG9wGAogASgJEhEKCVN0YXlTdGF0ZRgLIAEo",
            "DRITCgtBY3Rpb25TdGF0ZRgMIAEoDRIYChBCb21icGxhbnRlZFN0YXRlGA0g",
            "ASgNEhwKFEJvbWJ0ZW5zZWNjb3VudFN0YXRlGA4gASgNEhUKDURlYXRoY2Ft",
            "U3RhdGUYDyABKA0SHQoVUm91bmR0ZW5zZWNjb3VudFN0YXRlGBAgASgNEhsK",
            "E1JvdW5kbXZwYW50aGVtU3RhdGUYESABKA0SEAoIV29uU3RhdGUYEiABKA0S",
            "EQoJTG9zdFN0YXRlGBMgASgNIkEKFE11c2ljQm94Q29uZmlnX0FycmF5EikK",
            "BWl0ZW1zGAEgAygLMhouRDExLlBiZWFucy5NdXNpY0JveENvbmZpZ2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.MusicBoxConfig), global::D11.Pbeans.MusicBoxConfig.Parser, new[]{ "Id", "ItemID", "InsideIconID", "FallbackId", "Name", "NameEN", "Bank", "Level", "InsideMusicNamePlay", "InsideMusicNameStop", "StayState", "ActionState", "BombplantedState", "BombtenseccountState", "DeathcamState", "RoundtenseccountState", "RoundmvpanthemState", "WonState", "LostState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.MusicBoxConfig_Array), global::D11.Pbeans.MusicBoxConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MusicBoxConfig : pb::IMessage<MusicBoxConfig> {
    private static readonly pb::MessageParser<MusicBoxConfig> _parser = new pb::MessageParser<MusicBoxConfig>(() => new MusicBoxConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MusicBoxConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansMusicboxconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MusicBoxConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MusicBoxConfig(MusicBoxConfig other) : this() {
      id_ = other.id_;
      itemID_ = other.itemID_;
      insideIconID_ = other.insideIconID_;
      fallbackId_ = other.fallbackId_;
      name_ = other.name_;
      nameEN_ = other.nameEN_;
      bank_ = other.bank_;
      level_ = other.level_;
      insideMusicNamePlay_ = other.insideMusicNamePlay_;
      insideMusicNameStop_ = other.insideMusicNameStop_;
      stayState_ = other.stayState_;
      actionState_ = other.actionState_;
      bombplantedState_ = other.bombplantedState_;
      bombtenseccountState_ = other.bombtenseccountState_;
      deathcamState_ = other.deathcamState_;
      roundtenseccountState_ = other.roundtenseccountState_;
      roundmvpanthemState_ = other.roundmvpanthemState_;
      wonState_ = other.wonState_;
      lostState_ = other.lostState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MusicBoxConfig Clone() {
      return new MusicBoxConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    /// <summary>
    /// ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "itemID" field.</summary>
    public const int ItemIDFieldNumber = 2;
    private uint itemID_;
    /// <summary>
    /// 道具ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemID {
      get { return itemID_; }
      set {
        itemID_ = value;
      }
    }

    /// <summary>Field number for the "insideIconID" field.</summary>
    public const int InsideIconIDFieldNumber = 3;
    private uint insideIconID_;
    /// <summary>
    /// 局内iconID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint InsideIconID {
      get { return insideIconID_; }
      set {
        insideIconID_ = value;
      }
    }

    /// <summary>Field number for the "fallbackId" field.</summary>
    public const int FallbackIdFieldNumber = 4;
    private uint fallbackId_;
    /// <summary>
    /// 未下载分包资源时替换用的id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FallbackId {
      get { return fallbackId_; }
      set {
        fallbackId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// 音乐盒名称（废弃） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nameEN" field.</summary>
    public const int NameENFieldNumber = 6;
    private string nameEN_ = "";
    /// <summary>
    /// 音乐盒名称（英） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NameEN {
      get { return nameEN_; }
      set {
        nameEN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Bank" field.</summary>
    public const int BankFieldNumber = 7;
    private string bank_ = "";
    /// <summary>
    /// Bank名称 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bank {
      get { return bank_; }
      set {
        bank_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 8;
    private uint level_;
    /// <summary>
    /// 等级 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "InsideMusicName_Play" field.</summary>
    public const int InsideMusicNamePlayFieldNumber = 9;
    private string insideMusicNamePlay_ = "";
    /// <summary>
    /// 局内音乐EventPlay 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InsideMusicNamePlay {
      get { return insideMusicNamePlay_; }
      set {
        insideMusicNamePlay_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "InsideMusicName_Stop" field.</summary>
    public const int InsideMusicNameStopFieldNumber = 10;
    private string insideMusicNameStop_ = "";
    /// <summary>
    /// 局内音乐EventStop 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InsideMusicNameStop {
      get { return insideMusicNameStop_; }
      set {
        insideMusicNameStop_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StayState" field.</summary>
    public const int StayStateFieldNumber = 11;
    private uint stayState_;
    /// <summary>
    /// StayState 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StayState {
      get { return stayState_; }
      set {
        stayState_ = value;
      }
    }

    /// <summary>Field number for the "ActionState" field.</summary>
    public const int ActionStateFieldNumber = 12;
    private uint actionState_;
    /// <summary>
    /// ActionState 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ActionState {
      get { return actionState_; }
      set {
        actionState_ = value;
      }
    }

    /// <summary>Field number for the "BombplantedState" field.</summary>
    public const int BombplantedStateFieldNumber = 13;
    private uint bombplantedState_;
    /// <summary>
    /// BombplantedState 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BombplantedState {
      get { return bombplantedState_; }
      set {
        bombplantedState_ = value;
      }
    }

    /// <summary>Field number for the "BombtenseccountState" field.</summary>
    public const int BombtenseccountStateFieldNumber = 14;
    private uint bombtenseccountState_;
    /// <summary>
    /// BombtenseccountState 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BombtenseccountState {
      get { return bombtenseccountState_; }
      set {
        bombtenseccountState_ = value;
      }
    }

    /// <summary>Field number for the "DeathcamState" field.</summary>
    public const int DeathcamStateFieldNumber = 15;
    private uint deathcamState_;
    /// <summary>
    /// DeathcamState 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DeathcamState {
      get { return deathcamState_; }
      set {
        deathcamState_ = value;
      }
    }

    /// <summary>Field number for the "RoundtenseccountState" field.</summary>
    public const int RoundtenseccountStateFieldNumber = 16;
    private uint roundtenseccountState_;
    /// <summary>
    /// RoundtenseccountState 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoundtenseccountState {
      get { return roundtenseccountState_; }
      set {
        roundtenseccountState_ = value;
      }
    }

    /// <summary>Field number for the "RoundmvpanthemState" field.</summary>
    public const int RoundmvpanthemStateFieldNumber = 17;
    private uint roundmvpanthemState_;
    /// <summary>
    /// RoundmvpanthemState 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoundmvpanthemState {
      get { return roundmvpanthemState_; }
      set {
        roundmvpanthemState_ = value;
      }
    }

    /// <summary>Field number for the "WonState" field.</summary>
    public const int WonStateFieldNumber = 18;
    private uint wonState_;
    /// <summary>
    /// WonState 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WonState {
      get { return wonState_; }
      set {
        wonState_ = value;
      }
    }

    /// <summary>Field number for the "LostState" field.</summary>
    public const int LostStateFieldNumber = 19;
    private uint lostState_;
    /// <summary>
    /// LostState 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint LostState {
      get { return lostState_; }
      set {
        lostState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MusicBoxConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MusicBoxConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ItemID != other.ItemID) return false;
      if (InsideIconID != other.InsideIconID) return false;
      if (FallbackId != other.FallbackId) return false;
      if (Name != other.Name) return false;
      if (NameEN != other.NameEN) return false;
      if (Bank != other.Bank) return false;
      if (Level != other.Level) return false;
      if (InsideMusicNamePlay != other.InsideMusicNamePlay) return false;
      if (InsideMusicNameStop != other.InsideMusicNameStop) return false;
      if (StayState != other.StayState) return false;
      if (ActionState != other.ActionState) return false;
      if (BombplantedState != other.BombplantedState) return false;
      if (BombtenseccountState != other.BombtenseccountState) return false;
      if (DeathcamState != other.DeathcamState) return false;
      if (RoundtenseccountState != other.RoundtenseccountState) return false;
      if (RoundmvpanthemState != other.RoundmvpanthemState) return false;
      if (WonState != other.WonState) return false;
      if (LostState != other.LostState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (ItemID != 0) hash ^= ItemID.GetHashCode();
      if (InsideIconID != 0) hash ^= InsideIconID.GetHashCode();
      if (FallbackId != 0) hash ^= FallbackId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (NameEN.Length != 0) hash ^= NameEN.GetHashCode();
      if (Bank.Length != 0) hash ^= Bank.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (InsideMusicNamePlay.Length != 0) hash ^= InsideMusicNamePlay.GetHashCode();
      if (InsideMusicNameStop.Length != 0) hash ^= InsideMusicNameStop.GetHashCode();
      if (StayState != 0) hash ^= StayState.GetHashCode();
      if (ActionState != 0) hash ^= ActionState.GetHashCode();
      if (BombplantedState != 0) hash ^= BombplantedState.GetHashCode();
      if (BombtenseccountState != 0) hash ^= BombtenseccountState.GetHashCode();
      if (DeathcamState != 0) hash ^= DeathcamState.GetHashCode();
      if (RoundtenseccountState != 0) hash ^= RoundtenseccountState.GetHashCode();
      if (RoundmvpanthemState != 0) hash ^= RoundmvpanthemState.GetHashCode();
      if (WonState != 0) hash ^= WonState.GetHashCode();
      if (LostState != 0) hash ^= LostState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (ItemID != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ItemID);
      }
      if (InsideIconID != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(InsideIconID);
      }
      if (FallbackId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(FallbackId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (NameEN.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NameEN);
      }
      if (Bank.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Bank);
      }
      if (Level != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Level);
      }
      if (InsideMusicNamePlay.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(InsideMusicNamePlay);
      }
      if (InsideMusicNameStop.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(InsideMusicNameStop);
      }
      if (StayState != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(StayState);
      }
      if (ActionState != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(ActionState);
      }
      if (BombplantedState != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(BombplantedState);
      }
      if (BombtenseccountState != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(BombtenseccountState);
      }
      if (DeathcamState != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(DeathcamState);
      }
      if (RoundtenseccountState != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(RoundtenseccountState);
      }
      if (RoundmvpanthemState != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(RoundmvpanthemState);
      }
      if (WonState != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(WonState);
      }
      if (LostState != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(LostState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (ItemID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemID);
      }
      if (InsideIconID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InsideIconID);
      }
      if (FallbackId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FallbackId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (NameEN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameEN);
      }
      if (Bank.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bank);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (InsideMusicNamePlay.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InsideMusicNamePlay);
      }
      if (InsideMusicNameStop.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InsideMusicNameStop);
      }
      if (StayState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StayState);
      }
      if (ActionState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActionState);
      }
      if (BombplantedState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BombplantedState);
      }
      if (BombtenseccountState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BombtenseccountState);
      }
      if (DeathcamState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeathcamState);
      }
      if (RoundtenseccountState != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RoundtenseccountState);
      }
      if (RoundmvpanthemState != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RoundmvpanthemState);
      }
      if (WonState != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(WonState);
      }
      if (LostState != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(LostState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MusicBoxConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.ItemID != 0) {
        ItemID = other.ItemID;
      }
      if (other.InsideIconID != 0) {
        InsideIconID = other.InsideIconID;
      }
      if (other.FallbackId != 0) {
        FallbackId = other.FallbackId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.NameEN.Length != 0) {
        NameEN = other.NameEN;
      }
      if (other.Bank.Length != 0) {
        Bank = other.Bank;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.InsideMusicNamePlay.Length != 0) {
        InsideMusicNamePlay = other.InsideMusicNamePlay;
      }
      if (other.InsideMusicNameStop.Length != 0) {
        InsideMusicNameStop = other.InsideMusicNameStop;
      }
      if (other.StayState != 0) {
        StayState = other.StayState;
      }
      if (other.ActionState != 0) {
        ActionState = other.ActionState;
      }
      if (other.BombplantedState != 0) {
        BombplantedState = other.BombplantedState;
      }
      if (other.BombtenseccountState != 0) {
        BombtenseccountState = other.BombtenseccountState;
      }
      if (other.DeathcamState != 0) {
        DeathcamState = other.DeathcamState;
      }
      if (other.RoundtenseccountState != 0) {
        RoundtenseccountState = other.RoundtenseccountState;
      }
      if (other.RoundmvpanthemState != 0) {
        RoundmvpanthemState = other.RoundmvpanthemState;
      }
      if (other.WonState != 0) {
        WonState = other.WonState;
      }
      if (other.LostState != 0) {
        LostState = other.LostState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            ItemID = input.ReadUInt32();
            break;
          }
          case 24: {
            InsideIconID = input.ReadUInt32();
            break;
          }
          case 32: {
            FallbackId = input.ReadUInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            NameEN = input.ReadString();
            break;
          }
          case 58: {
            Bank = input.ReadString();
            break;
          }
          case 64: {
            Level = input.ReadUInt32();
            break;
          }
          case 74: {
            InsideMusicNamePlay = input.ReadString();
            break;
          }
          case 82: {
            InsideMusicNameStop = input.ReadString();
            break;
          }
          case 88: {
            StayState = input.ReadUInt32();
            break;
          }
          case 96: {
            ActionState = input.ReadUInt32();
            break;
          }
          case 104: {
            BombplantedState = input.ReadUInt32();
            break;
          }
          case 112: {
            BombtenseccountState = input.ReadUInt32();
            break;
          }
          case 120: {
            DeathcamState = input.ReadUInt32();
            break;
          }
          case 128: {
            RoundtenseccountState = input.ReadUInt32();
            break;
          }
          case 136: {
            RoundmvpanthemState = input.ReadUInt32();
            break;
          }
          case 144: {
            WonState = input.ReadUInt32();
            break;
          }
          case 152: {
            LostState = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MusicBoxConfig_Array : pb::IMessage<MusicBoxConfig_Array> {
    private static readonly pb::MessageParser<MusicBoxConfig_Array> _parser = new pb::MessageParser<MusicBoxConfig_Array>(() => new MusicBoxConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MusicBoxConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansMusicboxconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MusicBoxConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MusicBoxConfig_Array(MusicBoxConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MusicBoxConfig_Array Clone() {
      return new MusicBoxConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.MusicBoxConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.MusicBoxConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.MusicBoxConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.MusicBoxConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.MusicBoxConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MusicBoxConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MusicBoxConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MusicBoxConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
