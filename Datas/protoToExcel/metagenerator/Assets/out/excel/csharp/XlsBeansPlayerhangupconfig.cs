// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_playerhangupconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_playerhangupconfig.proto</summary>
  public static partial class XlsBeansPlayerhangupconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_playerhangupconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansPlayerhangupconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJ4bHNfYmVhbnNfcGxheWVyaGFuZ3VwY29uZmlnLnByb3RvEgpEMTEuUGJl",
            "YW5zIn4KElBsYXllckhhbmdVcENvbmZpZxIKCgJpZBgBIAEoDRIOCgZkcm9w",
            "YzQYAiABKAUSFwoPUGxheWVySGFuZ1VwU2VjGAMgASgFEhkKEXRpbWVvdXRL",
            "aWNrb3V0U2VjGAQgASgFEhgKEGhhbmdjb3VudEtpY2tvdXQYBSABKAUiSQoY",
            "UGxheWVySGFuZ1VwQ29uZmlnX0FycmF5Ei0KBWl0ZW1zGAEgAygLMh4uRDEx",
            "LlBiZWFucy5QbGF5ZXJIYW5nVXBDb25maWdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.PlayerHangUpConfig), global::D11.Pbeans.PlayerHangUpConfig.Parser, new[]{ "Id", "Dropc4", "PlayerHangUpSec", "TimeoutKickoutSec", "HangcountKickout" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.PlayerHangUpConfig_Array), global::D11.Pbeans.PlayerHangUpConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlayerHangUpConfig : pb::IMessage<PlayerHangUpConfig> {
    private static readonly pb::MessageParser<PlayerHangUpConfig> _parser = new pb::MessageParser<PlayerHangUpConfig>(() => new PlayerHangUpConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerHangUpConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansPlayerhangupconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerHangUpConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerHangUpConfig(PlayerHangUpConfig other) : this() {
      id_ = other.id_;
      dropc4_ = other.dropc4_;
      playerHangUpSec_ = other.playerHangUpSec_;
      timeoutKickoutSec_ = other.timeoutKickoutSec_;
      hangcountKickout_ = other.hangcountKickout_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerHangUpConfig Clone() {
      return new PlayerHangUpConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 模式 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "dropc4" field.</summary>
    public const int Dropc4FieldNumber = 2;
    private int dropc4_;
    /// <summary>
    /// 每个回合开始不活跃丢C4时间 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Dropc4 {
      get { return dropc4_; }
      set {
        dropc4_ = value;
      }
    }

    /// <summary>Field number for the "PlayerHangUpSec" field.</summary>
    public const int PlayerHangUpSecFieldNumber = 3;
    private int playerHangUpSec_;
    /// <summary>
    /// 不活跃挂机时间 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerHangUpSec {
      get { return playerHangUpSec_; }
      set {
        playerHangUpSec_ = value;
      }
    }

    /// <summary>Field number for the "timeoutKickoutSec" field.</summary>
    public const int TimeoutKickoutSecFieldNumber = 4;
    private int timeoutKickoutSec_;
    /// <summary>
    /// 挂机超时多久踢出玩家（S） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeoutKickoutSec {
      get { return timeoutKickoutSec_; }
      set {
        timeoutKickoutSec_ = value;
      }
    }

    /// <summary>Field number for the "hangcountKickout" field.</summary>
    public const int HangcountKickoutFieldNumber = 5;
    private int hangcountKickout_;
    /// <summary>
    /// 挂机超过次数踢出玩家 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HangcountKickout {
      get { return hangcountKickout_; }
      set {
        hangcountKickout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerHangUpConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerHangUpConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Dropc4 != other.Dropc4) return false;
      if (PlayerHangUpSec != other.PlayerHangUpSec) return false;
      if (TimeoutKickoutSec != other.TimeoutKickoutSec) return false;
      if (HangcountKickout != other.HangcountKickout) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Dropc4 != 0) hash ^= Dropc4.GetHashCode();
      if (PlayerHangUpSec != 0) hash ^= PlayerHangUpSec.GetHashCode();
      if (TimeoutKickoutSec != 0) hash ^= TimeoutKickoutSec.GetHashCode();
      if (HangcountKickout != 0) hash ^= HangcountKickout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Dropc4 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Dropc4);
      }
      if (PlayerHangUpSec != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerHangUpSec);
      }
      if (TimeoutKickoutSec != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TimeoutKickoutSec);
      }
      if (HangcountKickout != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(HangcountKickout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Dropc4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dropc4);
      }
      if (PlayerHangUpSec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerHangUpSec);
      }
      if (TimeoutKickoutSec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeoutKickoutSec);
      }
      if (HangcountKickout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HangcountKickout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerHangUpConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Dropc4 != 0) {
        Dropc4 = other.Dropc4;
      }
      if (other.PlayerHangUpSec != 0) {
        PlayerHangUpSec = other.PlayerHangUpSec;
      }
      if (other.TimeoutKickoutSec != 0) {
        TimeoutKickoutSec = other.TimeoutKickoutSec;
      }
      if (other.HangcountKickout != 0) {
        HangcountKickout = other.HangcountKickout;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Dropc4 = input.ReadInt32();
            break;
          }
          case 24: {
            PlayerHangUpSec = input.ReadInt32();
            break;
          }
          case 32: {
            TimeoutKickoutSec = input.ReadInt32();
            break;
          }
          case 40: {
            HangcountKickout = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerHangUpConfig_Array : pb::IMessage<PlayerHangUpConfig_Array> {
    private static readonly pb::MessageParser<PlayerHangUpConfig_Array> _parser = new pb::MessageParser<PlayerHangUpConfig_Array>(() => new PlayerHangUpConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerHangUpConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansPlayerhangupconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerHangUpConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerHangUpConfig_Array(PlayerHangUpConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerHangUpConfig_Array Clone() {
      return new PlayerHangUpConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.PlayerHangUpConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.PlayerHangUpConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.PlayerHangUpConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.PlayerHangUpConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.PlayerHangUpConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerHangUpConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerHangUpConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerHangUpConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
