// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_preloadgeneraltopool.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_preloadgeneraltopool.proto</summary>
  public static partial class XlsBeansPreloadgeneraltopoolReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_preloadgeneraltopool.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansPreloadgeneraltopoolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiR4bHNfYmVhbnNfcHJlbG9hZGdlbmVyYWx0b3Bvb2wucHJvdG8SCkQxMS5Q",
            "YmVhbnMipwEKFFByZUxvYWRHZW5lcmFsVG9Qb29sEgoKAmlkGAEgASgNEhIK",
            "CmFzc2V0SW5kZXgYAiABKA0SEQoJYXNzZXROYW1lGAMgASgJEgsKA251bRgE",
            "IAMoBRINCgVhZGRUUBgFIAMoCBIbChNpc0Rlc3Bhd25CeVBvc2l0aW9uGAYg",
            "ASgIEgwKBG1vZGUYByADKAUSFQoNYmxhY2tsaXN0TW9kZRgIIAMoBSJNChpQ",
            "cmVMb2FkR2VuZXJhbFRvUG9vbF9BcnJheRIvCgVpdGVtcxgBIAMoCzIgLkQx",
            "MS5QYmVhbnMuUHJlTG9hZEdlbmVyYWxUb1Bvb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.PreLoadGeneralToPool), global::D11.Pbeans.PreLoadGeneralToPool.Parser, new[]{ "Id", "AssetIndex", "AssetName", "Num", "AddTP", "IsDespawnByPosition", "Mode", "BlacklistMode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.PreLoadGeneralToPool_Array), global::D11.Pbeans.PreLoadGeneralToPool_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PreLoadGeneralToPool : pb::IMessage<PreLoadGeneralToPool> {
    private static readonly pb::MessageParser<PreLoadGeneralToPool> _parser = new pb::MessageParser<PreLoadGeneralToPool>(() => new PreLoadGeneralToPool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PreLoadGeneralToPool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansPreloadgeneraltopoolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreLoadGeneralToPool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreLoadGeneralToPool(PreLoadGeneralToPool other) : this() {
      id_ = other.id_;
      assetIndex_ = other.assetIndex_;
      assetName_ = other.assetName_;
      num_ = other.num_.Clone();
      addTP_ = other.addTP_.Clone();
      isDespawnByPosition_ = other.isDespawnByPosition_;
      mode_ = other.mode_.Clone();
      blacklistMode_ = other.blacklistMode_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreLoadGeneralToPool Clone() {
      return new PreLoadGeneralToPool(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 占位id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "assetIndex" field.</summary>
    public const int AssetIndexFieldNumber = 2;
    private uint assetIndex_;
    /// <summary>
    /// 索引id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AssetIndex {
      get { return assetIndex_; }
      set {
        assetIndex_ = value;
      }
    }

    /// <summary>Field number for the "assetName" field.</summary>
    public const int AssetNameFieldNumber = 3;
    private string assetName_ = "";
    /// <summary>
    /// 路径 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetName {
      get { return assetName_; }
      set {
        assetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_num_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> num_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 超低档机缓存数量 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Num {
      get { return num_; }
    }

    /// <summary>Field number for the "addTP" field.</summary>
    public const int AddTPFieldNumber = 5;
    private static readonly pb::FieldCodec<bool> _repeated_addTP_codec
        = pb::FieldCodec.ForBool(42);
    private readonly pbc::RepeatedField<bool> addTP_ = new pbc::RepeatedField<bool>();
    /// <summary>
    /// 超低档是否加载TP 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> AddTP {
      get { return addTP_; }
    }

    /// <summary>Field number for the "isDespawnByPosition" field.</summary>
    public const int IsDespawnByPositionFieldNumber = 6;
    private bool isDespawnByPosition_;
    /// <summary>
    /// 回池方式 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDespawnByPosition {
      get { return isDespawnByPosition_; }
      set {
        isDespawnByPosition_ = value;
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_mode_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> mode_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 模式编号 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Mode {
      get { return mode_; }
    }

    /// <summary>Field number for the "blacklistMode" field.</summary>
    public const int BlacklistModeFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_blacklistMode_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> blacklistMode_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> BlacklistMode {
      get { return blacklistMode_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PreLoadGeneralToPool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PreLoadGeneralToPool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (AssetIndex != other.AssetIndex) return false;
      if (AssetName != other.AssetName) return false;
      if(!num_.Equals(other.num_)) return false;
      if(!addTP_.Equals(other.addTP_)) return false;
      if (IsDespawnByPosition != other.IsDespawnByPosition) return false;
      if(!mode_.Equals(other.mode_)) return false;
      if(!blacklistMode_.Equals(other.blacklistMode_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (AssetIndex != 0) hash ^= AssetIndex.GetHashCode();
      if (AssetName.Length != 0) hash ^= AssetName.GetHashCode();
      hash ^= num_.GetHashCode();
      hash ^= addTP_.GetHashCode();
      if (IsDespawnByPosition != false) hash ^= IsDespawnByPosition.GetHashCode();
      hash ^= mode_.GetHashCode();
      hash ^= blacklistMode_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (AssetIndex != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AssetIndex);
      }
      if (AssetName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AssetName);
      }
      num_.WriteTo(output, _repeated_num_codec);
      addTP_.WriteTo(output, _repeated_addTP_codec);
      if (IsDespawnByPosition != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsDespawnByPosition);
      }
      mode_.WriteTo(output, _repeated_mode_codec);
      blacklistMode_.WriteTo(output, _repeated_blacklistMode_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (AssetIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AssetIndex);
      }
      if (AssetName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetName);
      }
      size += num_.CalculateSize(_repeated_num_codec);
      size += addTP_.CalculateSize(_repeated_addTP_codec);
      if (IsDespawnByPosition != false) {
        size += 1 + 1;
      }
      size += mode_.CalculateSize(_repeated_mode_codec);
      size += blacklistMode_.CalculateSize(_repeated_blacklistMode_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PreLoadGeneralToPool other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.AssetIndex != 0) {
        AssetIndex = other.AssetIndex;
      }
      if (other.AssetName.Length != 0) {
        AssetName = other.AssetName;
      }
      num_.Add(other.num_);
      addTP_.Add(other.addTP_);
      if (other.IsDespawnByPosition != false) {
        IsDespawnByPosition = other.IsDespawnByPosition;
      }
      mode_.Add(other.mode_);
      blacklistMode_.Add(other.blacklistMode_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            AssetIndex = input.ReadUInt32();
            break;
          }
          case 26: {
            AssetName = input.ReadString();
            break;
          }
          case 34:
          case 32: {
            num_.AddEntriesFrom(input, _repeated_num_codec);
            break;
          }
          case 42:
          case 40: {
            addTP_.AddEntriesFrom(input, _repeated_addTP_codec);
            break;
          }
          case 48: {
            IsDespawnByPosition = input.ReadBool();
            break;
          }
          case 58:
          case 56: {
            mode_.AddEntriesFrom(input, _repeated_mode_codec);
            break;
          }
          case 66:
          case 64: {
            blacklistMode_.AddEntriesFrom(input, _repeated_blacklistMode_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PreLoadGeneralToPool_Array : pb::IMessage<PreLoadGeneralToPool_Array> {
    private static readonly pb::MessageParser<PreLoadGeneralToPool_Array> _parser = new pb::MessageParser<PreLoadGeneralToPool_Array>(() => new PreLoadGeneralToPool_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PreLoadGeneralToPool_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansPreloadgeneraltopoolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreLoadGeneralToPool_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreLoadGeneralToPool_Array(PreLoadGeneralToPool_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreLoadGeneralToPool_Array Clone() {
      return new PreLoadGeneralToPool_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.PreLoadGeneralToPool> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.PreLoadGeneralToPool.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.PreLoadGeneralToPool> items_ = new pbc::RepeatedField<global::D11.Pbeans.PreLoadGeneralToPool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.PreLoadGeneralToPool> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PreLoadGeneralToPool_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PreLoadGeneralToPool_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PreLoadGeneralToPool_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
