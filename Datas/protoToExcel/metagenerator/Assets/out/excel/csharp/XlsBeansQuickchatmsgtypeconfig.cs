// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_quickchatmsgtypeconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_quickchatmsgtypeconfig.proto</summary>
  public static partial class XlsBeansQuickchatmsgtypeconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_quickchatmsgtypeconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansQuickchatmsgtypeconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZ4bHNfYmVhbnNfcXVpY2tjaGF0bXNndHlwZWNvbmZpZy5wcm90bxIKRDEx",
            "LlBiZWFucyKCAQoWUXVpY2tDaGF0TXNnVHlwZUNvbmZpZxIKCgJpZBgBIAEo",
            "DRIMCgRuYW1lGAIgASgJEhAKCG1heENvdW50GAMgASgNEhQKDGRlZmF1bHRD",
            "b3VudBgEIAEoDRITCgtkaXNwbGF5VHlwZRgFIAEoDRIRCgltc2dJZExpc3QY",
            "BiADKA0iUQocUXVpY2tDaGF0TXNnVHlwZUNvbmZpZ19BcnJheRIxCgVpdGVt",
            "cxgBIAMoCzIiLkQxMS5QYmVhbnMuUXVpY2tDaGF0TXNnVHlwZUNvbmZpZ2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.QuickChatMsgTypeConfig), global::D11.Pbeans.QuickChatMsgTypeConfig.Parser, new[]{ "Id", "Name", "MaxCount", "DefaultCount", "DisplayType", "MsgIdList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.QuickChatMsgTypeConfig_Array), global::D11.Pbeans.QuickChatMsgTypeConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class QuickChatMsgTypeConfig : pb::IMessage<QuickChatMsgTypeConfig> {
    private static readonly pb::MessageParser<QuickChatMsgTypeConfig> _parser = new pb::MessageParser<QuickChatMsgTypeConfig>(() => new QuickChatMsgTypeConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuickChatMsgTypeConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansQuickchatmsgtypeconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickChatMsgTypeConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickChatMsgTypeConfig(QuickChatMsgTypeConfig other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      maxCount_ = other.maxCount_;
      defaultCount_ = other.defaultCount_;
      displayType_ = other.displayType_;
      msgIdList_ = other.msgIdList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickChatMsgTypeConfig Clone() {
      return new QuickChatMsgTypeConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 类型 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 名称 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxCount" field.</summary>
    public const int MaxCountFieldNumber = 3;
    private uint maxCount_;
    /// <summary>
    /// 条数上限 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxCount {
      get { return maxCount_; }
      set {
        maxCount_ = value;
      }
    }

    /// <summary>Field number for the "defaultCount" field.</summary>
    public const int DefaultCountFieldNumber = 4;
    private uint defaultCount_;
    /// <summary>
    /// 默认条数 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DefaultCount {
      get { return defaultCount_; }
      set {
        defaultCount_ = value;
      }
    }

    /// <summary>Field number for the "displayType" field.</summary>
    public const int DisplayTypeFieldNumber = 5;
    private uint displayType_;
    /// <summary>
    /// 显示模式（1为圆盘显示形式，2为条目显示形式） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DisplayType {
      get { return displayType_; }
      set {
        displayType_ = value;
      }
    }

    /// <summary>Field number for the "msgIdList" field.</summary>
    public const int MsgIdListFieldNumber = 6;
    private static readonly pb::FieldCodec<uint> _repeated_msgIdList_codec
        = pb::FieldCodec.ForUInt32(50);
    private readonly pbc::RepeatedField<uint> msgIdList_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 消息Id（对应Tactical Voice表中的id列） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> MsgIdList {
      get { return msgIdList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuickChatMsgTypeConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuickChatMsgTypeConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (MaxCount != other.MaxCount) return false;
      if (DefaultCount != other.DefaultCount) return false;
      if (DisplayType != other.DisplayType) return false;
      if(!msgIdList_.Equals(other.msgIdList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (MaxCount != 0) hash ^= MaxCount.GetHashCode();
      if (DefaultCount != 0) hash ^= DefaultCount.GetHashCode();
      if (DisplayType != 0) hash ^= DisplayType.GetHashCode();
      hash ^= msgIdList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MaxCount);
      }
      if (DefaultCount != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(DefaultCount);
      }
      if (DisplayType != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(DisplayType);
      }
      msgIdList_.WriteTo(output, _repeated_msgIdList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (MaxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxCount);
      }
      if (DefaultCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DefaultCount);
      }
      if (DisplayType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DisplayType);
      }
      size += msgIdList_.CalculateSize(_repeated_msgIdList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuickChatMsgTypeConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.MaxCount != 0) {
        MaxCount = other.MaxCount;
      }
      if (other.DefaultCount != 0) {
        DefaultCount = other.DefaultCount;
      }
      if (other.DisplayType != 0) {
        DisplayType = other.DisplayType;
      }
      msgIdList_.Add(other.msgIdList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            MaxCount = input.ReadUInt32();
            break;
          }
          case 32: {
            DefaultCount = input.ReadUInt32();
            break;
          }
          case 40: {
            DisplayType = input.ReadUInt32();
            break;
          }
          case 50:
          case 48: {
            msgIdList_.AddEntriesFrom(input, _repeated_msgIdList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QuickChatMsgTypeConfig_Array : pb::IMessage<QuickChatMsgTypeConfig_Array> {
    private static readonly pb::MessageParser<QuickChatMsgTypeConfig_Array> _parser = new pb::MessageParser<QuickChatMsgTypeConfig_Array>(() => new QuickChatMsgTypeConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuickChatMsgTypeConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansQuickchatmsgtypeconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickChatMsgTypeConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickChatMsgTypeConfig_Array(QuickChatMsgTypeConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickChatMsgTypeConfig_Array Clone() {
      return new QuickChatMsgTypeConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.QuickChatMsgTypeConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.QuickChatMsgTypeConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.QuickChatMsgTypeConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.QuickChatMsgTypeConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.QuickChatMsgTypeConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuickChatMsgTypeConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuickChatMsgTypeConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuickChatMsgTypeConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
