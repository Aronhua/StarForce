// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_rogueliketalent.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_rogueliketalent.proto</summary>
  public static partial class XlsBeansRogueliketalentReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_rogueliketalent.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansRogueliketalentReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch94bHNfYmVhbnNfcm9ndWVsaWtldGFsZW50LnByb3RvEgpEMTEuUGJlYW5z",
            "ItcBCg9Sb2d1ZUxpa2VUYWxlbnQSCgoCaWQYASABKA0SDAoEdHlwZRgCIAEo",
            "DRIRCgl3ZWlnaHRJbmMYAyABKA0SEgoKdGFsZW50TmFtZRgEIAEoCRITCgtp",
            "c0NhblJlcGVhdBgFIAEoDRIRCgljb3Jwc1R5cGUYBiABKA0SDgoGYnVmZklk",
            "GAcgASgNEhIKCnRhbGVudEluZm8YCCABKAkSDwoHcXVhbGl0eRgJIAEoDRIM",
            "CgRpY29uGAogASgNEhgKEG93bkJhbGxpc3RpY1R5cGUYCyADKAUiQwoVUm9n",
            "dWVMaWtlVGFsZW50X0FycmF5EioKBWl0ZW1zGAEgAygLMhsuRDExLlBiZWFu",
            "cy5Sb2d1ZUxpa2VUYWxlbnRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.RogueLikeTalent), global::D11.Pbeans.RogueLikeTalent.Parser, new[]{ "Id", "Type", "WeightInc", "TalentName", "IsCanRepeat", "CorpsType", "BuffId", "TalentInfo", "Quality", "Icon", "OwnBallisticType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.RogueLikeTalent_Array), global::D11.Pbeans.RogueLikeTalent_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RogueLikeTalent : pb::IMessage<RogueLikeTalent> {
    private static readonly pb::MessageParser<RogueLikeTalent> _parser = new pb::MessageParser<RogueLikeTalent>(() => new RogueLikeTalent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RogueLikeTalent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansRogueliketalentReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RogueLikeTalent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RogueLikeTalent(RogueLikeTalent other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      weightInc_ = other.weightInc_;
      talentName_ = other.talentName_;
      isCanRepeat_ = other.isCanRepeat_;
      corpsType_ = other.corpsType_;
      buffId_ = other.buffId_;
      talentInfo_ = other.talentInfo_;
      quality_ = other.quality_;
      icon_ = other.icon_;
      ownBallisticType_ = other.ownBallisticType_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RogueLikeTalent Clone() {
      return new RogueLikeTalent(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 天赋id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private uint type_;
    /// <summary>
    /// 天赋类型 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "weightInc" field.</summary>
    public const int WeightIncFieldNumber = 3;
    private uint weightInc_;
    /// <summary>
    /// 权重增幅 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WeightInc {
      get { return weightInc_; }
      set {
        weightInc_ = value;
      }
    }

    /// <summary>Field number for the "talentName" field.</summary>
    public const int TalentNameFieldNumber = 4;
    private string talentName_ = "";
    /// <summary>
    /// 天赋名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalentName {
      get { return talentName_; }
      set {
        talentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isCanRepeat" field.</summary>
    public const int IsCanRepeatFieldNumber = 5;
    private uint isCanRepeat_;
    /// <summary>
    /// 重复获得 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint IsCanRepeat {
      get { return isCanRepeat_; }
      set {
        isCanRepeat_ = value;
      }
    }

    /// <summary>Field number for the "corpsType" field.</summary>
    public const int CorpsTypeFieldNumber = 6;
    private uint corpsType_;
    /// <summary>
    /// 兵种类型 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CorpsType {
      get { return corpsType_; }
      set {
        corpsType_ = value;
      }
    }

    /// <summary>Field number for the "buffId" field.</summary>
    public const int BuffIdFieldNumber = 7;
    private uint buffId_;
    /// <summary>
    /// 对应buff的Id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BuffId {
      get { return buffId_; }
      set {
        buffId_ = value;
      }
    }

    /// <summary>Field number for the "talentInfo" field.</summary>
    public const int TalentInfoFieldNumber = 8;
    private string talentInfo_ = "";
    /// <summary>
    /// 描述 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalentInfo {
      get { return talentInfo_; }
      set {
        talentInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 9;
    private uint quality_;
    /// <summary>
    /// 品质 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 10;
    private uint icon_;
    /// <summary>
    /// 图标 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Icon {
      get { return icon_; }
      set {
        icon_ = value;
      }
    }

    /// <summary>Field number for the "ownBallisticType" field.</summary>
    public const int OwnBallisticTypeFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_ownBallisticType_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> ownBallisticType_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 生效的弹幕类型 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OwnBallisticType {
      get { return ownBallisticType_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RogueLikeTalent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RogueLikeTalent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (WeightInc != other.WeightInc) return false;
      if (TalentName != other.TalentName) return false;
      if (IsCanRepeat != other.IsCanRepeat) return false;
      if (CorpsType != other.CorpsType) return false;
      if (BuffId != other.BuffId) return false;
      if (TalentInfo != other.TalentInfo) return false;
      if (Quality != other.Quality) return false;
      if (Icon != other.Icon) return false;
      if(!ownBallisticType_.Equals(other.ownBallisticType_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (WeightInc != 0) hash ^= WeightInc.GetHashCode();
      if (TalentName.Length != 0) hash ^= TalentName.GetHashCode();
      if (IsCanRepeat != 0) hash ^= IsCanRepeat.GetHashCode();
      if (CorpsType != 0) hash ^= CorpsType.GetHashCode();
      if (BuffId != 0) hash ^= BuffId.GetHashCode();
      if (TalentInfo.Length != 0) hash ^= TalentInfo.GetHashCode();
      if (Quality != 0) hash ^= Quality.GetHashCode();
      if (Icon != 0) hash ^= Icon.GetHashCode();
      hash ^= ownBallisticType_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Type);
      }
      if (WeightInc != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(WeightInc);
      }
      if (TalentName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TalentName);
      }
      if (IsCanRepeat != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(IsCanRepeat);
      }
      if (CorpsType != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(CorpsType);
      }
      if (BuffId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(BuffId);
      }
      if (TalentInfo.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TalentInfo);
      }
      if (Quality != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Quality);
      }
      if (Icon != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Icon);
      }
      ownBallisticType_.WriteTo(output, _repeated_ownBallisticType_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (WeightInc != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WeightInc);
      }
      if (TalentName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalentName);
      }
      if (IsCanRepeat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IsCanRepeat);
      }
      if (CorpsType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CorpsType);
      }
      if (BuffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BuffId);
      }
      if (TalentInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalentInfo);
      }
      if (Quality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quality);
      }
      if (Icon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Icon);
      }
      size += ownBallisticType_.CalculateSize(_repeated_ownBallisticType_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RogueLikeTalent other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.WeightInc != 0) {
        WeightInc = other.WeightInc;
      }
      if (other.TalentName.Length != 0) {
        TalentName = other.TalentName;
      }
      if (other.IsCanRepeat != 0) {
        IsCanRepeat = other.IsCanRepeat;
      }
      if (other.CorpsType != 0) {
        CorpsType = other.CorpsType;
      }
      if (other.BuffId != 0) {
        BuffId = other.BuffId;
      }
      if (other.TalentInfo.Length != 0) {
        TalentInfo = other.TalentInfo;
      }
      if (other.Quality != 0) {
        Quality = other.Quality;
      }
      if (other.Icon != 0) {
        Icon = other.Icon;
      }
      ownBallisticType_.Add(other.ownBallisticType_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Type = input.ReadUInt32();
            break;
          }
          case 24: {
            WeightInc = input.ReadUInt32();
            break;
          }
          case 34: {
            TalentName = input.ReadString();
            break;
          }
          case 40: {
            IsCanRepeat = input.ReadUInt32();
            break;
          }
          case 48: {
            CorpsType = input.ReadUInt32();
            break;
          }
          case 56: {
            BuffId = input.ReadUInt32();
            break;
          }
          case 66: {
            TalentInfo = input.ReadString();
            break;
          }
          case 72: {
            Quality = input.ReadUInt32();
            break;
          }
          case 80: {
            Icon = input.ReadUInt32();
            break;
          }
          case 90:
          case 88: {
            ownBallisticType_.AddEntriesFrom(input, _repeated_ownBallisticType_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RogueLikeTalent_Array : pb::IMessage<RogueLikeTalent_Array> {
    private static readonly pb::MessageParser<RogueLikeTalent_Array> _parser = new pb::MessageParser<RogueLikeTalent_Array>(() => new RogueLikeTalent_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RogueLikeTalent_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansRogueliketalentReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RogueLikeTalent_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RogueLikeTalent_Array(RogueLikeTalent_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RogueLikeTalent_Array Clone() {
      return new RogueLikeTalent_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.RogueLikeTalent> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.RogueLikeTalent.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.RogueLikeTalent> items_ = new pbc::RepeatedField<global::D11.Pbeans.RogueLikeTalent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.RogueLikeTalent> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RogueLikeTalent_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RogueLikeTalent_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RogueLikeTalent_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
