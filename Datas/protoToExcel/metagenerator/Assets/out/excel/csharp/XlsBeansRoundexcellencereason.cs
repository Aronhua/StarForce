// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_roundexcellencereason.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_roundexcellencereason.proto</summary>
  public static partial class XlsBeansRoundexcellencereasonReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_roundexcellencereason.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansRoundexcellencereasonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiV4bHNfYmVhbnNfcm91bmRleGNlbGxlbmNlcmVhc29uLnByb3RvEgpEMTEu",
            "UGJlYW5zIoMBChVSb3VuZEV4Y2VsbGVuY2VSZWFzb24SFgoOZXhjZWxsZW5j",
            "ZVR5cGUYASABKA0SDAoEY29uZBgCIAEoDRIPCgdjb21wYXJlGAMgASgJEhAK",
            "CHNob3dUZXh0GAQgASgJEg4KBm1vZGVpZBgFIAMoDRIRCglzaG93TGV2ZWwY",
            "BiABKA0iTwobUm91bmRFeGNlbGxlbmNlUmVhc29uX0FycmF5EjAKBWl0ZW1z",
            "GAEgAygLMiEuRDExLlBiZWFucy5Sb3VuZEV4Y2VsbGVuY2VSZWFzb25iBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.RoundExcellenceReason), global::D11.Pbeans.RoundExcellenceReason.Parser, new[]{ "ExcellenceType", "Cond", "Compare", "ShowText", "Modeid", "ShowLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.RoundExcellenceReason_Array), global::D11.Pbeans.RoundExcellenceReason_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RoundExcellenceReason : pb::IMessage<RoundExcellenceReason> {
    private static readonly pb::MessageParser<RoundExcellenceReason> _parser = new pb::MessageParser<RoundExcellenceReason>(() => new RoundExcellenceReason());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoundExcellenceReason> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansRoundexcellencereasonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundExcellenceReason() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundExcellenceReason(RoundExcellenceReason other) : this() {
      excellenceType_ = other.excellenceType_;
      cond_ = other.cond_;
      compare_ = other.compare_;
      showText_ = other.showText_;
      modeid_ = other.modeid_.Clone();
      showLevel_ = other.showLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundExcellenceReason Clone() {
      return new RoundExcellenceReason(this);
    }

    /// <summary>Field number for the "excellenceType" field.</summary>
    public const int ExcellenceTypeFieldNumber = 1;
    private uint excellenceType_;
    /// <summary>
    /// 精彩类型 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ExcellenceType {
      get { return excellenceType_; }
      set {
        excellenceType_ = value;
      }
    }

    /// <summary>Field number for the "cond" field.</summary>
    public const int CondFieldNumber = 2;
    private uint cond_;
    /// <summary>
    /// 达成条件 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Cond {
      get { return cond_; }
      set {
        cond_ = value;
      }
    }

    /// <summary>Field number for the "compare" field.</summary>
    public const int CompareFieldNumber = 3;
    private string compare_ = "";
    /// <summary>
    /// 条件比较 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Compare {
      get { return compare_; }
      set {
        compare_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "showText" field.</summary>
    public const int ShowTextFieldNumber = 4;
    private string showText_ = "";
    /// <summary>
    /// 显示内容 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShowText {
      get { return showText_; }
      set {
        showText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modeid" field.</summary>
    public const int ModeidFieldNumber = 5;
    private static readonly pb::FieldCodec<uint> _repeated_modeid_codec
        = pb::FieldCodec.ForUInt32(42);
    private readonly pbc::RepeatedField<uint> modeid_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 模式id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Modeid {
      get { return modeid_; }
    }

    /// <summary>Field number for the "showLevel" field.</summary>
    public const int ShowLevelFieldNumber = 6;
    private uint showLevel_;
    /// <summary>
    /// 优先级高5低1 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ShowLevel {
      get { return showLevel_; }
      set {
        showLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoundExcellenceReason);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoundExcellenceReason other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExcellenceType != other.ExcellenceType) return false;
      if (Cond != other.Cond) return false;
      if (Compare != other.Compare) return false;
      if (ShowText != other.ShowText) return false;
      if(!modeid_.Equals(other.modeid_)) return false;
      if (ShowLevel != other.ShowLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExcellenceType != 0) hash ^= ExcellenceType.GetHashCode();
      if (Cond != 0) hash ^= Cond.GetHashCode();
      if (Compare.Length != 0) hash ^= Compare.GetHashCode();
      if (ShowText.Length != 0) hash ^= ShowText.GetHashCode();
      hash ^= modeid_.GetHashCode();
      if (ShowLevel != 0) hash ^= ShowLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ExcellenceType != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ExcellenceType);
      }
      if (Cond != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Cond);
      }
      if (Compare.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Compare);
      }
      if (ShowText.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ShowText);
      }
      modeid_.WriteTo(output, _repeated_modeid_codec);
      if (ShowLevel != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(ShowLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExcellenceType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExcellenceType);
      }
      if (Cond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Cond);
      }
      if (Compare.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Compare);
      }
      if (ShowText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShowText);
      }
      size += modeid_.CalculateSize(_repeated_modeid_codec);
      if (ShowLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ShowLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoundExcellenceReason other) {
      if (other == null) {
        return;
      }
      if (other.ExcellenceType != 0) {
        ExcellenceType = other.ExcellenceType;
      }
      if (other.Cond != 0) {
        Cond = other.Cond;
      }
      if (other.Compare.Length != 0) {
        Compare = other.Compare;
      }
      if (other.ShowText.Length != 0) {
        ShowText = other.ShowText;
      }
      modeid_.Add(other.modeid_);
      if (other.ShowLevel != 0) {
        ShowLevel = other.ShowLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ExcellenceType = input.ReadUInt32();
            break;
          }
          case 16: {
            Cond = input.ReadUInt32();
            break;
          }
          case 26: {
            Compare = input.ReadString();
            break;
          }
          case 34: {
            ShowText = input.ReadString();
            break;
          }
          case 42:
          case 40: {
            modeid_.AddEntriesFrom(input, _repeated_modeid_codec);
            break;
          }
          case 48: {
            ShowLevel = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoundExcellenceReason_Array : pb::IMessage<RoundExcellenceReason_Array> {
    private static readonly pb::MessageParser<RoundExcellenceReason_Array> _parser = new pb::MessageParser<RoundExcellenceReason_Array>(() => new RoundExcellenceReason_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoundExcellenceReason_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansRoundexcellencereasonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundExcellenceReason_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundExcellenceReason_Array(RoundExcellenceReason_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundExcellenceReason_Array Clone() {
      return new RoundExcellenceReason_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.RoundExcellenceReason> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.RoundExcellenceReason.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.RoundExcellenceReason> items_ = new pbc::RepeatedField<global::D11.Pbeans.RoundExcellenceReason>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.RoundExcellenceReason> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoundExcellenceReason_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoundExcellenceReason_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoundExcellenceReason_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
