// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_shopshowitems.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_shopshowitems.proto</summary>
  public static partial class XlsBeansShopshowitemsReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_shopshowitems.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansShopshowitemsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch14bHNfYmVhbnNfc2hvcHNob3dpdGVtcy5wcm90bxIKRDExLlBiZWFucyLe",
            "AQoNU2hvcFNob3dJdGVtcxIKCgJpZBgBIAEoDRIRCglzaG9wVGFiSWQYAiAB",
            "KA0SEAoIaXRlbWlkX3QYAyABKA0SEQoJaXRlbWlkX2N0GAQgASgNEhkKEUln",
            "bm9yZVJlcXVpcmVTa2luGAUgASgIEg4KBnBhZ2VpZBgGIAEoDRIQCghwYWdl",
            "TmFtZRgHIAEoCRIRCglpdGVtVHlwZXMYCCADKA0SGQoRUmVjb21tZW5kcHJp",
            "b3JpdHkYCSABKA0SEAoIcHJpb3JpdHkYCiABKA0SDAoEc2xvdBgLIAEoDSI/",
            "ChNTaG9wU2hvd0l0ZW1zX0FycmF5EigKBWl0ZW1zGAEgAygLMhkuRDExLlBi",
            "ZWFucy5TaG9wU2hvd0l0ZW1zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.ShopShowItems), global::D11.Pbeans.ShopShowItems.Parser, new[]{ "Id", "ShopTabId", "ItemidT", "ItemidCt", "IgnoreRequireSkin", "Pageid", "PageName", "ItemTypes", "Recommendpriority", "Priority", "Slot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.ShopShowItems_Array), global::D11.Pbeans.ShopShowItems_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ShopShowItems : pb::IMessage<ShopShowItems> {
    private static readonly pb::MessageParser<ShopShowItems> _parser = new pb::MessageParser<ShopShowItems>(() => new ShopShowItems());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShopShowItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansShopshowitemsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopShowItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopShowItems(ShopShowItems other) : this() {
      id_ = other.id_;
      shopTabId_ = other.shopTabId_;
      itemidT_ = other.itemidT_;
      itemidCt_ = other.itemidCt_;
      ignoreRequireSkin_ = other.ignoreRequireSkin_;
      pageid_ = other.pageid_;
      pageName_ = other.pageName_;
      itemTypes_ = other.itemTypes_.Clone();
      recommendpriority_ = other.recommendpriority_;
      priority_ = other.priority_;
      slot_ = other.slot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopShowItems Clone() {
      return new ShopShowItems(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 检查用 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "shopTabId" field.</summary>
    public const int ShopTabIdFieldNumber = 2;
    private uint shopTabId_;
    /// <summary>
    /// 商店表Id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ShopTabId {
      get { return shopTabId_; }
      set {
        shopTabId_ = value;
      }
    }

    /// <summary>Field number for the "itemid_t" field.</summary>
    public const int ItemidTFieldNumber = 3;
    private uint itemidT_;
    /// <summary>
    /// T默认商品id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemidT {
      get { return itemidT_; }
      set {
        itemidT_ = value;
      }
    }

    /// <summary>Field number for the "itemid_ct" field.</summary>
    public const int ItemidCtFieldNumber = 4;
    private uint itemidCt_;
    /// <summary>
    /// CT默认商品id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemidCt {
      get { return itemidCt_; }
      set {
        itemidCt_ = value;
      }
    }

    /// <summary>Field number for the "IgnoreRequireSkin" field.</summary>
    public const int IgnoreRequireSkinFieldNumber = 5;
    private bool ignoreRequireSkin_;
    /// <summary>
    /// 无视有皮肤才可购买 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IgnoreRequireSkin {
      get { return ignoreRequireSkin_; }
      set {
        ignoreRequireSkin_ = value;
      }
    }

    /// <summary>Field number for the "pageid" field.</summary>
    public const int PageidFieldNumber = 6;
    private uint pageid_;
    /// <summary>
    /// 分类id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Pageid {
      get { return pageid_; }
      set {
        pageid_ = value;
      }
    }

    /// <summary>Field number for the "pageName" field.</summary>
    public const int PageNameFieldNumber = 7;
    private string pageName_ = "";
    /// <summary>
    /// 分类名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageName {
      get { return pageName_; }
      set {
        pageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "itemTypes" field.</summary>
    public const int ItemTypesFieldNumber = 8;
    private static readonly pb::FieldCodec<uint> _repeated_itemTypes_codec
        = pb::FieldCodec.ForUInt32(66);
    private readonly pbc::RepeatedField<uint> itemTypes_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 类型id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> ItemTypes {
      get { return itemTypes_; }
    }

    /// <summary>Field number for the "Recommendpriority" field.</summary>
    public const int RecommendpriorityFieldNumber = 9;
    private uint recommendpriority_;
    /// <summary>
    /// 推荐优先级 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Recommendpriority {
      get { return recommendpriority_; }
      set {
        recommendpriority_ = value;
      }
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 10;
    private uint priority_;
    /// <summary>
    /// 优先级 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "slot" field.</summary>
    public const int SlotFieldNumber = 11;
    private uint slot_;
    /// <summary>
    /// 指定槽位[1~6] 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Slot {
      get { return slot_; }
      set {
        slot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShopShowItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShopShowItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ShopTabId != other.ShopTabId) return false;
      if (ItemidT != other.ItemidT) return false;
      if (ItemidCt != other.ItemidCt) return false;
      if (IgnoreRequireSkin != other.IgnoreRequireSkin) return false;
      if (Pageid != other.Pageid) return false;
      if (PageName != other.PageName) return false;
      if(!itemTypes_.Equals(other.itemTypes_)) return false;
      if (Recommendpriority != other.Recommendpriority) return false;
      if (Priority != other.Priority) return false;
      if (Slot != other.Slot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ShopTabId != 0) hash ^= ShopTabId.GetHashCode();
      if (ItemidT != 0) hash ^= ItemidT.GetHashCode();
      if (ItemidCt != 0) hash ^= ItemidCt.GetHashCode();
      if (IgnoreRequireSkin != false) hash ^= IgnoreRequireSkin.GetHashCode();
      if (Pageid != 0) hash ^= Pageid.GetHashCode();
      if (PageName.Length != 0) hash ^= PageName.GetHashCode();
      hash ^= itemTypes_.GetHashCode();
      if (Recommendpriority != 0) hash ^= Recommendpriority.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (Slot != 0) hash ^= Slot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (ShopTabId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ShopTabId);
      }
      if (ItemidT != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ItemidT);
      }
      if (ItemidCt != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ItemidCt);
      }
      if (IgnoreRequireSkin != false) {
        output.WriteRawTag(40);
        output.WriteBool(IgnoreRequireSkin);
      }
      if (Pageid != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Pageid);
      }
      if (PageName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PageName);
      }
      itemTypes_.WriteTo(output, _repeated_itemTypes_codec);
      if (Recommendpriority != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Recommendpriority);
      }
      if (Priority != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Priority);
      }
      if (Slot != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Slot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (ShopTabId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ShopTabId);
      }
      if (ItemidT != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemidT);
      }
      if (ItemidCt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemidCt);
      }
      if (IgnoreRequireSkin != false) {
        size += 1 + 1;
      }
      if (Pageid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pageid);
      }
      if (PageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageName);
      }
      size += itemTypes_.CalculateSize(_repeated_itemTypes_codec);
      if (Recommendpriority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Recommendpriority);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Priority);
      }
      if (Slot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Slot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShopShowItems other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ShopTabId != 0) {
        ShopTabId = other.ShopTabId;
      }
      if (other.ItemidT != 0) {
        ItemidT = other.ItemidT;
      }
      if (other.ItemidCt != 0) {
        ItemidCt = other.ItemidCt;
      }
      if (other.IgnoreRequireSkin != false) {
        IgnoreRequireSkin = other.IgnoreRequireSkin;
      }
      if (other.Pageid != 0) {
        Pageid = other.Pageid;
      }
      if (other.PageName.Length != 0) {
        PageName = other.PageName;
      }
      itemTypes_.Add(other.itemTypes_);
      if (other.Recommendpriority != 0) {
        Recommendpriority = other.Recommendpriority;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      if (other.Slot != 0) {
        Slot = other.Slot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            ShopTabId = input.ReadUInt32();
            break;
          }
          case 24: {
            ItemidT = input.ReadUInt32();
            break;
          }
          case 32: {
            ItemidCt = input.ReadUInt32();
            break;
          }
          case 40: {
            IgnoreRequireSkin = input.ReadBool();
            break;
          }
          case 48: {
            Pageid = input.ReadUInt32();
            break;
          }
          case 58: {
            PageName = input.ReadString();
            break;
          }
          case 66:
          case 64: {
            itemTypes_.AddEntriesFrom(input, _repeated_itemTypes_codec);
            break;
          }
          case 72: {
            Recommendpriority = input.ReadUInt32();
            break;
          }
          case 80: {
            Priority = input.ReadUInt32();
            break;
          }
          case 88: {
            Slot = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShopShowItems_Array : pb::IMessage<ShopShowItems_Array> {
    private static readonly pb::MessageParser<ShopShowItems_Array> _parser = new pb::MessageParser<ShopShowItems_Array>(() => new ShopShowItems_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShopShowItems_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansShopshowitemsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopShowItems_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopShowItems_Array(ShopShowItems_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopShowItems_Array Clone() {
      return new ShopShowItems_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.ShopShowItems> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.ShopShowItems.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.ShopShowItems> items_ = new pbc::RepeatedField<global::D11.Pbeans.ShopShowItems>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.ShopShowItems> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShopShowItems_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShopShowItems_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShopShowItems_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
