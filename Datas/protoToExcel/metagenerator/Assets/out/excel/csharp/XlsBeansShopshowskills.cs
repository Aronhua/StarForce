// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_shopshowskills.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_shopshowskills.proto</summary>
  public static partial class XlsBeansShopshowskillsReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_shopshowskills.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansShopshowskillsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch54bHNfYmVhbnNfc2hvcHNob3dza2lsbHMucHJvdG8SCkQxMS5QYmVhbnMi",
            "bQoOU2hvcFNob3dTa2lsbHMSCgoCaWQYASABKA0SDgoGbW9kZWlkGAIgASgN",
            "Eg8KB1NraWxsSWQYAyABKA0SDQoFcHJpemUYBCABKA0SDQoFbGltaXQYBSAB",
            "KA0SEAoIcHJpb3JpdHkYBiABKA0iQQoUU2hvcFNob3dTa2lsbHNfQXJyYXkS",
            "KQoFaXRlbXMYASADKAsyGi5EMTEuUGJlYW5zLlNob3BTaG93U2tpbGxzYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.ShopShowSkills), global::D11.Pbeans.ShopShowSkills.Parser, new[]{ "Id", "Modeid", "SkillId", "Prize", "Limit", "Priority" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.ShopShowSkills_Array), global::D11.Pbeans.ShopShowSkills_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ShopShowSkills : pb::IMessage<ShopShowSkills> {
    private static readonly pb::MessageParser<ShopShowSkills> _parser = new pb::MessageParser<ShopShowSkills>(() => new ShopShowSkills());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShopShowSkills> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansShopshowskillsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopShowSkills() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopShowSkills(ShopShowSkills other) : this() {
      id_ = other.id_;
      modeid_ = other.modeid_;
      skillId_ = other.skillId_;
      prize_ = other.prize_;
      limit_ = other.limit_;
      priority_ = other.priority_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopShowSkills Clone() {
      return new ShopShowSkills(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 检查用 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "modeid" field.</summary>
    public const int ModeidFieldNumber = 2;
    private uint modeid_;
    /// <summary>
    /// 模式id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Modeid {
      get { return modeid_; }
      set {
        modeid_ = value;
      }
    }

    /// <summary>Field number for the "SkillId" field.</summary>
    public const int SkillIdFieldNumber = 3;
    private uint skillId_;
    /// <summary>
    /// 技能ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SkillId {
      get { return skillId_; }
      set {
        skillId_ = value;
      }
    }

    /// <summary>Field number for the "prize" field.</summary>
    public const int PrizeFieldNumber = 4;
    private uint prize_;
    /// <summary>
    /// 价格 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Prize {
      get { return prize_; }
      set {
        prize_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 5;
    private uint limit_;
    /// <summary>
    /// 最大持有上限 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 6;
    private uint priority_;
    /// <summary>
    /// 展示优先级 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShopShowSkills);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShopShowSkills other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Modeid != other.Modeid) return false;
      if (SkillId != other.SkillId) return false;
      if (Prize != other.Prize) return false;
      if (Limit != other.Limit) return false;
      if (Priority != other.Priority) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Modeid != 0) hash ^= Modeid.GetHashCode();
      if (SkillId != 0) hash ^= SkillId.GetHashCode();
      if (Prize != 0) hash ^= Prize.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Modeid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Modeid);
      }
      if (SkillId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SkillId);
      }
      if (Prize != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Prize);
      }
      if (Limit != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Limit);
      }
      if (Priority != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Priority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Modeid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Modeid);
      }
      if (SkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SkillId);
      }
      if (Prize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Prize);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Limit);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Priority);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShopShowSkills other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Modeid != 0) {
        Modeid = other.Modeid;
      }
      if (other.SkillId != 0) {
        SkillId = other.SkillId;
      }
      if (other.Prize != 0) {
        Prize = other.Prize;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Modeid = input.ReadUInt32();
            break;
          }
          case 24: {
            SkillId = input.ReadUInt32();
            break;
          }
          case 32: {
            Prize = input.ReadUInt32();
            break;
          }
          case 40: {
            Limit = input.ReadUInt32();
            break;
          }
          case 48: {
            Priority = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShopShowSkills_Array : pb::IMessage<ShopShowSkills_Array> {
    private static readonly pb::MessageParser<ShopShowSkills_Array> _parser = new pb::MessageParser<ShopShowSkills_Array>(() => new ShopShowSkills_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShopShowSkills_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansShopshowskillsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopShowSkills_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopShowSkills_Array(ShopShowSkills_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopShowSkills_Array Clone() {
      return new ShopShowSkills_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.ShopShowSkills> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.ShopShowSkills.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.ShopShowSkills> items_ = new pbc::RepeatedField<global::D11.Pbeans.ShopShowSkills>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.ShopShowSkills> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShopShowSkills_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShopShowSkills_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShopShowSkills_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
