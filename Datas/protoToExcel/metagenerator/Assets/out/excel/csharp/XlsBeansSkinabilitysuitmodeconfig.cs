// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_skinabilitysuitmodeconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_skinabilitysuitmodeconfig.proto</summary>
  public static partial class XlsBeansSkinabilitysuitmodeconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_skinabilitysuitmodeconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansSkinabilitysuitmodeconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cil4bHNfYmVhbnNfc2tpbmFiaWxpdHlzdWl0bW9kZWNvbmZpZy5wcm90bxIK",
            "RDExLlBiZWFucyLPAQoZU2tpbkFiaWxpdHlTdWl0TW9kZUNvbmZpZxIKCgJp",
            "ZBgBIAEoDRIbChNoZWFkU2hvdERpYW1vbmRSYXRlGAIgASgNEhgKEGhlYWRT",
            "aG90R29sZFJhdGUYAyABKA0SHgoWaGVhZFNob3RSYW5rZWRDb2luUmF0ZRgE",
            "IAEoDRIZChFub3JtYWxEaWFtb25kUmF0ZRgFIAEoDRIWCg5ub3JtYWxHb2xk",
            "UmF0ZRgGIAEoDRIcChRub3JtYWxSYW5rZWRDb2luUmF0ZRgHIAEoDSJXCh9T",
            "a2luQWJpbGl0eVN1aXRNb2RlQ29uZmlnX0FycmF5EjQKBWl0ZW1zGAEgAygL",
            "MiUuRDExLlBiZWFucy5Ta2luQWJpbGl0eVN1aXRNb2RlQ29uZmlnYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.SkinAbilitySuitModeConfig), global::D11.Pbeans.SkinAbilitySuitModeConfig.Parser, new[]{ "Id", "HeadShotDiamondRate", "HeadShotGoldRate", "HeadShotRankedCoinRate", "NormalDiamondRate", "NormalGoldRate", "NormalRankedCoinRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.SkinAbilitySuitModeConfig_Array), global::D11.Pbeans.SkinAbilitySuitModeConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SkinAbilitySuitModeConfig : pb::IMessage<SkinAbilitySuitModeConfig> {
    private static readonly pb::MessageParser<SkinAbilitySuitModeConfig> _parser = new pb::MessageParser<SkinAbilitySuitModeConfig>(() => new SkinAbilitySuitModeConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkinAbilitySuitModeConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansSkinabilitysuitmodeconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinAbilitySuitModeConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinAbilitySuitModeConfig(SkinAbilitySuitModeConfig other) : this() {
      id_ = other.id_;
      headShotDiamondRate_ = other.headShotDiamondRate_;
      headShotGoldRate_ = other.headShotGoldRate_;
      headShotRankedCoinRate_ = other.headShotRankedCoinRate_;
      normalDiamondRate_ = other.normalDiamondRate_;
      normalGoldRate_ = other.normalGoldRate_;
      normalRankedCoinRate_ = other.normalRankedCoinRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinAbilitySuitModeConfig Clone() {
      return new SkinAbilitySuitModeConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 模式 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "headShotDiamondRate" field.</summary>
    public const int HeadShotDiamondRateFieldNumber = 2;
    private uint headShotDiamondRate_;
    /// <summary>
    /// 钻石产出概率(万分比) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HeadShotDiamondRate {
      get { return headShotDiamondRate_; }
      set {
        headShotDiamondRate_ = value;
      }
    }

    /// <summary>Field number for the "headShotGoldRate" field.</summary>
    public const int HeadShotGoldRateFieldNumber = 3;
    private uint headShotGoldRate_;
    /// <summary>
    /// 金币产出概率(万分比) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HeadShotGoldRate {
      get { return headShotGoldRate_; }
      set {
        headShotGoldRate_ = value;
      }
    }

    /// <summary>Field number for the "headShotRankedCoinRate" field.</summary>
    public const int HeadShotRankedCoinRateFieldNumber = 4;
    private uint headShotRankedCoinRate_;
    /// <summary>
    /// 排位币产出概率(万分比) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HeadShotRankedCoinRate {
      get { return headShotRankedCoinRate_; }
      set {
        headShotRankedCoinRate_ = value;
      }
    }

    /// <summary>Field number for the "normalDiamondRate" field.</summary>
    public const int NormalDiamondRateFieldNumber = 5;
    private uint normalDiamondRate_;
    /// <summary>
    /// 钻石产出概率(万分比) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NormalDiamondRate {
      get { return normalDiamondRate_; }
      set {
        normalDiamondRate_ = value;
      }
    }

    /// <summary>Field number for the "normalGoldRate" field.</summary>
    public const int NormalGoldRateFieldNumber = 6;
    private uint normalGoldRate_;
    /// <summary>
    /// 金币产出概率(万分比) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NormalGoldRate {
      get { return normalGoldRate_; }
      set {
        normalGoldRate_ = value;
      }
    }

    /// <summary>Field number for the "normalRankedCoinRate" field.</summary>
    public const int NormalRankedCoinRateFieldNumber = 7;
    private uint normalRankedCoinRate_;
    /// <summary>
    /// 排位币产出概率(万分比) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NormalRankedCoinRate {
      get { return normalRankedCoinRate_; }
      set {
        normalRankedCoinRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkinAbilitySuitModeConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkinAbilitySuitModeConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (HeadShotDiamondRate != other.HeadShotDiamondRate) return false;
      if (HeadShotGoldRate != other.HeadShotGoldRate) return false;
      if (HeadShotRankedCoinRate != other.HeadShotRankedCoinRate) return false;
      if (NormalDiamondRate != other.NormalDiamondRate) return false;
      if (NormalGoldRate != other.NormalGoldRate) return false;
      if (NormalRankedCoinRate != other.NormalRankedCoinRate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (HeadShotDiamondRate != 0) hash ^= HeadShotDiamondRate.GetHashCode();
      if (HeadShotGoldRate != 0) hash ^= HeadShotGoldRate.GetHashCode();
      if (HeadShotRankedCoinRate != 0) hash ^= HeadShotRankedCoinRate.GetHashCode();
      if (NormalDiamondRate != 0) hash ^= NormalDiamondRate.GetHashCode();
      if (NormalGoldRate != 0) hash ^= NormalGoldRate.GetHashCode();
      if (NormalRankedCoinRate != 0) hash ^= NormalRankedCoinRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HeadShotDiamondRate != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(HeadShotDiamondRate);
      }
      if (HeadShotGoldRate != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(HeadShotGoldRate);
      }
      if (HeadShotRankedCoinRate != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(HeadShotRankedCoinRate);
      }
      if (NormalDiamondRate != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(NormalDiamondRate);
      }
      if (NormalGoldRate != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(NormalGoldRate);
      }
      if (NormalRankedCoinRate != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(NormalRankedCoinRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HeadShotDiamondRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HeadShotDiamondRate);
      }
      if (HeadShotGoldRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HeadShotGoldRate);
      }
      if (HeadShotRankedCoinRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HeadShotRankedCoinRate);
      }
      if (NormalDiamondRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NormalDiamondRate);
      }
      if (NormalGoldRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NormalGoldRate);
      }
      if (NormalRankedCoinRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NormalRankedCoinRate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkinAbilitySuitModeConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.HeadShotDiamondRate != 0) {
        HeadShotDiamondRate = other.HeadShotDiamondRate;
      }
      if (other.HeadShotGoldRate != 0) {
        HeadShotGoldRate = other.HeadShotGoldRate;
      }
      if (other.HeadShotRankedCoinRate != 0) {
        HeadShotRankedCoinRate = other.HeadShotRankedCoinRate;
      }
      if (other.NormalDiamondRate != 0) {
        NormalDiamondRate = other.NormalDiamondRate;
      }
      if (other.NormalGoldRate != 0) {
        NormalGoldRate = other.NormalGoldRate;
      }
      if (other.NormalRankedCoinRate != 0) {
        NormalRankedCoinRate = other.NormalRankedCoinRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            HeadShotDiamondRate = input.ReadUInt32();
            break;
          }
          case 24: {
            HeadShotGoldRate = input.ReadUInt32();
            break;
          }
          case 32: {
            HeadShotRankedCoinRate = input.ReadUInt32();
            break;
          }
          case 40: {
            NormalDiamondRate = input.ReadUInt32();
            break;
          }
          case 48: {
            NormalGoldRate = input.ReadUInt32();
            break;
          }
          case 56: {
            NormalRankedCoinRate = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SkinAbilitySuitModeConfig_Array : pb::IMessage<SkinAbilitySuitModeConfig_Array> {
    private static readonly pb::MessageParser<SkinAbilitySuitModeConfig_Array> _parser = new pb::MessageParser<SkinAbilitySuitModeConfig_Array>(() => new SkinAbilitySuitModeConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkinAbilitySuitModeConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansSkinabilitysuitmodeconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinAbilitySuitModeConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinAbilitySuitModeConfig_Array(SkinAbilitySuitModeConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinAbilitySuitModeConfig_Array Clone() {
      return new SkinAbilitySuitModeConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.SkinAbilitySuitModeConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.SkinAbilitySuitModeConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.SkinAbilitySuitModeConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.SkinAbilitySuitModeConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.SkinAbilitySuitModeConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkinAbilitySuitModeConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkinAbilitySuitModeConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkinAbilitySuitModeConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
