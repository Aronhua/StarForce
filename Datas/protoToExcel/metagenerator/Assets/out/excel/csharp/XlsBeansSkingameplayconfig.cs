// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_skingameplayconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_skingameplayconfig.proto</summary>
  public static partial class XlsBeansSkingameplayconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_skingameplayconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansSkingameplayconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJ4bHNfYmVhbnNfc2tpbmdhbWVwbGF5Y29uZmlnLnByb3RvEgpEMTEuUGJl",
            "YW5zIpIBChJTa2luR2FtZVBsYXlDb25maWcSCgoCaWQYASABKA0SDgoGYWN0",
            "aW9uGAIgASgNEhAKCEJ1ZmZMaXN0GAMgAygNEhkKEVdlYXBvblNwZWNpYWxM",
            "aXN0GAQgAygNEjMKBU1vbmV5GAUgAygLMiQuRDExLlBiZWFucy5Ta2luR2Ft",
            "ZVBsYXlDb25maWdfTW9uZXkiSQoYU2tpbkdhbWVQbGF5Q29uZmlnX01vbmV5",
            "EgwKBHR5cGUYASABKA0SDQoFdmFsdWUYAiABKA0SEAoIZGF5TGltaXQYAyAB",
            "KA0iSQoYU2tpbkdhbWVQbGF5Q29uZmlnX0FycmF5Ei0KBWl0ZW1zGAEgAygL",
            "Mh4uRDExLlBiZWFucy5Ta2luR2FtZVBsYXlDb25maWdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.SkinGamePlayConfig), global::D11.Pbeans.SkinGamePlayConfig.Parser, new[]{ "Id", "Action", "BuffList", "WeaponSpecialList", "Money" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.SkinGamePlayConfig_Money), global::D11.Pbeans.SkinGamePlayConfig_Money.Parser, new[]{ "Type", "Value", "DayLimit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.SkinGamePlayConfig_Array), global::D11.Pbeans.SkinGamePlayConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SkinGamePlayConfig : pb::IMessage<SkinGamePlayConfig> {
    private static readonly pb::MessageParser<SkinGamePlayConfig> _parser = new pb::MessageParser<SkinGamePlayConfig>(() => new SkinGamePlayConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkinGamePlayConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansSkingameplayconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinGamePlayConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinGamePlayConfig(SkinGamePlayConfig other) : this() {
      id_ = other.id_;
      action_ = other.action_;
      buffList_ = other.buffList_.Clone();
      weaponSpecialList_ = other.weaponSpecialList_.Clone();
      money_ = other.money_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinGamePlayConfig Clone() {
      return new SkinGamePlayConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 技能ID (给AbilityUseConfig用) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 2;
    private uint action_;
    /// <summary>
    /// action(功能) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "BuffList" field.</summary>
    public const int BuffListFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_buffList_codec
        = pb::FieldCodec.ForUInt32(26);
    private readonly pbc::RepeatedField<uint> buffList_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// buff参数 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> BuffList {
      get { return buffList_; }
    }

    /// <summary>Field number for the "WeaponSpecialList" field.</summary>
    public const int WeaponSpecialListFieldNumber = 4;
    private static readonly pb::FieldCodec<uint> _repeated_weaponSpecialList_codec
        = pb::FieldCodec.ForUInt32(34);
    private readonly pbc::RepeatedField<uint> weaponSpecialList_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 特殊武器功能开启 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> WeaponSpecialList {
      get { return weaponSpecialList_; }
    }

    /// <summary>Field number for the "Money" field.</summary>
    public const int MoneyFieldNumber = 5;
    private static readonly pb::FieldCodec<global::D11.Pbeans.SkinGamePlayConfig_Money> _repeated_money_codec
        = pb::FieldCodec.ForMessage(42, global::D11.Pbeans.SkinGamePlayConfig_Money.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.SkinGamePlayConfig_Money> money_ = new pbc::RepeatedField<global::D11.Pbeans.SkinGamePlayConfig_Money>();
    /// <summary>
    /// Money[] 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.SkinGamePlayConfig_Money> Money {
      get { return money_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkinGamePlayConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkinGamePlayConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Action != other.Action) return false;
      if(!buffList_.Equals(other.buffList_)) return false;
      if(!weaponSpecialList_.Equals(other.weaponSpecialList_)) return false;
      if(!money_.Equals(other.money_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Action != 0) hash ^= Action.GetHashCode();
      hash ^= buffList_.GetHashCode();
      hash ^= weaponSpecialList_.GetHashCode();
      hash ^= money_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Action != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Action);
      }
      buffList_.WriteTo(output, _repeated_buffList_codec);
      weaponSpecialList_.WriteTo(output, _repeated_weaponSpecialList_codec);
      money_.WriteTo(output, _repeated_money_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Action);
      }
      size += buffList_.CalculateSize(_repeated_buffList_codec);
      size += weaponSpecialList_.CalculateSize(_repeated_weaponSpecialList_codec);
      size += money_.CalculateSize(_repeated_money_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkinGamePlayConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      buffList_.Add(other.buffList_);
      weaponSpecialList_.Add(other.weaponSpecialList_);
      money_.Add(other.money_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Action = input.ReadUInt32();
            break;
          }
          case 26:
          case 24: {
            buffList_.AddEntriesFrom(input, _repeated_buffList_codec);
            break;
          }
          case 34:
          case 32: {
            weaponSpecialList_.AddEntriesFrom(input, _repeated_weaponSpecialList_codec);
            break;
          }
          case 42: {
            money_.AddEntriesFrom(input, _repeated_money_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SkinGamePlayConfig_Money : pb::IMessage<SkinGamePlayConfig_Money> {
    private static readonly pb::MessageParser<SkinGamePlayConfig_Money> _parser = new pb::MessageParser<SkinGamePlayConfig_Money>(() => new SkinGamePlayConfig_Money());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkinGamePlayConfig_Money> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansSkingameplayconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinGamePlayConfig_Money() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinGamePlayConfig_Money(SkinGamePlayConfig_Money other) : this() {
      type_ = other.type_;
      value_ = other.value_;
      dayLimit_ = other.dayLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinGamePlayConfig_Money Clone() {
      return new SkinGamePlayConfig_Money(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private uint type_;
    /// <summary>
    /// Money[] 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private uint value_;
    /// <summary>
    /// 数量 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "dayLimit" field.</summary>
    public const int DayLimitFieldNumber = 3;
    private uint dayLimit_;
    /// <summary>
    /// 每日上限 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DayLimit {
      get { return dayLimit_; }
      set {
        dayLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkinGamePlayConfig_Money);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkinGamePlayConfig_Money other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      if (DayLimit != other.DayLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (DayLimit != 0) hash ^= DayLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Type);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Value);
      }
      if (DayLimit != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(DayLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Value);
      }
      if (DayLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DayLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkinGamePlayConfig_Money other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      if (other.DayLimit != 0) {
        DayLimit = other.DayLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadUInt32();
            break;
          }
          case 16: {
            Value = input.ReadUInt32();
            break;
          }
          case 24: {
            DayLimit = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SkinGamePlayConfig_Array : pb::IMessage<SkinGamePlayConfig_Array> {
    private static readonly pb::MessageParser<SkinGamePlayConfig_Array> _parser = new pb::MessageParser<SkinGamePlayConfig_Array>(() => new SkinGamePlayConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkinGamePlayConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansSkingameplayconfigReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinGamePlayConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinGamePlayConfig_Array(SkinGamePlayConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkinGamePlayConfig_Array Clone() {
      return new SkinGamePlayConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.SkinGamePlayConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.SkinGamePlayConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.SkinGamePlayConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.SkinGamePlayConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.SkinGamePlayConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkinGamePlayConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkinGamePlayConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkinGamePlayConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
