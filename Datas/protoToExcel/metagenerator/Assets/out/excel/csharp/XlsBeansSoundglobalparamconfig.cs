// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_soundglobalparamconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_soundglobalparamconfig.proto</summary>
  public static partial class XlsBeansSoundglobalparamconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_soundglobalparamconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansSoundglobalparamconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZ4bHNfYmVhbnNfc291bmRnbG9iYWxwYXJhbWNvbmZpZy5wcm90bxIKRDEx",
            "LlBiZWFucyKUAQoWU291bmRHbG9iYWxQYXJhbUNvbmZpZxIXCg9NYWluU291",
            "bmRWb2x1bWUYASABKAkSGAoQTXVzaWNTb3VuZFZvbHVtZRgCIAEoCRIVCg1V",
            "SVNvdW5kVm9sdW1lGAMgASgJEhYKDlZveFNvdW5kVm9sdW1lGAQgASgJEhgK",
            "EEZpZ2h0U291bmRWb2x1bWUYBSABKAkiUQocU291bmRHbG9iYWxQYXJhbUNv",
            "bmZpZ19BcnJheRIxCgVpdGVtcxgBIAMoCzIiLkQxMS5QYmVhbnMuU291bmRH",
            "bG9iYWxQYXJhbUNvbmZpZ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.SoundGlobalParamConfig), global::D11.Pbeans.SoundGlobalParamConfig.Parser, new[]{ "MainSoundVolume", "MusicSoundVolume", "UISoundVolume", "VoxSoundVolume", "FightSoundVolume" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.SoundGlobalParamConfig_Array), global::D11.Pbeans.SoundGlobalParamConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SoundGlobalParamConfig : pb::IMessage<SoundGlobalParamConfig> {
    private static readonly pb::MessageParser<SoundGlobalParamConfig> _parser = new pb::MessageParser<SoundGlobalParamConfig>(() => new SoundGlobalParamConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SoundGlobalParamConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansSoundglobalparamconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoundGlobalParamConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoundGlobalParamConfig(SoundGlobalParamConfig other) : this() {
      mainSoundVolume_ = other.mainSoundVolume_;
      musicSoundVolume_ = other.musicSoundVolume_;
      uISoundVolume_ = other.uISoundVolume_;
      voxSoundVolume_ = other.voxSoundVolume_;
      fightSoundVolume_ = other.fightSoundVolume_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoundGlobalParamConfig Clone() {
      return new SoundGlobalParamConfig(this);
    }

    /// <summary>Field number for the "MainSoundVolume" field.</summary>
    public const int MainSoundVolumeFieldNumber = 1;
    private string mainSoundVolume_ = "";
    /// <summary>
    /// 主音量RTPC名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MainSoundVolume {
      get { return mainSoundVolume_; }
      set {
        mainSoundVolume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MusicSoundVolume" field.</summary>
    public const int MusicSoundVolumeFieldNumber = 2;
    private string musicSoundVolume_ = "";
    /// <summary>
    /// 音乐RTPC名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MusicSoundVolume {
      get { return musicSoundVolume_; }
      set {
        musicSoundVolume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UISoundVolume" field.</summary>
    public const int UISoundVolumeFieldNumber = 3;
    private string uISoundVolume_ = "";
    /// <summary>
    /// UI 音量RTPC名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UISoundVolume {
      get { return uISoundVolume_; }
      set {
        uISoundVolume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "VoxSoundVolume" field.</summary>
    public const int VoxSoundVolumeFieldNumber = 4;
    private string voxSoundVolume_ = "";
    /// <summary>
    /// 角色音量RTPC名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VoxSoundVolume {
      get { return voxSoundVolume_; }
      set {
        voxSoundVolume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FightSoundVolume" field.</summary>
    public const int FightSoundVolumeFieldNumber = 5;
    private string fightSoundVolume_ = "";
    /// <summary>
    /// 战斗音量RTPC名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FightSoundVolume {
      get { return fightSoundVolume_; }
      set {
        fightSoundVolume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SoundGlobalParamConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SoundGlobalParamConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MainSoundVolume != other.MainSoundVolume) return false;
      if (MusicSoundVolume != other.MusicSoundVolume) return false;
      if (UISoundVolume != other.UISoundVolume) return false;
      if (VoxSoundVolume != other.VoxSoundVolume) return false;
      if (FightSoundVolume != other.FightSoundVolume) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MainSoundVolume.Length != 0) hash ^= MainSoundVolume.GetHashCode();
      if (MusicSoundVolume.Length != 0) hash ^= MusicSoundVolume.GetHashCode();
      if (UISoundVolume.Length != 0) hash ^= UISoundVolume.GetHashCode();
      if (VoxSoundVolume.Length != 0) hash ^= VoxSoundVolume.GetHashCode();
      if (FightSoundVolume.Length != 0) hash ^= FightSoundVolume.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MainSoundVolume.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MainSoundVolume);
      }
      if (MusicSoundVolume.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MusicSoundVolume);
      }
      if (UISoundVolume.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UISoundVolume);
      }
      if (VoxSoundVolume.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(VoxSoundVolume);
      }
      if (FightSoundVolume.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FightSoundVolume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MainSoundVolume.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MainSoundVolume);
      }
      if (MusicSoundVolume.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MusicSoundVolume);
      }
      if (UISoundVolume.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UISoundVolume);
      }
      if (VoxSoundVolume.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VoxSoundVolume);
      }
      if (FightSoundVolume.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FightSoundVolume);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SoundGlobalParamConfig other) {
      if (other == null) {
        return;
      }
      if (other.MainSoundVolume.Length != 0) {
        MainSoundVolume = other.MainSoundVolume;
      }
      if (other.MusicSoundVolume.Length != 0) {
        MusicSoundVolume = other.MusicSoundVolume;
      }
      if (other.UISoundVolume.Length != 0) {
        UISoundVolume = other.UISoundVolume;
      }
      if (other.VoxSoundVolume.Length != 0) {
        VoxSoundVolume = other.VoxSoundVolume;
      }
      if (other.FightSoundVolume.Length != 0) {
        FightSoundVolume = other.FightSoundVolume;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MainSoundVolume = input.ReadString();
            break;
          }
          case 18: {
            MusicSoundVolume = input.ReadString();
            break;
          }
          case 26: {
            UISoundVolume = input.ReadString();
            break;
          }
          case 34: {
            VoxSoundVolume = input.ReadString();
            break;
          }
          case 42: {
            FightSoundVolume = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SoundGlobalParamConfig_Array : pb::IMessage<SoundGlobalParamConfig_Array> {
    private static readonly pb::MessageParser<SoundGlobalParamConfig_Array> _parser = new pb::MessageParser<SoundGlobalParamConfig_Array>(() => new SoundGlobalParamConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SoundGlobalParamConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansSoundglobalparamconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoundGlobalParamConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoundGlobalParamConfig_Array(SoundGlobalParamConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoundGlobalParamConfig_Array Clone() {
      return new SoundGlobalParamConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.SoundGlobalParamConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.SoundGlobalParamConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.SoundGlobalParamConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.SoundGlobalParamConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.SoundGlobalParamConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SoundGlobalParamConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SoundGlobalParamConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SoundGlobalParamConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
