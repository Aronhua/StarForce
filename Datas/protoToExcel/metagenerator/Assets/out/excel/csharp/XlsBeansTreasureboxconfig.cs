// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: xls_beans_treasureboxconfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pbeans {

  /// <summary>Holder for reflection information generated from xls_beans_treasureboxconfig.proto</summary>
  public static partial class XlsBeansTreasureboxconfigReflection {

    #region Descriptor
    /// <summary>File descriptor for xls_beans_treasureboxconfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlsBeansTreasureboxconfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiF4bHNfYmVhbnNfdHJlYXN1cmVib3hjb25maWcucHJvdG8SCkQxMS5QYmVh",
            "bnMitAEKEVRyZWFzdXJlQm94Q29uZmlnEgoKAmlkGAEgASgNEhEKCU1vZGVs",
            "TmFtZRgCIAEoCRINCgVNYXhIcBgDIAEoDRITCgtQaWNrdXBDb3VudBgEIAEo",
            "DRISCgpQaWNrdXBUeXBlGAUgASgNEhQKDFBpY2t1cFJhZGl1cxgGIAEoAhIO",
            "CgZJdGVtSUQYByADKA0SEQoJSXRlbVR5cGVzGAggAygNEg8KB0l0ZW1OdW0Y",
            "CSADKA0iRwoXVHJlYXN1cmVCb3hDb25maWdfQXJyYXkSLAoFaXRlbXMYASAD",
            "KAsyHS5EMTEuUGJlYW5zLlRyZWFzdXJlQm94Q29uZmlnYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.TreasureBoxConfig), global::D11.Pbeans.TreasureBoxConfig.Parser, new[]{ "Id", "ModelName", "MaxHp", "PickupCount", "PickupType", "PickupRadius", "ItemID", "ItemTypes", "ItemNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pbeans.TreasureBoxConfig_Array), global::D11.Pbeans.TreasureBoxConfig_Array.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TreasureBoxConfig : pb::IMessage<TreasureBoxConfig> {
    private static readonly pb::MessageParser<TreasureBoxConfig> _parser = new pb::MessageParser<TreasureBoxConfig>(() => new TreasureBoxConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TreasureBoxConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansTreasureboxconfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureBoxConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureBoxConfig(TreasureBoxConfig other) : this() {
      id_ = other.id_;
      modelName_ = other.modelName_;
      maxHp_ = other.maxHp_;
      pickupCount_ = other.pickupCount_;
      pickupType_ = other.pickupType_;
      pickupRadius_ = other.pickupRadius_;
      itemID_ = other.itemID_.Clone();
      itemTypes_ = other.itemTypes_.Clone();
      itemNum_ = other.itemNum_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureBoxConfig Clone() {
      return new TreasureBoxConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "ModelName" field.</summary>
    public const int ModelNameFieldNumber = 2;
    private string modelName_ = "";
    /// <summary>
    /// 模型名字 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaxHp" field.</summary>
    public const int MaxHpFieldNumber = 3;
    private uint maxHp_;
    /// <summary>
    /// 血量上限（血量为0开启） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxHp {
      get { return maxHp_; }
      set {
        maxHp_ = value;
      }
    }

    /// <summary>Field number for the "PickupCount" field.</summary>
    public const int PickupCountFieldNumber = 4;
    private uint pickupCount_;
    /// <summary>
    /// 拾取次数 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PickupCount {
      get { return pickupCount_; }
      set {
        pickupCount_ = value;
      }
    }

    /// <summary>Field number for the "PickupType" field.</summary>
    public const int PickupTypeFieldNumber = 5;
    private uint pickupType_;
    /// <summary>
    /// 拾取类型（1正常拾取 2 爆地拾取 3Pve随机宝箱） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PickupType {
      get { return pickupType_; }
      set {
        pickupType_ = value;
      }
    }

    /// <summary>Field number for the "PickupRadius" field.</summary>
    public const int PickupRadiusFieldNumber = 6;
    private float pickupRadius_;
    /// <summary>
    /// 拾取半径 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PickupRadius {
      get { return pickupRadius_; }
      set {
        pickupRadius_ = value;
      }
    }

    /// <summary>Field number for the "ItemID" field.</summary>
    public const int ItemIDFieldNumber = 7;
    private static readonly pb::FieldCodec<uint> _repeated_itemID_codec
        = pb::FieldCodec.ForUInt32(58);
    private readonly pbc::RepeatedField<uint> itemID_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 物品名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> ItemID {
      get { return itemID_; }
    }

    /// <summary>Field number for the "ItemTypes" field.</summary>
    public const int ItemTypesFieldNumber = 8;
    private static readonly pb::FieldCodec<uint> _repeated_itemTypes_codec
        = pb::FieldCodec.ForUInt32(66);
    private readonly pbc::RepeatedField<uint> itemTypes_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 物品类型（1 金币 2 武器 具体看策划） 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> ItemTypes {
      get { return itemTypes_; }
    }

    /// <summary>Field number for the "ItemNum" field.</summary>
    public const int ItemNumFieldNumber = 9;
    private static readonly pb::FieldCodec<uint> _repeated_itemNum_codec
        = pb::FieldCodec.ForUInt32(74);
    private readonly pbc::RepeatedField<uint> itemNum_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 物品数量 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> ItemNum {
      get { return itemNum_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TreasureBoxConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TreasureBoxConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ModelName != other.ModelName) return false;
      if (MaxHp != other.MaxHp) return false;
      if (PickupCount != other.PickupCount) return false;
      if (PickupType != other.PickupType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PickupRadius, other.PickupRadius)) return false;
      if(!itemID_.Equals(other.itemID_)) return false;
      if(!itemTypes_.Equals(other.itemTypes_)) return false;
      if(!itemNum_.Equals(other.itemNum_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (MaxHp != 0) hash ^= MaxHp.GetHashCode();
      if (PickupCount != 0) hash ^= PickupCount.GetHashCode();
      if (PickupType != 0) hash ^= PickupType.GetHashCode();
      if (PickupRadius != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PickupRadius);
      hash ^= itemID_.GetHashCode();
      hash ^= itemTypes_.GetHashCode();
      hash ^= itemNum_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelName);
      }
      if (MaxHp != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MaxHp);
      }
      if (PickupCount != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(PickupCount);
      }
      if (PickupType != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(PickupType);
      }
      if (PickupRadius != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(PickupRadius);
      }
      itemID_.WriteTo(output, _repeated_itemID_codec);
      itemTypes_.WriteTo(output, _repeated_itemTypes_codec);
      itemNum_.WriteTo(output, _repeated_itemNum_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (MaxHp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxHp);
      }
      if (PickupCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PickupCount);
      }
      if (PickupType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PickupType);
      }
      if (PickupRadius != 0F) {
        size += 1 + 4;
      }
      size += itemID_.CalculateSize(_repeated_itemID_codec);
      size += itemTypes_.CalculateSize(_repeated_itemTypes_codec);
      size += itemNum_.CalculateSize(_repeated_itemNum_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TreasureBoxConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.MaxHp != 0) {
        MaxHp = other.MaxHp;
      }
      if (other.PickupCount != 0) {
        PickupCount = other.PickupCount;
      }
      if (other.PickupType != 0) {
        PickupType = other.PickupType;
      }
      if (other.PickupRadius != 0F) {
        PickupRadius = other.PickupRadius;
      }
      itemID_.Add(other.itemID_);
      itemTypes_.Add(other.itemTypes_);
      itemNum_.Add(other.itemNum_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            ModelName = input.ReadString();
            break;
          }
          case 24: {
            MaxHp = input.ReadUInt32();
            break;
          }
          case 32: {
            PickupCount = input.ReadUInt32();
            break;
          }
          case 40: {
            PickupType = input.ReadUInt32();
            break;
          }
          case 53: {
            PickupRadius = input.ReadFloat();
            break;
          }
          case 58:
          case 56: {
            itemID_.AddEntriesFrom(input, _repeated_itemID_codec);
            break;
          }
          case 66:
          case 64: {
            itemTypes_.AddEntriesFrom(input, _repeated_itemTypes_codec);
            break;
          }
          case 74:
          case 72: {
            itemNum_.AddEntriesFrom(input, _repeated_itemNum_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TreasureBoxConfig_Array : pb::IMessage<TreasureBoxConfig_Array> {
    private static readonly pb::MessageParser<TreasureBoxConfig_Array> _parser = new pb::MessageParser<TreasureBoxConfig_Array>(() => new TreasureBoxConfig_Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TreasureBoxConfig_Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pbeans.XlsBeansTreasureboxconfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureBoxConfig_Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureBoxConfig_Array(TreasureBoxConfig_Array other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureBoxConfig_Array Clone() {
      return new TreasureBoxConfig_Array(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::D11.Pbeans.TreasureBoxConfig> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::D11.Pbeans.TreasureBoxConfig.Parser);
    private readonly pbc::RepeatedField<global::D11.Pbeans.TreasureBoxConfig> items_ = new pbc::RepeatedField<global::D11.Pbeans.TreasureBoxConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::D11.Pbeans.TreasureBoxConfig> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TreasureBoxConfig_Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TreasureBoxConfig_Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TreasureBoxConfig_Array other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
