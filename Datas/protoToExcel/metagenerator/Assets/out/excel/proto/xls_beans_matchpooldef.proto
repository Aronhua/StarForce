/**
* @file:   excel\MatchPoolDef.xlsx\MatchPoolDef
* @author: bommy
* @brief:  这个文件是通过工具自动生成的，建议不要手动修改
*/

syntax = "proto3";

package D11.Pbeans;

message MatchPoolDef{
	// poolid 
	uint32 id = 1;
	// 类型 
	uint32 type = 2;
	// 匹配池难度，值越大越难，用于多人组队等场景处理匹配池选择 
	uint32 matchDiffcult = 3;
	// 进入高优先级队列等待时间 
	uint32 priMatchWaitTime = 4;
	// 匹配类型（1：普通匹配 2排位） 
	string matchType = 5;
	// 匹配优先，time:时间优先，score:elo分数优先 
	string matchPri = 6;
	// elo结算规则[MatchSettlementEloParam表里面的id] 
	uint32 eloRuleId = 7;
	// 结算隐藏分类型，角色属性id: 6:排位elo,13:普通匹配隐藏分 
	uint32 eloSelement = 8;
	// 组队数差最大值 
	uint32 maxTeamCountDiff = 9;
	// 队伍隐藏分评分策略id[MatchScoreMainElo表里面的id] 
	MatchPoolDef_scoreStrategy scoreStrategy = 10;
	// 强制开始匹配最小队伍数（与匹配间隔配合，当人数到达限制后，即使没到匹配间隔也会开始匹配） 
	uint32 forceMatchTeamCount = 11;
	// 匹配间隔 
	uint32 matchInterval = 12;
	// 匹配超时时间（秒） 
	uint32 matchOverTime = 13;
	// 能够参与匹配的最短时间 
	uint32 minJoinMatchTime = 14;
	// 单局允许最大真人数 
	uint32 matchMaxPerson = 15;
	// 最小人数开局发起者等待时间(秒，不配置这一列表示关闭不满人组队功能) 
	repeated MatchPoolDef_minMode minMode = 16;
	// 最终人机局等待时（不配置表示没有最终人机局单位：秒） 
	uint32 forceMatchRobotTime = 17;
	// 匹配人机局的最高段位（超过该段位则不匹配AI，不配则没有限制） 
	uint32 forceMatchRobotMaxRankedLevel = 18;
	// 匹配成功后补AI补充到的人数 
	uint32 matchEndPerson = 19;
	// 第一个补位开局时间 
	repeated MatchPoolDef_battleFillRobot battleFillRobot = 20;
	// ai类型-1. robot 2.fakeMan 3.npc 
	uint32 AIType = 21;
	// 友方AI的难度(人机局的队友温暖局的队友机器人保底局的AI) 
	uint32 AISelfLevel = 22;
	// 敌方AI的难度(人机局的敌人温暖局的敌人) 
	uint32 AITargetLevel = 23;
	// 是否允许匹配中途加入 
	uint32 inGameJoin = 24;
	// 中途加入单局最长游戏时间 
	uint32 inGameJoinMaxDuration = 25;
	// 中途加入单局阵营最大分数 
	uint32 inGameJoinCampMaxScore = 26;
	// 玩家离开是否允许ai补位 
	uint32 inGameAISub = 27;
	// 匹配池禁止队伍人数加入 
	repeated MatchPoolDef_forbiddenTeamMem forbiddenTeamMem = 28;
}

message MatchPoolDef_scoreStrategy{
	// 队伍隐藏分评分策略id[MatchScoreMainElo表里面的id] 
	uint32 eloStrategyId = 1;
	// 队伍等级评分策略id[MatchScoreMainLvl表里面的id] 
	uint32 lvlStrategyId = 2;
	// 队伍段位分评分策略id[MatchScoreMainRankscore表里面的id] 
	uint32 rankScoreStrategyId = 3;
	// 队伍区域评分策略id[1代表考虑区域因子，不填则不考虑，评分规则在MatchScoreMainRegion表] 
	uint32 regionStrategyId = 4;
	// 队伍玩家标记评分策略[1代表考虑玩家标记，不填则不考虑，评分规则在MatchScoreSupLabel表] 
	uint32 labelStrategyId = 5;
	// 队伍武器手感评分策略[1代表考虑玩家标记，不填则不考虑，评分规则在MatchScoreSupLabel表] 
	uint32 weaponFeelStrategyId = 6;
}

message MatchPoolDef_minMode{
	// 最小人数开局发起者等待时间(秒，不配置这一列表示关闭不满人组队功能) 
	uint32 waitTime = 1;
	// 最小人数开局最小人数（必须和发起者等待时间一一对应，否则服务器会启动失败） 
	uint32 minPerson = 2;
}

message MatchPoolDef_battleFillRobot{
	// 第一个补位开局时间 
	uint32 battleTime = 1;
	// 开局后第一次补位时机补位到的人数 
	uint32 battlePerson = 2;
}

message MatchPoolDef_forbiddenTeamMem{
	// 匹配池禁止队伍人数加入 
	uint32 memberCount = 1;
}

message MatchPoolDef_Array {
	repeated MatchPoolDef items = 1;
}
