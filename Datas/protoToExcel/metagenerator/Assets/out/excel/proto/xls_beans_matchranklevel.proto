/**
* @file:   excel\MatchRankLevel.xlsx\MatchRankLevel
* @author: bommy
* @brief:  这个文件是通过工具自动生成的，建议不要手动修改
*/

syntax = "proto3";

package D11.Pbeans;

message MatchRankLevel{
	// key 
	uint32 id = 1;
	// 段位名称 
	string name = 2;
	// 大段位 
	uint32 grade = 3;
	// 小段位 
	uint32 gradeStar = 4;
	// 小段星星个数(纯客户端显示用) 
	uint32 gradeStarAmount = 5;
	// 星星对应分数（服务器下发分数参考） 
	uint32 gradeStarScore = 6;
	// 等级id（不同模式独立） 
	uint32 levelId = 7;
	// 模式 
	uint32 mode = 8;
	// 段位分（最低分） 
	uint32 rankScore = 9;
	// 段位百分比 
	float rankPercent = 10;
	// 段位小图标 
	uint32 smallIconId = 11;
	// 段位大图标 
	uint32 largeIconId = 12;
	// 模型名称 
	string modelAssetName = 13;
	// 段位晋升时播的timeline路径 
	string levelUpTimelineAssetPath = 14;
	// 段位保护，不掉段[1：生效] 
	uint32 gradeStarProtect = 15;
	// 段位分保护，不扣分[1：生效] 
	uint32 rankScoreProtect = 16;
	// 晋级要求胜场 
	uint32 succCond = 17;
	// 晋级赛总场次 
	uint32 promotionBattleCnt = 18;
	// 连败补偿触发条件（连败次数） 
	repeated MatchRankLevel_loseCompensation loseCompensation = 19;
	// 新段位基础分 
	uint32 newRankBaseScore = 20;
	// 差值折算系数 
	float convertParam = 21;
	// 组排最低段位 
	uint32 joinMinRankLevel = 22;
	// 组排最高段位 
	uint32 joinMaxRankLevel = 23;
}

message MatchRankLevel_loseCompensation{
	// 连败补偿触发条件（连败次数） 
	uint32 cond = 1;
	// 连败补偿内容(2=额外场，1=免费胜场) 
	uint32 award = 2;
}

message MatchRankLevel_Array {
	repeated MatchRankLevel items = 1;
}
