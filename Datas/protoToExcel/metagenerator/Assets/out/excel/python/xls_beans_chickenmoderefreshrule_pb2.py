# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: xls_beans_chickenmoderefreshrule.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='xls_beans_chickenmoderefreshrule.proto',
  package='D11.Pbeans',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n&xls_beans_chickenmoderefreshrule.proto\x12\nD11.Pbeans\"\x94\x01\n\x16\x43hickenModeRefreshRule\x12\n\n\x02id\x18\x01 \x01(\r\x12\x0c\n\x04Name\x18\x02 \x01(\t\x12\x14\n\x0cMaxWaveCount\x18\x03 \x01(\r\x12\n\n\x02\x43\x44\x18\x04 \x01(\r\x12\x15\n\rDefaultWaveID\x18\x05 \x01(\r\x12\x13\n\x0bWaveNumList\x18\x06 \x03(\r\x12\x12\n\nWaveIDList\x18\x07 \x03(\r\"Q\n\x1c\x43hickenModeRefreshRule_Array\x12\x31\n\x05items\x18\x01 \x03(\x0b\x32\".D11.Pbeans.ChickenModeRefreshRuleb\x06proto3')
)




_CHICKENMODEREFRESHRULE = _descriptor.Descriptor(
  name='ChickenModeRefreshRule',
  full_name='D11.Pbeans.ChickenModeRefreshRule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='D11.Pbeans.ChickenModeRefreshRule.id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='Name', full_name='D11.Pbeans.ChickenModeRefreshRule.Name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='MaxWaveCount', full_name='D11.Pbeans.ChickenModeRefreshRule.MaxWaveCount', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='CD', full_name='D11.Pbeans.ChickenModeRefreshRule.CD', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='DefaultWaveID', full_name='D11.Pbeans.ChickenModeRefreshRule.DefaultWaveID', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='WaveNumList', full_name='D11.Pbeans.ChickenModeRefreshRule.WaveNumList', index=5,
      number=6, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='WaveIDList', full_name='D11.Pbeans.ChickenModeRefreshRule.WaveIDList', index=6,
      number=7, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=55,
  serialized_end=203,
)


_CHICKENMODEREFRESHRULE_ARRAY = _descriptor.Descriptor(
  name='ChickenModeRefreshRule_Array',
  full_name='D11.Pbeans.ChickenModeRefreshRule_Array',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='D11.Pbeans.ChickenModeRefreshRule_Array.items', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=205,
  serialized_end=286,
)

_CHICKENMODEREFRESHRULE_ARRAY.fields_by_name['items'].message_type = _CHICKENMODEREFRESHRULE
DESCRIPTOR.message_types_by_name['ChickenModeRefreshRule'] = _CHICKENMODEREFRESHRULE
DESCRIPTOR.message_types_by_name['ChickenModeRefreshRule_Array'] = _CHICKENMODEREFRESHRULE_ARRAY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ChickenModeRefreshRule = _reflection.GeneratedProtocolMessageType('ChickenModeRefreshRule', (_message.Message,), {
  'DESCRIPTOR' : _CHICKENMODEREFRESHRULE,
  '__module__' : 'xls_beans_chickenmoderefreshrule_pb2'
  # @@protoc_insertion_point(class_scope:D11.Pbeans.ChickenModeRefreshRule)
  })
_sym_db.RegisterMessage(ChickenModeRefreshRule)

ChickenModeRefreshRule_Array = _reflection.GeneratedProtocolMessageType('ChickenModeRefreshRule_Array', (_message.Message,), {
  'DESCRIPTOR' : _CHICKENMODEREFRESHRULE_ARRAY,
  '__module__' : 'xls_beans_chickenmoderefreshrule_pb2'
  # @@protoc_insertion_point(class_scope:D11.Pbeans.ChickenModeRefreshRule_Array)
  })
_sym_db.RegisterMessage(ChickenModeRefreshRule_Array)


# @@protoc_insertion_point(module_scope)
