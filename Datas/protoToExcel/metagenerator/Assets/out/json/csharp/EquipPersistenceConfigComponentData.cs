// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: EquipPersistenceConfigComponentData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pjson {

  /// <summary>Holder for reflection information generated from EquipPersistenceConfigComponentData.proto</summary>
  public static partial class EquipPersistenceConfigComponentDataReflection {

    #region Descriptor
    /// <summary>File descriptor for EquipPersistenceConfigComponentData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EquipPersistenceConfigComponentDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilFcXVpcFBlcnNpc3RlbmNlQ29uZmlnQ29tcG9uZW50RGF0YS5wcm90bxIJ",
            "RDExLlBqc29uIpMBCiNFcXVpcFBlcnNpc3RlbmNlQ29uZmlnQ29tcG9uZW50",
            "RGF0YRITCgtFcXVpcEl0ZW1JRBgBIAEoDRIVCg1FcXVpcE5pY2tOYW1lGAIg",
            "ASgJEhMKC0NhbkRlYWREcm9wGAMgASgIEhEKCURyb3BBc3NldBgEIAEoCRIY",
            "ChBFcXVpcEhhbmdPblBvaW50GAUgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pjson.EquipPersistenceConfigComponentData), global::D11.Pjson.EquipPersistenceConfigComponentData.Parser, new[]{ "EquipItemID", "EquipNickName", "CanDeadDrop", "DropAsset", "EquipHangOnPoint" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EquipPersistenceConfigComponentData : pb::IMessage<EquipPersistenceConfigComponentData> {
    private static readonly pb::MessageParser<EquipPersistenceConfigComponentData> _parser = new pb::MessageParser<EquipPersistenceConfigComponentData>(() => new EquipPersistenceConfigComponentData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipPersistenceConfigComponentData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pjson.EquipPersistenceConfigComponentDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipPersistenceConfigComponentData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipPersistenceConfigComponentData(EquipPersistenceConfigComponentData other) : this() {
      equipItemID_ = other.equipItemID_;
      equipNickName_ = other.equipNickName_;
      canDeadDrop_ = other.canDeadDrop_;
      dropAsset_ = other.dropAsset_;
      equipHangOnPoint_ = other.equipHangOnPoint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipPersistenceConfigComponentData Clone() {
      return new EquipPersistenceConfigComponentData(this);
    }

    /// <summary>Field number for the "EquipItemID" field.</summary>
    public const int EquipItemIDFieldNumber = 1;
    private uint equipItemID_;
    /// <summary>
    /// 装备ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EquipItemID {
      get { return equipItemID_; }
      set {
        equipItemID_ = value;
      }
    }

    /// <summary>Field number for the "EquipNickName" field.</summary>
    public const int EquipNickNameFieldNumber = 2;
    private string equipNickName_ = "";
    /// <summary>
    /// 装备名字 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EquipNickName {
      get { return equipNickName_; }
      set {
        equipNickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CanDeadDrop" field.</summary>
    public const int CanDeadDropFieldNumber = 3;
    private bool canDeadDrop_;
    /// <summary>
    /// 死亡时是否可以掉落 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanDeadDrop {
      get { return canDeadDrop_; }
      set {
        canDeadDrop_ = value;
      }
    }

    /// <summary>Field number for the "DropAsset" field.</summary>
    public const int DropAssetFieldNumber = 4;
    private string dropAsset_ = "";
    /// <summary>
    /// 掉落资源名字 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DropAsset {
      get { return dropAsset_; }
      set {
        dropAsset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EquipHangOnPoint" field.</summary>
    public const int EquipHangOnPointFieldNumber = 5;
    private string equipHangOnPoint_ = "";
    /// <summary>
    /// 装备挂点 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EquipHangOnPoint {
      get { return equipHangOnPoint_; }
      set {
        equipHangOnPoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipPersistenceConfigComponentData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipPersistenceConfigComponentData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EquipItemID != other.EquipItemID) return false;
      if (EquipNickName != other.EquipNickName) return false;
      if (CanDeadDrop != other.CanDeadDrop) return false;
      if (DropAsset != other.DropAsset) return false;
      if (EquipHangOnPoint != other.EquipHangOnPoint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EquipItemID != 0) hash ^= EquipItemID.GetHashCode();
      if (EquipNickName.Length != 0) hash ^= EquipNickName.GetHashCode();
      if (CanDeadDrop != false) hash ^= CanDeadDrop.GetHashCode();
      if (DropAsset.Length != 0) hash ^= DropAsset.GetHashCode();
      if (EquipHangOnPoint.Length != 0) hash ^= EquipHangOnPoint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EquipItemID != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(EquipItemID);
      }
      if (EquipNickName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EquipNickName);
      }
      if (CanDeadDrop != false) {
        output.WriteRawTag(24);
        output.WriteBool(CanDeadDrop);
      }
      if (DropAsset.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DropAsset);
      }
      if (EquipHangOnPoint.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EquipHangOnPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EquipItemID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EquipItemID);
      }
      if (EquipNickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EquipNickName);
      }
      if (CanDeadDrop != false) {
        size += 1 + 1;
      }
      if (DropAsset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DropAsset);
      }
      if (EquipHangOnPoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EquipHangOnPoint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipPersistenceConfigComponentData other) {
      if (other == null) {
        return;
      }
      if (other.EquipItemID != 0) {
        EquipItemID = other.EquipItemID;
      }
      if (other.EquipNickName.Length != 0) {
        EquipNickName = other.EquipNickName;
      }
      if (other.CanDeadDrop != false) {
        CanDeadDrop = other.CanDeadDrop;
      }
      if (other.DropAsset.Length != 0) {
        DropAsset = other.DropAsset;
      }
      if (other.EquipHangOnPoint.Length != 0) {
        EquipHangOnPoint = other.EquipHangOnPoint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EquipItemID = input.ReadUInt32();
            break;
          }
          case 18: {
            EquipNickName = input.ReadString();
            break;
          }
          case 24: {
            CanDeadDrop = input.ReadBool();
            break;
          }
          case 34: {
            DropAsset = input.ReadString();
            break;
          }
          case 42: {
            EquipHangOnPoint = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
