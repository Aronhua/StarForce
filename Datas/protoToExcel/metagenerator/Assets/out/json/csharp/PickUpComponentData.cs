// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PickUpComponentData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pjson {

  /// <summary>Holder for reflection information generated from PickUpComponentData.proto</summary>
  public static partial class PickUpComponentDataReflection {

    #region Descriptor
    /// <summary>File descriptor for PickUpComponentData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PickUpComponentDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQaWNrVXBDb21wb25lbnREYXRhLnByb3RvEglEMTEuUGpzb24iSwoTUGlj",
            "a1VwQ29tcG9uZW50RGF0YRIKCgJJZBgBIAEoDRIVCg1GdW5jdGlvbkNvdW50",
            "GAIgASgFEhEKCUFzc2V0TmFtZRgDIAEoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pjson.PickUpComponentData), global::D11.Pjson.PickUpComponentData.Parser, new[]{ "Id", "FunctionCount", "AssetName" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PickUpComponentData : pb::IMessage<PickUpComponentData> {
    private static readonly pb::MessageParser<PickUpComponentData> _parser = new pb::MessageParser<PickUpComponentData>(() => new PickUpComponentData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PickUpComponentData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pjson.PickUpComponentDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PickUpComponentData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PickUpComponentData(PickUpComponentData other) : this() {
      id_ = other.id_;
      functionCount_ = other.functionCount_;
      assetName_ = other.assetName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PickUpComponentData Clone() {
      return new PickUpComponentData(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// 种类id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "FunctionCount" field.</summary>
    public const int FunctionCountFieldNumber = 2;
    private int functionCount_;
    /// <summary>
    /// 功能数量 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FunctionCount {
      get { return functionCount_; }
      set {
        functionCount_ = value;
      }
    }

    /// <summary>Field number for the "AssetName" field.</summary>
    public const int AssetNameFieldNumber = 3;
    private string assetName_ = "";
    /// <summary>
    /// 资源名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetName {
      get { return assetName_; }
      set {
        assetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PickUpComponentData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PickUpComponentData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FunctionCount != other.FunctionCount) return false;
      if (AssetName != other.AssetName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (FunctionCount != 0) hash ^= FunctionCount.GetHashCode();
      if (AssetName.Length != 0) hash ^= AssetName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (FunctionCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FunctionCount);
      }
      if (AssetName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AssetName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (FunctionCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FunctionCount);
      }
      if (AssetName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PickUpComponentData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.FunctionCount != 0) {
        FunctionCount = other.FunctionCount;
      }
      if (other.AssetName.Length != 0) {
        AssetName = other.AssetName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            FunctionCount = input.ReadInt32();
            break;
          }
          case 26: {
            AssetName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
