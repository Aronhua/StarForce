// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WeaponAdditionFireLogicGrenadeScanData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pjson {

  /// <summary>Holder for reflection information generated from WeaponAdditionFireLogicGrenadeScanData.proto</summary>
  public static partial class WeaponAdditionFireLogicGrenadeScanDataReflection {

    #region Descriptor
    /// <summary>File descriptor for WeaponAdditionFireLogicGrenadeScanData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WeaponAdditionFireLogicGrenadeScanDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CixXZWFwb25BZGRpdGlvbkZpcmVMb2dpY0dyZW5hZGVTY2FuRGF0YS5wcm90",
            "bxIJRDExLlBqc29uIosDCiZXZWFwb25BZGRpdGlvbkZpcmVMb2dpY0dyZW5h",
            "ZGVTY2FuRGF0YRIQCghJc0JvdW5jZRgBIAEoCBIKCgJIcBgCIAEoAhIgChhH",
            "cmVuYWRlU2NhbkxvZ2ljTGlmZVRpbWUYAyABKAISIQoZR3JlbmFkZVNjYW5E",
            "YW1hZ2VUaWNrVGltZRgEIAEoAhIZChFHcmVuYWRlU2NhbkJ1ZmZJZBgFIAEo",
            "DRIYChBNYXBFeHBvc2VkQnVmZklkGAYgASgNEhIKClNjYW5SYWRpdXMYByAB",
            "KAISIAoYUGxheVNlYXJjaEF1ZGlvRXZlbnROYW1lGAggASgJEiAKGFN0b3BT",
            "ZWFyY2hBdWRpb0V2ZW50TmFtZRgJIAEoCRIeChZQbGF5QmVlcEF1ZGlvRXZl",
            "bnROYW1lGAogASgJEh4KFlN0b3BCZWVwQXVkaW9FdmVudE5hbWUYCyABKAkS",
            "FwoPU2VhcmNoU3BhY2VUaW1lGAwgASgCEhgKEFNlYXJjaFNwYWNlQ291bnQY",
            "DSABKAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pjson.WeaponAdditionFireLogicGrenadeScanData), global::D11.Pjson.WeaponAdditionFireLogicGrenadeScanData.Parser, new[]{ "IsBounce", "Hp", "GrenadeScanLogicLifeTime", "GrenadeScanDamageTickTime", "GrenadeScanBuffId", "MapExposedBuffId", "ScanRadius", "PlaySearchAudioEventName", "StopSearchAudioEventName", "PlayBeepAudioEventName", "StopBeepAudioEventName", "SearchSpaceTime", "SearchSpaceCount" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class WeaponAdditionFireLogicGrenadeScanData : pb::IMessage<WeaponAdditionFireLogicGrenadeScanData> {
    private static readonly pb::MessageParser<WeaponAdditionFireLogicGrenadeScanData> _parser = new pb::MessageParser<WeaponAdditionFireLogicGrenadeScanData>(() => new WeaponAdditionFireLogicGrenadeScanData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WeaponAdditionFireLogicGrenadeScanData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pjson.WeaponAdditionFireLogicGrenadeScanDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeaponAdditionFireLogicGrenadeScanData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeaponAdditionFireLogicGrenadeScanData(WeaponAdditionFireLogicGrenadeScanData other) : this() {
      isBounce_ = other.isBounce_;
      hp_ = other.hp_;
      grenadeScanLogicLifeTime_ = other.grenadeScanLogicLifeTime_;
      grenadeScanDamageTickTime_ = other.grenadeScanDamageTickTime_;
      grenadeScanBuffId_ = other.grenadeScanBuffId_;
      mapExposedBuffId_ = other.mapExposedBuffId_;
      scanRadius_ = other.scanRadius_;
      playSearchAudioEventName_ = other.playSearchAudioEventName_;
      stopSearchAudioEventName_ = other.stopSearchAudioEventName_;
      playBeepAudioEventName_ = other.playBeepAudioEventName_;
      stopBeepAudioEventName_ = other.stopBeepAudioEventName_;
      searchSpaceTime_ = other.searchSpaceTime_;
      searchSpaceCount_ = other.searchSpaceCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeaponAdditionFireLogicGrenadeScanData Clone() {
      return new WeaponAdditionFireLogicGrenadeScanData(this);
    }

    /// <summary>Field number for the "IsBounce" field.</summary>
    public const int IsBounceFieldNumber = 1;
    private bool isBounce_;
    /// <summary>
    /// 是否反弹落点扫描 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBounce {
      get { return isBounce_; }
      set {
        isBounce_ = value;
      }
    }

    /// <summary>Field number for the "Hp" field.</summary>
    public const int HpFieldNumber = 2;
    private float hp_;
    /// <summary>
    /// 血量 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "GrenadeScanLogicLifeTime" field.</summary>
    public const int GrenadeScanLogicLifeTimeFieldNumber = 3;
    private float grenadeScanLogicLifeTime_;
    /// <summary>
    /// GrenadeScanLogicLifeTime 持续时间,如扫描持续时间 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float GrenadeScanLogicLifeTime {
      get { return grenadeScanLogicLifeTime_; }
      set {
        grenadeScanLogicLifeTime_ = value;
      }
    }

    /// <summary>Field number for the "GrenadeScanDamageTickTime" field.</summary>
    public const int GrenadeScanDamageTickTimeFieldNumber = 4;
    private float grenadeScanDamageTickTime_;
    /// <summary>
    /// 扫描间隔时间 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float GrenadeScanDamageTickTime {
      get { return grenadeScanDamageTickTime_; }
      set {
        grenadeScanDamageTickTime_ = value;
      }
    }

    /// <summary>Field number for the "GrenadeScanBuffId" field.</summary>
    public const int GrenadeScanBuffIdFieldNumber = 5;
    private uint grenadeScanBuffId_;
    /// <summary>
    /// 扫描buff id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GrenadeScanBuffId {
      get { return grenadeScanBuffId_; }
      set {
        grenadeScanBuffId_ = value;
      }
    }

    /// <summary>Field number for the "MapExposedBuffId" field.</summary>
    public const int MapExposedBuffIdFieldNumber = 6;
    private uint mapExposedBuffId_;
    /// <summary>
    /// 被扫描后小地图暴露buff id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MapExposedBuffId {
      get { return mapExposedBuffId_; }
      set {
        mapExposedBuffId_ = value;
      }
    }

    /// <summary>Field number for the "ScanRadius" field.</summary>
    public const int ScanRadiusFieldNumber = 7;
    private float scanRadius_;
    /// <summary>
    /// 扫描半径 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ScanRadius {
      get { return scanRadius_; }
      set {
        scanRadius_ = value;
      }
    }

    /// <summary>Field number for the "PlaySearchAudioEventName" field.</summary>
    public const int PlaySearchAudioEventNameFieldNumber = 8;
    private string playSearchAudioEventName_ = "";
    /// <summary>
    /// 播放弧形音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlaySearchAudioEventName {
      get { return playSearchAudioEventName_; }
      set {
        playSearchAudioEventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StopSearchAudioEventName" field.</summary>
    public const int StopSearchAudioEventNameFieldNumber = 9;
    private string stopSearchAudioEventName_ = "";
    /// <summary>
    /// 停止弧形音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StopSearchAudioEventName {
      get { return stopSearchAudioEventName_; }
      set {
        stopSearchAudioEventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PlayBeepAudioEventName" field.</summary>
    public const int PlayBeepAudioEventNameFieldNumber = 10;
    private string playBeepAudioEventName_ = "";
    /// <summary>
    /// 播放放置音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayBeepAudioEventName {
      get { return playBeepAudioEventName_; }
      set {
        playBeepAudioEventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StopBeepAudioEventName" field.</summary>
    public const int StopBeepAudioEventNameFieldNumber = 11;
    private string stopBeepAudioEventName_ = "";
    /// <summary>
    /// 停止放置音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StopBeepAudioEventName {
      get { return stopBeepAudioEventName_; }
      set {
        stopBeepAudioEventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SearchSpaceTime" field.</summary>
    public const int SearchSpaceTimeFieldNumber = 12;
    private float searchSpaceTime_;
    /// <summary>
    /// 弧形扩散时间间隔 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SearchSpaceTime {
      get { return searchSpaceTime_; }
      set {
        searchSpaceTime_ = value;
      }
    }

    /// <summary>Field number for the "SearchSpaceCount" field.</summary>
    public const int SearchSpaceCountFieldNumber = 13;
    private int searchSpaceCount_;
    /// <summary>
    /// 弧形搜索次数 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SearchSpaceCount {
      get { return searchSpaceCount_; }
      set {
        searchSpaceCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WeaponAdditionFireLogicGrenadeScanData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WeaponAdditionFireLogicGrenadeScanData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsBounce != other.IsBounce) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Hp, other.Hp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GrenadeScanLogicLifeTime, other.GrenadeScanLogicLifeTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GrenadeScanDamageTickTime, other.GrenadeScanDamageTickTime)) return false;
      if (GrenadeScanBuffId != other.GrenadeScanBuffId) return false;
      if (MapExposedBuffId != other.MapExposedBuffId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ScanRadius, other.ScanRadius)) return false;
      if (PlaySearchAudioEventName != other.PlaySearchAudioEventName) return false;
      if (StopSearchAudioEventName != other.StopSearchAudioEventName) return false;
      if (PlayBeepAudioEventName != other.PlayBeepAudioEventName) return false;
      if (StopBeepAudioEventName != other.StopBeepAudioEventName) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SearchSpaceTime, other.SearchSpaceTime)) return false;
      if (SearchSpaceCount != other.SearchSpaceCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsBounce != false) hash ^= IsBounce.GetHashCode();
      if (Hp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Hp);
      if (GrenadeScanLogicLifeTime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GrenadeScanLogicLifeTime);
      if (GrenadeScanDamageTickTime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GrenadeScanDamageTickTime);
      if (GrenadeScanBuffId != 0) hash ^= GrenadeScanBuffId.GetHashCode();
      if (MapExposedBuffId != 0) hash ^= MapExposedBuffId.GetHashCode();
      if (ScanRadius != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ScanRadius);
      if (PlaySearchAudioEventName.Length != 0) hash ^= PlaySearchAudioEventName.GetHashCode();
      if (StopSearchAudioEventName.Length != 0) hash ^= StopSearchAudioEventName.GetHashCode();
      if (PlayBeepAudioEventName.Length != 0) hash ^= PlayBeepAudioEventName.GetHashCode();
      if (StopBeepAudioEventName.Length != 0) hash ^= StopBeepAudioEventName.GetHashCode();
      if (SearchSpaceTime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SearchSpaceTime);
      if (SearchSpaceCount != 0) hash ^= SearchSpaceCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsBounce != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsBounce);
      }
      if (Hp != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Hp);
      }
      if (GrenadeScanLogicLifeTime != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(GrenadeScanLogicLifeTime);
      }
      if (GrenadeScanDamageTickTime != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(GrenadeScanDamageTickTime);
      }
      if (GrenadeScanBuffId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(GrenadeScanBuffId);
      }
      if (MapExposedBuffId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MapExposedBuffId);
      }
      if (ScanRadius != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(ScanRadius);
      }
      if (PlaySearchAudioEventName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PlaySearchAudioEventName);
      }
      if (StopSearchAudioEventName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(StopSearchAudioEventName);
      }
      if (PlayBeepAudioEventName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(PlayBeepAudioEventName);
      }
      if (StopBeepAudioEventName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(StopBeepAudioEventName);
      }
      if (SearchSpaceTime != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(SearchSpaceTime);
      }
      if (SearchSpaceCount != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(SearchSpaceCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsBounce != false) {
        size += 1 + 1;
      }
      if (Hp != 0F) {
        size += 1 + 4;
      }
      if (GrenadeScanLogicLifeTime != 0F) {
        size += 1 + 4;
      }
      if (GrenadeScanDamageTickTime != 0F) {
        size += 1 + 4;
      }
      if (GrenadeScanBuffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GrenadeScanBuffId);
      }
      if (MapExposedBuffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MapExposedBuffId);
      }
      if (ScanRadius != 0F) {
        size += 1 + 4;
      }
      if (PlaySearchAudioEventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlaySearchAudioEventName);
      }
      if (StopSearchAudioEventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StopSearchAudioEventName);
      }
      if (PlayBeepAudioEventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayBeepAudioEventName);
      }
      if (StopBeepAudioEventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StopBeepAudioEventName);
      }
      if (SearchSpaceTime != 0F) {
        size += 1 + 4;
      }
      if (SearchSpaceCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SearchSpaceCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WeaponAdditionFireLogicGrenadeScanData other) {
      if (other == null) {
        return;
      }
      if (other.IsBounce != false) {
        IsBounce = other.IsBounce;
      }
      if (other.Hp != 0F) {
        Hp = other.Hp;
      }
      if (other.GrenadeScanLogicLifeTime != 0F) {
        GrenadeScanLogicLifeTime = other.GrenadeScanLogicLifeTime;
      }
      if (other.GrenadeScanDamageTickTime != 0F) {
        GrenadeScanDamageTickTime = other.GrenadeScanDamageTickTime;
      }
      if (other.GrenadeScanBuffId != 0) {
        GrenadeScanBuffId = other.GrenadeScanBuffId;
      }
      if (other.MapExposedBuffId != 0) {
        MapExposedBuffId = other.MapExposedBuffId;
      }
      if (other.ScanRadius != 0F) {
        ScanRadius = other.ScanRadius;
      }
      if (other.PlaySearchAudioEventName.Length != 0) {
        PlaySearchAudioEventName = other.PlaySearchAudioEventName;
      }
      if (other.StopSearchAudioEventName.Length != 0) {
        StopSearchAudioEventName = other.StopSearchAudioEventName;
      }
      if (other.PlayBeepAudioEventName.Length != 0) {
        PlayBeepAudioEventName = other.PlayBeepAudioEventName;
      }
      if (other.StopBeepAudioEventName.Length != 0) {
        StopBeepAudioEventName = other.StopBeepAudioEventName;
      }
      if (other.SearchSpaceTime != 0F) {
        SearchSpaceTime = other.SearchSpaceTime;
      }
      if (other.SearchSpaceCount != 0) {
        SearchSpaceCount = other.SearchSpaceCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsBounce = input.ReadBool();
            break;
          }
          case 21: {
            Hp = input.ReadFloat();
            break;
          }
          case 29: {
            GrenadeScanLogicLifeTime = input.ReadFloat();
            break;
          }
          case 37: {
            GrenadeScanDamageTickTime = input.ReadFloat();
            break;
          }
          case 40: {
            GrenadeScanBuffId = input.ReadUInt32();
            break;
          }
          case 48: {
            MapExposedBuffId = input.ReadUInt32();
            break;
          }
          case 61: {
            ScanRadius = input.ReadFloat();
            break;
          }
          case 66: {
            PlaySearchAudioEventName = input.ReadString();
            break;
          }
          case 74: {
            StopSearchAudioEventName = input.ReadString();
            break;
          }
          case 82: {
            PlayBeepAudioEventName = input.ReadString();
            break;
          }
          case 90: {
            StopBeepAudioEventName = input.ReadString();
            break;
          }
          case 101: {
            SearchSpaceTime = input.ReadFloat();
            break;
          }
          case 104: {
            SearchSpaceCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
