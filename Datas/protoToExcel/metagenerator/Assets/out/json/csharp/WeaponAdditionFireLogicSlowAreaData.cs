// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WeaponAdditionFireLogicSlowAreaData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pjson {

  /// <summary>Holder for reflection information generated from WeaponAdditionFireLogicSlowAreaData.proto</summary>
  public static partial class WeaponAdditionFireLogicSlowAreaDataReflection {

    #region Descriptor
    /// <summary>File descriptor for WeaponAdditionFireLogicSlowAreaData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WeaponAdditionFireLogicSlowAreaDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilXZWFwb25BZGRpdGlvbkZpcmVMb2dpY1Nsb3dBcmVhRGF0YS5wcm90bxIJ",
            "RDExLlBqc29uIkwKI1dlYXBvbkFkZGl0aW9uRmlyZUxvZ2ljU2xvd0FyZWFE",
            "YXRhEg4KBlJhZGl1cxgBIAEoAhIVCg1Nb3ZlU3BlZWRSYXRlGAIgASgCYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pjson.WeaponAdditionFireLogicSlowAreaData), global::D11.Pjson.WeaponAdditionFireLogicSlowAreaData.Parser, new[]{ "Radius", "MoveSpeedRate" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class WeaponAdditionFireLogicSlowAreaData : pb::IMessage<WeaponAdditionFireLogicSlowAreaData> {
    private static readonly pb::MessageParser<WeaponAdditionFireLogicSlowAreaData> _parser = new pb::MessageParser<WeaponAdditionFireLogicSlowAreaData>(() => new WeaponAdditionFireLogicSlowAreaData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WeaponAdditionFireLogicSlowAreaData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pjson.WeaponAdditionFireLogicSlowAreaDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeaponAdditionFireLogicSlowAreaData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeaponAdditionFireLogicSlowAreaData(WeaponAdditionFireLogicSlowAreaData other) : this() {
      radius_ = other.radius_;
      moveSpeedRate_ = other.moveSpeedRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeaponAdditionFireLogicSlowAreaData Clone() {
      return new WeaponAdditionFireLogicSlowAreaData(this);
    }

    /// <summary>Field number for the "Radius" field.</summary>
    public const int RadiusFieldNumber = 1;
    private float radius_;
    /// <summary>
    /// 半径 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Radius {
      get { return radius_; }
      set {
        radius_ = value;
      }
    }

    /// <summary>Field number for the "MoveSpeedRate" field.</summary>
    public const int MoveSpeedRateFieldNumber = 2;
    private float moveSpeedRate_;
    /// <summary>
    /// 移动速度系数 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MoveSpeedRate {
      get { return moveSpeedRate_; }
      set {
        moveSpeedRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WeaponAdditionFireLogicSlowAreaData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WeaponAdditionFireLogicSlowAreaData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Radius, other.Radius)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MoveSpeedRate, other.MoveSpeedRate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Radius != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Radius);
      if (MoveSpeedRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MoveSpeedRate);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Radius != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Radius);
      }
      if (MoveSpeedRate != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(MoveSpeedRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Radius != 0F) {
        size += 1 + 4;
      }
      if (MoveSpeedRate != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WeaponAdditionFireLogicSlowAreaData other) {
      if (other == null) {
        return;
      }
      if (other.Radius != 0F) {
        Radius = other.Radius;
      }
      if (other.MoveSpeedRate != 0F) {
        MoveSpeedRate = other.MoveSpeedRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Radius = input.ReadFloat();
            break;
          }
          case 21: {
            MoveSpeedRate = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
