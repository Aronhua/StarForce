// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WeaponHitSceneDecalComponentData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pjson {

  /// <summary>Holder for reflection information generated from WeaponHitSceneDecalComponentData.proto</summary>
  public static partial class WeaponHitSceneDecalComponentDataReflection {

    #region Descriptor
    /// <summary>File descriptor for WeaponHitSceneDecalComponentData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WeaponHitSceneDecalComponentDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZXZWFwb25IaXRTY2VuZURlY2FsQ29tcG9uZW50RGF0YS5wcm90bxIJRDEx",
            "LlBqc29uIqULCiBXZWFwb25IaXRTY2VuZURlY2FsQ29tcG9uZW50RGF0YRIU",
            "CgxEZWZhdWx0RGVjYWwYASABKAUSEgoKRWFydGhEZWNhbBgCIAMoBRISCgpN",
            "ZXRhbERlY2FsGAMgAygFEhEKCVdvb2REZWNhbBgEIAMoBRISCgpTdG9uZURl",
            "Y2FsGAUgAygFEhMKC0ZhYnJpY0RlY2FsGAYgAygFEhIKCkdsYXNzRGVjYWwY",
            "ByADKAUSEAoIT2lsRGVjYWwYCCADKAUSEQoJUGF3bkRlY2FsGAkgAygFEhEK",
            "CUxlYWZEZWNhbBgKIAMoBRIUCgxQbGFzdGljRGVjYWwYCyADKAUSEwoLUnVi",
            "ZWVyRGVjYWwYDCADKAUSEQoJU2FuZERlY2FsGA0gAygFEhMKC0NlbWVudERl",
            "Y2FsGA4gAygFEhYKDkhpdEVhcnRoRWZmZWN0GA8gASgFEhYKDkhpdE1ldGFs",
            "RWZmZWN0GBAgASgFEhUKDUhpdFdvb2RFZmZlY3QYESABKAUSFgoOSGl0U3Rv",
            "bmVFZmZlY3QYEiABKAUSFwoPSGl0RmFicmljRWZmZWN0GBMgASgFEhYKDkhp",
            "dEdsYXNzRWZmZWN0GBQgASgFEhQKDEhpdE9pbEVmZmVjdBgVIAEoBRIVCg1I",
            "aXRQYXduRWZmZWN0GBYgASgFEhUKDUhpdExlYWZFZmZlY3QYFyABKAUSGAoQ",
            "SGl0UGxhc3RpY0VmZmVjdBgYIAEoBRIXCg9IaXRSdWJlZXJFZmZlY3QYGSAB",
            "KAUSFQoNSGl0U2FuZEVmZmVjdBgaIAEoBRIXCg9IaXRDZW1lbnRFZmZlY3QY",
            "GyABKAUSFwoPTWVsZWVIaXRTb3VuZEZQGBwgASgJEhcKD01lbGVlSGl0U291",
            "bmRUUBgdIAEoCRIUCgxIaXRXYWxsU291bmQYHiABKAkSFgoOQm9keUhpdFNv",
            "dW5kMVAYHyABKAkSFgoOSGVhZEhpdFNvdW5kMVAYICABKAkSHAoUU2hpZWxk",
            "Qm9keUhpdFNvdW5kMVAYISABKAkSHAoUU2hpZWxkSGVhZEhpdFNvdW5kMVAY",
            "IiABKAkSFgoOQm9keUhpdFNvdW5kM1AYIyABKAkSFgoOSGVhZEhpdFNvdW5k",
            "M1AYJCABKAkSGAoQU2hpZWxkSGl0U291bmQzUBglIAEoCRIVCg1EYW1hZ2Vk",
            "RWZmZWN0GCYgASgFEhkKEURhbWFnZWRIZWFkRWZmZWN0GCcgASgFEh4KFkRh",
            "bWFnZWRFeHBsb3Npb25FZmZlY3QYKCABKAUSGwoTRGFtYWdlZEhlbG1ldEVm",
            "ZmVjdBgpIAEoBRIUCgxEYW1hZ2VkRGVjYWwYKiADKAUSGQoRRGFtYWdlZERl",
            "Y2FsTGVnYWwYKyADKAUSFwoPRGFtYWdlZERlY2FsTG93GCwgASgFEhgKEFRw",
            "RGVhZEF1ZGlvRXZlbnQYLSABKAkSFAoMVHBEZWFkRWZmZWN0GC4gASgNEhsK",
            "E1RwRGVhZFJhZ0RvbGxFbmFibGUYLyABKAgSHgoWVHBEZWFkRWZmZWN0VHlw",
            "ZU9uQm9keRgwIAEoBRITCgtTa2luS2lsbFZGWBgxIAEoBRIVCg1Ta2luS2ls",
            "bEF1ZGlvGDIgASgJEhkKEVNraW5LaWxsQWxsb3dBbmltGDMgASgIEhcKD1Nr",
            "aW5MYXN0S2lsbFZGWBg0IAEoBRIZChFTa2luTGFzdEtpbGxBdWRpbxg1IAEo",
            "CRIdChVTa2luTGFzdEtpbGxBbGxvd0FuaW0YNiABKAgSJAocU2tpbkxhc3RL",
            "aWxsQ2FtZXJhU2hha2VBc3NldBg3IAEoCRIpCiFTa2luTGFzdEtpbGxDYW1l",
            "cmFTaGFrZURlbGF5VGltZXMYOCABKAISIgoaU2tpbkxhc3RLaWxsQW1wbGl0",
            "dWRlUmFuZ2UYOSABKAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pjson.WeaponHitSceneDecalComponentData), global::D11.Pjson.WeaponHitSceneDecalComponentData.Parser, new[]{ "DefaultDecal", "EarthDecal", "MetalDecal", "WoodDecal", "StoneDecal", "FabricDecal", "GlassDecal", "OilDecal", "PawnDecal", "LeafDecal", "PlasticDecal", "RubeerDecal", "SandDecal", "CementDecal", "HitEarthEffect", "HitMetalEffect", "HitWoodEffect", "HitStoneEffect", "HitFabricEffect", "HitGlassEffect", "HitOilEffect", "HitPawnEffect", "HitLeafEffect", "HitPlasticEffect", "HitRubeerEffect", "HitSandEffect", "HitCementEffect", "MeleeHitSoundFP", "MeleeHitSoundTP", "HitWallSound", "BodyHitSound1P", "HeadHitSound1P", "ShieldBodyHitSound1P", "ShieldHeadHitSound1P", "BodyHitSound3P", "HeadHitSound3P", "ShieldHitSound3P", "DamagedEffect", "DamagedHeadEffect", "DamagedExplosionEffect", "DamagedHelmetEffect", "DamagedDecal", "DamagedDecalLegal", "DamagedDecalLow", "TpDeadAudioEvent", "TpDeadEffect", "TpDeadRagDollEnable", "TpDeadEffectTypeOnBody", "SkinKillVFX", "SkinKillAudio", "SkinKillAllowAnim", "SkinLastKillVFX", "SkinLastKillAudio", "SkinLastKillAllowAnim", "SkinLastKillCameraShakeAsset", "SkinLastKillCameraShakeDelayTimes", "SkinLastKillAmplitudeRange" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class WeaponHitSceneDecalComponentData : pb::IMessage<WeaponHitSceneDecalComponentData> {
    private static readonly pb::MessageParser<WeaponHitSceneDecalComponentData> _parser = new pb::MessageParser<WeaponHitSceneDecalComponentData>(() => new WeaponHitSceneDecalComponentData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WeaponHitSceneDecalComponentData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pjson.WeaponHitSceneDecalComponentDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeaponHitSceneDecalComponentData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeaponHitSceneDecalComponentData(WeaponHitSceneDecalComponentData other) : this() {
      defaultDecal_ = other.defaultDecal_;
      earthDecal_ = other.earthDecal_.Clone();
      metalDecal_ = other.metalDecal_.Clone();
      woodDecal_ = other.woodDecal_.Clone();
      stoneDecal_ = other.stoneDecal_.Clone();
      fabricDecal_ = other.fabricDecal_.Clone();
      glassDecal_ = other.glassDecal_.Clone();
      oilDecal_ = other.oilDecal_.Clone();
      pawnDecal_ = other.pawnDecal_.Clone();
      leafDecal_ = other.leafDecal_.Clone();
      plasticDecal_ = other.plasticDecal_.Clone();
      rubeerDecal_ = other.rubeerDecal_.Clone();
      sandDecal_ = other.sandDecal_.Clone();
      cementDecal_ = other.cementDecal_.Clone();
      hitEarthEffect_ = other.hitEarthEffect_;
      hitMetalEffect_ = other.hitMetalEffect_;
      hitWoodEffect_ = other.hitWoodEffect_;
      hitStoneEffect_ = other.hitStoneEffect_;
      hitFabricEffect_ = other.hitFabricEffect_;
      hitGlassEffect_ = other.hitGlassEffect_;
      hitOilEffect_ = other.hitOilEffect_;
      hitPawnEffect_ = other.hitPawnEffect_;
      hitLeafEffect_ = other.hitLeafEffect_;
      hitPlasticEffect_ = other.hitPlasticEffect_;
      hitRubeerEffect_ = other.hitRubeerEffect_;
      hitSandEffect_ = other.hitSandEffect_;
      hitCementEffect_ = other.hitCementEffect_;
      meleeHitSoundFP_ = other.meleeHitSoundFP_;
      meleeHitSoundTP_ = other.meleeHitSoundTP_;
      hitWallSound_ = other.hitWallSound_;
      bodyHitSound1P_ = other.bodyHitSound1P_;
      headHitSound1P_ = other.headHitSound1P_;
      shieldBodyHitSound1P_ = other.shieldBodyHitSound1P_;
      shieldHeadHitSound1P_ = other.shieldHeadHitSound1P_;
      bodyHitSound3P_ = other.bodyHitSound3P_;
      headHitSound3P_ = other.headHitSound3P_;
      shieldHitSound3P_ = other.shieldHitSound3P_;
      damagedEffect_ = other.damagedEffect_;
      damagedHeadEffect_ = other.damagedHeadEffect_;
      damagedExplosionEffect_ = other.damagedExplosionEffect_;
      damagedHelmetEffect_ = other.damagedHelmetEffect_;
      damagedDecal_ = other.damagedDecal_.Clone();
      damagedDecalLegal_ = other.damagedDecalLegal_.Clone();
      damagedDecalLow_ = other.damagedDecalLow_;
      tpDeadAudioEvent_ = other.tpDeadAudioEvent_;
      tpDeadEffect_ = other.tpDeadEffect_;
      tpDeadRagDollEnable_ = other.tpDeadRagDollEnable_;
      tpDeadEffectTypeOnBody_ = other.tpDeadEffectTypeOnBody_;
      skinKillVFX_ = other.skinKillVFX_;
      skinKillAudio_ = other.skinKillAudio_;
      skinKillAllowAnim_ = other.skinKillAllowAnim_;
      skinLastKillVFX_ = other.skinLastKillVFX_;
      skinLastKillAudio_ = other.skinLastKillAudio_;
      skinLastKillAllowAnim_ = other.skinLastKillAllowAnim_;
      skinLastKillCameraShakeAsset_ = other.skinLastKillCameraShakeAsset_;
      skinLastKillCameraShakeDelayTimes_ = other.skinLastKillCameraShakeDelayTimes_;
      skinLastKillAmplitudeRange_ = other.skinLastKillAmplitudeRange_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeaponHitSceneDecalComponentData Clone() {
      return new WeaponHitSceneDecalComponentData(this);
    }

    /// <summary>Field number for the "DefaultDecal" field.</summary>
    public const int DefaultDecalFieldNumber = 1;
    private int defaultDecal_;
    /// <summary>
    /// 默认贴花 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefaultDecal {
      get { return defaultDecal_; }
      set {
        defaultDecal_ = value;
      }
    }

    /// <summary>Field number for the "EarthDecal" field.</summary>
    public const int EarthDecalFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_earthDecal_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> earthDecal_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 土墙贴花 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> EarthDecal {
      get { return earthDecal_; }
    }

    /// <summary>Field number for the "MetalDecal" field.</summary>
    public const int MetalDecalFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_metalDecal_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> metalDecal_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 金属贴花 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MetalDecal {
      get { return metalDecal_; }
    }

    /// <summary>Field number for the "WoodDecal" field.</summary>
    public const int WoodDecalFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_woodDecal_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> woodDecal_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 木贴花 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> WoodDecal {
      get { return woodDecal_; }
    }

    /// <summary>Field number for the "StoneDecal" field.</summary>
    public const int StoneDecalFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_stoneDecal_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> stoneDecal_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 石贴花 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> StoneDecal {
      get { return stoneDecal_; }
    }

    /// <summary>Field number for the "FabricDecal" field.</summary>
    public const int FabricDecalFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_fabricDecal_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> fabricDecal_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 布贴花 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FabricDecal {
      get { return fabricDecal_; }
    }

    /// <summary>Field number for the "GlassDecal" field.</summary>
    public const int GlassDecalFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_glassDecal_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> glassDecal_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 玻璃贴花 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> GlassDecal {
      get { return glassDecal_; }
    }

    /// <summary>Field number for the "OilDecal" field.</summary>
    public const int OilDecalFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_oilDecal_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> oilDecal_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 油桶贴花 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OilDecal {
      get { return oilDecal_; }
    }

    /// <summary>Field number for the "PawnDecal" field.</summary>
    public const int PawnDecalFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_pawnDecal_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> pawnDecal_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 人体贴花 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PawnDecal {
      get { return pawnDecal_; }
    }

    /// <summary>Field number for the "LeafDecal" field.</summary>
    public const int LeafDecalFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_leafDecal_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> leafDecal_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 树叶贴花 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> LeafDecal {
      get { return leafDecal_; }
    }

    /// <summary>Field number for the "PlasticDecal" field.</summary>
    public const int PlasticDecalFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_plasticDecal_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> plasticDecal_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 塑料贴花 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PlasticDecal {
      get { return plasticDecal_; }
    }

    /// <summary>Field number for the "RubeerDecal" field.</summary>
    public const int RubeerDecalFieldNumber = 12;
    private static readonly pb::FieldCodec<int> _repeated_rubeerDecal_codec
        = pb::FieldCodec.ForInt32(98);
    private readonly pbc::RepeatedField<int> rubeerDecal_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 橡胶贴花 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RubeerDecal {
      get { return rubeerDecal_; }
    }

    /// <summary>Field number for the "SandDecal" field.</summary>
    public const int SandDecalFieldNumber = 13;
    private static readonly pb::FieldCodec<int> _repeated_sandDecal_codec
        = pb::FieldCodec.ForInt32(106);
    private readonly pbc::RepeatedField<int> sandDecal_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 沙子贴花 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> SandDecal {
      get { return sandDecal_; }
    }

    /// <summary>Field number for the "CementDecal" field.</summary>
    public const int CementDecalFieldNumber = 14;
    private static readonly pb::FieldCodec<int> _repeated_cementDecal_codec
        = pb::FieldCodec.ForInt32(114);
    private readonly pbc::RepeatedField<int> cementDecal_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 水泥贴花 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CementDecal {
      get { return cementDecal_; }
    }

    /// <summary>Field number for the "HitEarthEffect" field.</summary>
    public const int HitEarthEffectFieldNumber = 15;
    private int hitEarthEffect_;
    /// <summary>
    /// 击中土墙特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HitEarthEffect {
      get { return hitEarthEffect_; }
      set {
        hitEarthEffect_ = value;
      }
    }

    /// <summary>Field number for the "HitMetalEffect" field.</summary>
    public const int HitMetalEffectFieldNumber = 16;
    private int hitMetalEffect_;
    /// <summary>
    /// 击中金属特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HitMetalEffect {
      get { return hitMetalEffect_; }
      set {
        hitMetalEffect_ = value;
      }
    }

    /// <summary>Field number for the "HitWoodEffect" field.</summary>
    public const int HitWoodEffectFieldNumber = 17;
    private int hitWoodEffect_;
    /// <summary>
    /// 击中木头特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HitWoodEffect {
      get { return hitWoodEffect_; }
      set {
        hitWoodEffect_ = value;
      }
    }

    /// <summary>Field number for the "HitStoneEffect" field.</summary>
    public const int HitStoneEffectFieldNumber = 18;
    private int hitStoneEffect_;
    /// <summary>
    /// 击中石头特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HitStoneEffect {
      get { return hitStoneEffect_; }
      set {
        hitStoneEffect_ = value;
      }
    }

    /// <summary>Field number for the "HitFabricEffect" field.</summary>
    public const int HitFabricEffectFieldNumber = 19;
    private int hitFabricEffect_;
    /// <summary>
    /// 击中布特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HitFabricEffect {
      get { return hitFabricEffect_; }
      set {
        hitFabricEffect_ = value;
      }
    }

    /// <summary>Field number for the "HitGlassEffect" field.</summary>
    public const int HitGlassEffectFieldNumber = 20;
    private int hitGlassEffect_;
    /// <summary>
    /// 击中玻璃特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HitGlassEffect {
      get { return hitGlassEffect_; }
      set {
        hitGlassEffect_ = value;
      }
    }

    /// <summary>Field number for the "HitOilEffect" field.</summary>
    public const int HitOilEffectFieldNumber = 21;
    private int hitOilEffect_;
    /// <summary>
    /// 击中油桶特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HitOilEffect {
      get { return hitOilEffect_; }
      set {
        hitOilEffect_ = value;
      }
    }

    /// <summary>Field number for the "HitPawnEffect" field.</summary>
    public const int HitPawnEffectFieldNumber = 22;
    private int hitPawnEffect_;
    /// <summary>
    /// 击中人体特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HitPawnEffect {
      get { return hitPawnEffect_; }
      set {
        hitPawnEffect_ = value;
      }
    }

    /// <summary>Field number for the "HitLeafEffect" field.</summary>
    public const int HitLeafEffectFieldNumber = 23;
    private int hitLeafEffect_;
    /// <summary>
    /// 击中树叶特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HitLeafEffect {
      get { return hitLeafEffect_; }
      set {
        hitLeafEffect_ = value;
      }
    }

    /// <summary>Field number for the "HitPlasticEffect" field.</summary>
    public const int HitPlasticEffectFieldNumber = 24;
    private int hitPlasticEffect_;
    /// <summary>
    /// 击中塑料特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HitPlasticEffect {
      get { return hitPlasticEffect_; }
      set {
        hitPlasticEffect_ = value;
      }
    }

    /// <summary>Field number for the "HitRubeerEffect" field.</summary>
    public const int HitRubeerEffectFieldNumber = 25;
    private int hitRubeerEffect_;
    /// <summary>
    /// 击中橡胶特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HitRubeerEffect {
      get { return hitRubeerEffect_; }
      set {
        hitRubeerEffect_ = value;
      }
    }

    /// <summary>Field number for the "HitSandEffect" field.</summary>
    public const int HitSandEffectFieldNumber = 26;
    private int hitSandEffect_;
    /// <summary>
    /// 击中沙子特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HitSandEffect {
      get { return hitSandEffect_; }
      set {
        hitSandEffect_ = value;
      }
    }

    /// <summary>Field number for the "HitCementEffect" field.</summary>
    public const int HitCementEffectFieldNumber = 27;
    private int hitCementEffect_;
    /// <summary>
    /// 击中水泥特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HitCementEffect {
      get { return hitCementEffect_; }
      set {
        hitCementEffect_ = value;
      }
    }

    /// <summary>Field number for the "MeleeHitSoundFP" field.</summary>
    public const int MeleeHitSoundFPFieldNumber = 28;
    private string meleeHitSoundFP_ = "";
    /// <summary>
    /// 近战击中人体音效FP 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MeleeHitSoundFP {
      get { return meleeHitSoundFP_; }
      set {
        meleeHitSoundFP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MeleeHitSoundTP" field.</summary>
    public const int MeleeHitSoundTPFieldNumber = 29;
    private string meleeHitSoundTP_ = "";
    /// <summary>
    /// 近战击中人体音效TP 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MeleeHitSoundTP {
      get { return meleeHitSoundTP_; }
      set {
        meleeHitSoundTP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HitWallSound" field.</summary>
    public const int HitWallSoundFieldNumber = 30;
    private string hitWallSound_ = "";
    /// <summary>
    /// 武器击中墙体音效TP 不区分墙体材质 多用于水枪 火枪 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HitWallSound {
      get { return hitWallSound_; }
      set {
        hitWallSound_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BodyHitSound1P" field.</summary>
    public const int BodyHitSound1PFieldNumber = 31;
    private string bodyHitSound1P_ = "";
    /// <summary>
    /// 1p命中敌人身体音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BodyHitSound1P {
      get { return bodyHitSound1P_; }
      set {
        bodyHitSound1P_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HeadHitSound1P" field.</summary>
    public const int HeadHitSound1PFieldNumber = 32;
    private string headHitSound1P_ = "";
    /// <summary>
    /// 1p命中敌人头部音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeadHitSound1P {
      get { return headHitSound1P_; }
      set {
        headHitSound1P_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ShieldBodyHitSound1P" field.</summary>
    public const int ShieldBodyHitSound1PFieldNumber = 33;
    private string shieldBodyHitSound1P_ = "";
    /// <summary>
    /// 1p命中敌人身体音效(带护甲) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShieldBodyHitSound1P {
      get { return shieldBodyHitSound1P_; }
      set {
        shieldBodyHitSound1P_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ShieldHeadHitSound1P" field.</summary>
    public const int ShieldHeadHitSound1PFieldNumber = 34;
    private string shieldHeadHitSound1P_ = "";
    /// <summary>
    /// 1p命中敌人头部音效(带护甲) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShieldHeadHitSound1P {
      get { return shieldHeadHitSound1P_; }
      set {
        shieldHeadHitSound1P_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BodyHitSound3P" field.</summary>
    public const int BodyHitSound3PFieldNumber = 35;
    private string bodyHitSound3P_ = "";
    /// <summary>
    /// 3p命中身体音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BodyHitSound3P {
      get { return bodyHitSound3P_; }
      set {
        bodyHitSound3P_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HeadHitSound3P" field.</summary>
    public const int HeadHitSound3PFieldNumber = 36;
    private string headHitSound3P_ = "";
    /// <summary>
    /// 3p命中头部音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeadHitSound3P {
      get { return headHitSound3P_; }
      set {
        headHitSound3P_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ShieldHitSound3P" field.</summary>
    public const int ShieldHitSound3PFieldNumber = 37;
    private string shieldHitSound3P_ = "";
    /// <summary>
    /// 3p命中护甲音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShieldHitSound3P {
      get { return shieldHitSound3P_; }
      set {
        shieldHitSound3P_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DamagedEffect" field.</summary>
    public const int DamagedEffectFieldNumber = 38;
    private int damagedEffect_;
    /// <summary>
    /// 人物被打中后的特效名称 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DamagedEffect {
      get { return damagedEffect_; }
      set {
        damagedEffect_ = value;
      }
    }

    /// <summary>Field number for the "DamagedHeadEffect" field.</summary>
    public const int DamagedHeadEffectFieldNumber = 39;
    private int damagedHeadEffect_;
    /// <summary>
    /// 人物被打中头后的特效名称 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DamagedHeadEffect {
      get { return damagedHeadEffect_; }
      set {
        damagedHeadEffect_ = value;
      }
    }

    /// <summary>Field number for the "DamagedExplosionEffect" field.</summary>
    public const int DamagedExplosionEffectFieldNumber = 40;
    private int damagedExplosionEffect_;
    /// <summary>
    /// 人物被爆浆的特效名称 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DamagedExplosionEffect {
      get { return damagedExplosionEffect_; }
      set {
        damagedExplosionEffect_ = value;
      }
    }

    /// <summary>Field number for the "DamagedHelmetEffect" field.</summary>
    public const int DamagedHelmetEffectFieldNumber = 41;
    private int damagedHelmetEffect_;
    /// <summary>
    /// 人物被打中头盔后的特效名称 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DamagedHelmetEffect {
      get { return damagedHelmetEffect_; }
      set {
        damagedHelmetEffect_ = value;
      }
    }

    /// <summary>Field number for the "DamagedDecal" field.</summary>
    public const int DamagedDecalFieldNumber = 42;
    private static readonly pb::FieldCodec<int> _repeated_damagedDecal_codec
        = pb::FieldCodec.ForInt32(338);
    private readonly pbc::RepeatedField<int> damagedDecal_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 人物被打中后的血印花特效名称 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> DamagedDecal {
      get { return damagedDecal_; }
    }

    /// <summary>Field number for the "DamagedDecalLegal" field.</summary>
    public const int DamagedDecalLegalFieldNumber = 43;
    private static readonly pb::FieldCodec<int> _repeated_damagedDecalLegal_codec
        = pb::FieldCodec.ForInt32(346);
    private readonly pbc::RepeatedField<int> damagedDecalLegal_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 人物被打中后的血印花特效名称(合法的,部分国家不让出现血) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> DamagedDecalLegal {
      get { return damagedDecalLegal_; }
    }

    /// <summary>Field number for the "DamagedDecalLow" field.</summary>
    public const int DamagedDecalLowFieldNumber = 44;
    private int damagedDecalLow_;
    /// <summary>
    /// 人物被打中后的血印花特效名称(低配) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DamagedDecalLow {
      get { return damagedDecalLow_; }
      set {
        damagedDecalLow_ = value;
      }
    }

    /// <summary>Field number for the "TpDeadAudioEvent" field.</summary>
    public const int TpDeadAudioEventFieldNumber = 45;
    private string tpDeadAudioEvent_ = "";
    /// <summary>
    /// 3p死亡音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TpDeadAudioEvent {
      get { return tpDeadAudioEvent_; }
      set {
        tpDeadAudioEvent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TpDeadEffect" field.</summary>
    public const int TpDeadEffectFieldNumber = 46;
    private uint tpDeadEffect_;
    /// <summary>
    /// 3p死亡特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TpDeadEffect {
      get { return tpDeadEffect_; }
      set {
        tpDeadEffect_ = value;
      }
    }

    /// <summary>Field number for the "TpDeadRagDollEnable" field.</summary>
    public const int TpDeadRagDollEnableFieldNumber = 47;
    private bool tpDeadRagDollEnable_;
    /// <summary>
    /// 3p死亡布娃娃开关 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TpDeadRagDollEnable {
      get { return tpDeadRagDollEnable_; }
      set {
        tpDeadRagDollEnable_ = value;
      }
    }

    /// <summary>Field number for the "TpDeadEffectTypeOnBody" field.</summary>
    public const int TpDeadEffectTypeOnBodyFieldNumber = 48;
    private int tpDeadEffectTypeOnBody_;
    /// <summary>
    /// 3p身体死亡效果类型 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TpDeadEffectTypeOnBody {
      get { return tpDeadEffectTypeOnBody_; }
      set {
        tpDeadEffectTypeOnBody_ = value;
      }
    }

    /// <summary>Field number for the "SkinKillVFX" field.</summary>
    public const int SkinKillVFXFieldNumber = 49;
    private int skinKillVFX_;
    /// <summary>
    /// Skin武器击杀3p特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkinKillVFX {
      get { return skinKillVFX_; }
      set {
        skinKillVFX_ = value;
      }
    }

    /// <summary>Field number for the "SkinKillAudio" field.</summary>
    public const int SkinKillAudioFieldNumber = 50;
    private string skinKillAudio_ = "";
    /// <summary>
    /// Skin武器击杀3p音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SkinKillAudio {
      get { return skinKillAudio_; }
      set {
        skinKillAudio_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SkinKillAllowAnim" field.</summary>
    public const int SkinKillAllowAnimFieldNumber = 51;
    private bool skinKillAllowAnim_;
    /// <summary>
    /// Skin武器击杀打断3P人物动画/Rag 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SkinKillAllowAnim {
      get { return skinKillAllowAnim_; }
      set {
        skinKillAllowAnim_ = value;
      }
    }

    /// <summary>Field number for the "SkinLastKillVFX" field.</summary>
    public const int SkinLastKillVFXFieldNumber = 52;
    private int skinLastKillVFX_;
    /// <summary>
    /// Skin武器最后一击3p特效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkinLastKillVFX {
      get { return skinLastKillVFX_; }
      set {
        skinLastKillVFX_ = value;
      }
    }

    /// <summary>Field number for the "SkinLastKillAudio" field.</summary>
    public const int SkinLastKillAudioFieldNumber = 53;
    private string skinLastKillAudio_ = "";
    /// <summary>
    /// Skin武器最后一击3p音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SkinLastKillAudio {
      get { return skinLastKillAudio_; }
      set {
        skinLastKillAudio_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SkinLastKillAllowAnim" field.</summary>
    public const int SkinLastKillAllowAnimFieldNumber = 54;
    private bool skinLastKillAllowAnim_;
    /// <summary>
    /// Skin武器最后一击打断3p人物动画/Rag 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SkinLastKillAllowAnim {
      get { return skinLastKillAllowAnim_; }
      set {
        skinLastKillAllowAnim_ = value;
      }
    }

    /// <summary>Field number for the "SkinLastKillCameraShakeAsset" field.</summary>
    public const int SkinLastKillCameraShakeAssetFieldNumber = 55;
    private string skinLastKillCameraShakeAsset_ = "";
    /// <summary>
    /// Skin武器最后一击震屏文件 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SkinLastKillCameraShakeAsset {
      get { return skinLastKillCameraShakeAsset_; }
      set {
        skinLastKillCameraShakeAsset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SkinLastKillCameraShakeDelayTimes" field.</summary>
    public const int SkinLastKillCameraShakeDelayTimesFieldNumber = 56;
    private float skinLastKillCameraShakeDelayTimes_;
    /// <summary>
    /// Skin武器最后一击震屏延迟时间 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SkinLastKillCameraShakeDelayTimes {
      get { return skinLastKillCameraShakeDelayTimes_; }
      set {
        skinLastKillCameraShakeDelayTimes_ = value;
      }
    }

    /// <summary>Field number for the "SkinLastKillAmplitudeRange" field.</summary>
    public const int SkinLastKillAmplitudeRangeFieldNumber = 57;
    private float skinLastKillAmplitudeRange_;
    /// <summary>
    /// Skin武器最后一击振幅 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SkinLastKillAmplitudeRange {
      get { return skinLastKillAmplitudeRange_; }
      set {
        skinLastKillAmplitudeRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WeaponHitSceneDecalComponentData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WeaponHitSceneDecalComponentData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DefaultDecal != other.DefaultDecal) return false;
      if(!earthDecal_.Equals(other.earthDecal_)) return false;
      if(!metalDecal_.Equals(other.metalDecal_)) return false;
      if(!woodDecal_.Equals(other.woodDecal_)) return false;
      if(!stoneDecal_.Equals(other.stoneDecal_)) return false;
      if(!fabricDecal_.Equals(other.fabricDecal_)) return false;
      if(!glassDecal_.Equals(other.glassDecal_)) return false;
      if(!oilDecal_.Equals(other.oilDecal_)) return false;
      if(!pawnDecal_.Equals(other.pawnDecal_)) return false;
      if(!leafDecal_.Equals(other.leafDecal_)) return false;
      if(!plasticDecal_.Equals(other.plasticDecal_)) return false;
      if(!rubeerDecal_.Equals(other.rubeerDecal_)) return false;
      if(!sandDecal_.Equals(other.sandDecal_)) return false;
      if(!cementDecal_.Equals(other.cementDecal_)) return false;
      if (HitEarthEffect != other.HitEarthEffect) return false;
      if (HitMetalEffect != other.HitMetalEffect) return false;
      if (HitWoodEffect != other.HitWoodEffect) return false;
      if (HitStoneEffect != other.HitStoneEffect) return false;
      if (HitFabricEffect != other.HitFabricEffect) return false;
      if (HitGlassEffect != other.HitGlassEffect) return false;
      if (HitOilEffect != other.HitOilEffect) return false;
      if (HitPawnEffect != other.HitPawnEffect) return false;
      if (HitLeafEffect != other.HitLeafEffect) return false;
      if (HitPlasticEffect != other.HitPlasticEffect) return false;
      if (HitRubeerEffect != other.HitRubeerEffect) return false;
      if (HitSandEffect != other.HitSandEffect) return false;
      if (HitCementEffect != other.HitCementEffect) return false;
      if (MeleeHitSoundFP != other.MeleeHitSoundFP) return false;
      if (MeleeHitSoundTP != other.MeleeHitSoundTP) return false;
      if (HitWallSound != other.HitWallSound) return false;
      if (BodyHitSound1P != other.BodyHitSound1P) return false;
      if (HeadHitSound1P != other.HeadHitSound1P) return false;
      if (ShieldBodyHitSound1P != other.ShieldBodyHitSound1P) return false;
      if (ShieldHeadHitSound1P != other.ShieldHeadHitSound1P) return false;
      if (BodyHitSound3P != other.BodyHitSound3P) return false;
      if (HeadHitSound3P != other.HeadHitSound3P) return false;
      if (ShieldHitSound3P != other.ShieldHitSound3P) return false;
      if (DamagedEffect != other.DamagedEffect) return false;
      if (DamagedHeadEffect != other.DamagedHeadEffect) return false;
      if (DamagedExplosionEffect != other.DamagedExplosionEffect) return false;
      if (DamagedHelmetEffect != other.DamagedHelmetEffect) return false;
      if(!damagedDecal_.Equals(other.damagedDecal_)) return false;
      if(!damagedDecalLegal_.Equals(other.damagedDecalLegal_)) return false;
      if (DamagedDecalLow != other.DamagedDecalLow) return false;
      if (TpDeadAudioEvent != other.TpDeadAudioEvent) return false;
      if (TpDeadEffect != other.TpDeadEffect) return false;
      if (TpDeadRagDollEnable != other.TpDeadRagDollEnable) return false;
      if (TpDeadEffectTypeOnBody != other.TpDeadEffectTypeOnBody) return false;
      if (SkinKillVFX != other.SkinKillVFX) return false;
      if (SkinKillAudio != other.SkinKillAudio) return false;
      if (SkinKillAllowAnim != other.SkinKillAllowAnim) return false;
      if (SkinLastKillVFX != other.SkinLastKillVFX) return false;
      if (SkinLastKillAudio != other.SkinLastKillAudio) return false;
      if (SkinLastKillAllowAnim != other.SkinLastKillAllowAnim) return false;
      if (SkinLastKillCameraShakeAsset != other.SkinLastKillCameraShakeAsset) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SkinLastKillCameraShakeDelayTimes, other.SkinLastKillCameraShakeDelayTimes)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SkinLastKillAmplitudeRange, other.SkinLastKillAmplitudeRange)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DefaultDecal != 0) hash ^= DefaultDecal.GetHashCode();
      hash ^= earthDecal_.GetHashCode();
      hash ^= metalDecal_.GetHashCode();
      hash ^= woodDecal_.GetHashCode();
      hash ^= stoneDecal_.GetHashCode();
      hash ^= fabricDecal_.GetHashCode();
      hash ^= glassDecal_.GetHashCode();
      hash ^= oilDecal_.GetHashCode();
      hash ^= pawnDecal_.GetHashCode();
      hash ^= leafDecal_.GetHashCode();
      hash ^= plasticDecal_.GetHashCode();
      hash ^= rubeerDecal_.GetHashCode();
      hash ^= sandDecal_.GetHashCode();
      hash ^= cementDecal_.GetHashCode();
      if (HitEarthEffect != 0) hash ^= HitEarthEffect.GetHashCode();
      if (HitMetalEffect != 0) hash ^= HitMetalEffect.GetHashCode();
      if (HitWoodEffect != 0) hash ^= HitWoodEffect.GetHashCode();
      if (HitStoneEffect != 0) hash ^= HitStoneEffect.GetHashCode();
      if (HitFabricEffect != 0) hash ^= HitFabricEffect.GetHashCode();
      if (HitGlassEffect != 0) hash ^= HitGlassEffect.GetHashCode();
      if (HitOilEffect != 0) hash ^= HitOilEffect.GetHashCode();
      if (HitPawnEffect != 0) hash ^= HitPawnEffect.GetHashCode();
      if (HitLeafEffect != 0) hash ^= HitLeafEffect.GetHashCode();
      if (HitPlasticEffect != 0) hash ^= HitPlasticEffect.GetHashCode();
      if (HitRubeerEffect != 0) hash ^= HitRubeerEffect.GetHashCode();
      if (HitSandEffect != 0) hash ^= HitSandEffect.GetHashCode();
      if (HitCementEffect != 0) hash ^= HitCementEffect.GetHashCode();
      if (MeleeHitSoundFP.Length != 0) hash ^= MeleeHitSoundFP.GetHashCode();
      if (MeleeHitSoundTP.Length != 0) hash ^= MeleeHitSoundTP.GetHashCode();
      if (HitWallSound.Length != 0) hash ^= HitWallSound.GetHashCode();
      if (BodyHitSound1P.Length != 0) hash ^= BodyHitSound1P.GetHashCode();
      if (HeadHitSound1P.Length != 0) hash ^= HeadHitSound1P.GetHashCode();
      if (ShieldBodyHitSound1P.Length != 0) hash ^= ShieldBodyHitSound1P.GetHashCode();
      if (ShieldHeadHitSound1P.Length != 0) hash ^= ShieldHeadHitSound1P.GetHashCode();
      if (BodyHitSound3P.Length != 0) hash ^= BodyHitSound3P.GetHashCode();
      if (HeadHitSound3P.Length != 0) hash ^= HeadHitSound3P.GetHashCode();
      if (ShieldHitSound3P.Length != 0) hash ^= ShieldHitSound3P.GetHashCode();
      if (DamagedEffect != 0) hash ^= DamagedEffect.GetHashCode();
      if (DamagedHeadEffect != 0) hash ^= DamagedHeadEffect.GetHashCode();
      if (DamagedExplosionEffect != 0) hash ^= DamagedExplosionEffect.GetHashCode();
      if (DamagedHelmetEffect != 0) hash ^= DamagedHelmetEffect.GetHashCode();
      hash ^= damagedDecal_.GetHashCode();
      hash ^= damagedDecalLegal_.GetHashCode();
      if (DamagedDecalLow != 0) hash ^= DamagedDecalLow.GetHashCode();
      if (TpDeadAudioEvent.Length != 0) hash ^= TpDeadAudioEvent.GetHashCode();
      if (TpDeadEffect != 0) hash ^= TpDeadEffect.GetHashCode();
      if (TpDeadRagDollEnable != false) hash ^= TpDeadRagDollEnable.GetHashCode();
      if (TpDeadEffectTypeOnBody != 0) hash ^= TpDeadEffectTypeOnBody.GetHashCode();
      if (SkinKillVFX != 0) hash ^= SkinKillVFX.GetHashCode();
      if (SkinKillAudio.Length != 0) hash ^= SkinKillAudio.GetHashCode();
      if (SkinKillAllowAnim != false) hash ^= SkinKillAllowAnim.GetHashCode();
      if (SkinLastKillVFX != 0) hash ^= SkinLastKillVFX.GetHashCode();
      if (SkinLastKillAudio.Length != 0) hash ^= SkinLastKillAudio.GetHashCode();
      if (SkinLastKillAllowAnim != false) hash ^= SkinLastKillAllowAnim.GetHashCode();
      if (SkinLastKillCameraShakeAsset.Length != 0) hash ^= SkinLastKillCameraShakeAsset.GetHashCode();
      if (SkinLastKillCameraShakeDelayTimes != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SkinLastKillCameraShakeDelayTimes);
      if (SkinLastKillAmplitudeRange != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SkinLastKillAmplitudeRange);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DefaultDecal != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DefaultDecal);
      }
      earthDecal_.WriteTo(output, _repeated_earthDecal_codec);
      metalDecal_.WriteTo(output, _repeated_metalDecal_codec);
      woodDecal_.WriteTo(output, _repeated_woodDecal_codec);
      stoneDecal_.WriteTo(output, _repeated_stoneDecal_codec);
      fabricDecal_.WriteTo(output, _repeated_fabricDecal_codec);
      glassDecal_.WriteTo(output, _repeated_glassDecal_codec);
      oilDecal_.WriteTo(output, _repeated_oilDecal_codec);
      pawnDecal_.WriteTo(output, _repeated_pawnDecal_codec);
      leafDecal_.WriteTo(output, _repeated_leafDecal_codec);
      plasticDecal_.WriteTo(output, _repeated_plasticDecal_codec);
      rubeerDecal_.WriteTo(output, _repeated_rubeerDecal_codec);
      sandDecal_.WriteTo(output, _repeated_sandDecal_codec);
      cementDecal_.WriteTo(output, _repeated_cementDecal_codec);
      if (HitEarthEffect != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(HitEarthEffect);
      }
      if (HitMetalEffect != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(HitMetalEffect);
      }
      if (HitWoodEffect != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(HitWoodEffect);
      }
      if (HitStoneEffect != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(HitStoneEffect);
      }
      if (HitFabricEffect != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(HitFabricEffect);
      }
      if (HitGlassEffect != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(HitGlassEffect);
      }
      if (HitOilEffect != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(HitOilEffect);
      }
      if (HitPawnEffect != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(HitPawnEffect);
      }
      if (HitLeafEffect != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(HitLeafEffect);
      }
      if (HitPlasticEffect != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(HitPlasticEffect);
      }
      if (HitRubeerEffect != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(HitRubeerEffect);
      }
      if (HitSandEffect != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(HitSandEffect);
      }
      if (HitCementEffect != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(HitCementEffect);
      }
      if (MeleeHitSoundFP.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(MeleeHitSoundFP);
      }
      if (MeleeHitSoundTP.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(MeleeHitSoundTP);
      }
      if (HitWallSound.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(HitWallSound);
      }
      if (BodyHitSound1P.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(BodyHitSound1P);
      }
      if (HeadHitSound1P.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(HeadHitSound1P);
      }
      if (ShieldBodyHitSound1P.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(ShieldBodyHitSound1P);
      }
      if (ShieldHeadHitSound1P.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(ShieldHeadHitSound1P);
      }
      if (BodyHitSound3P.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(BodyHitSound3P);
      }
      if (HeadHitSound3P.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(HeadHitSound3P);
      }
      if (ShieldHitSound3P.Length != 0) {
        output.WriteRawTag(170, 2);
        output.WriteString(ShieldHitSound3P);
      }
      if (DamagedEffect != 0) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(DamagedEffect);
      }
      if (DamagedHeadEffect != 0) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(DamagedHeadEffect);
      }
      if (DamagedExplosionEffect != 0) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(DamagedExplosionEffect);
      }
      if (DamagedHelmetEffect != 0) {
        output.WriteRawTag(200, 2);
        output.WriteInt32(DamagedHelmetEffect);
      }
      damagedDecal_.WriteTo(output, _repeated_damagedDecal_codec);
      damagedDecalLegal_.WriteTo(output, _repeated_damagedDecalLegal_codec);
      if (DamagedDecalLow != 0) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(DamagedDecalLow);
      }
      if (TpDeadAudioEvent.Length != 0) {
        output.WriteRawTag(234, 2);
        output.WriteString(TpDeadAudioEvent);
      }
      if (TpDeadEffect != 0) {
        output.WriteRawTag(240, 2);
        output.WriteUInt32(TpDeadEffect);
      }
      if (TpDeadRagDollEnable != false) {
        output.WriteRawTag(248, 2);
        output.WriteBool(TpDeadRagDollEnable);
      }
      if (TpDeadEffectTypeOnBody != 0) {
        output.WriteRawTag(128, 3);
        output.WriteInt32(TpDeadEffectTypeOnBody);
      }
      if (SkinKillVFX != 0) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(SkinKillVFX);
      }
      if (SkinKillAudio.Length != 0) {
        output.WriteRawTag(146, 3);
        output.WriteString(SkinKillAudio);
      }
      if (SkinKillAllowAnim != false) {
        output.WriteRawTag(152, 3);
        output.WriteBool(SkinKillAllowAnim);
      }
      if (SkinLastKillVFX != 0) {
        output.WriteRawTag(160, 3);
        output.WriteInt32(SkinLastKillVFX);
      }
      if (SkinLastKillAudio.Length != 0) {
        output.WriteRawTag(170, 3);
        output.WriteString(SkinLastKillAudio);
      }
      if (SkinLastKillAllowAnim != false) {
        output.WriteRawTag(176, 3);
        output.WriteBool(SkinLastKillAllowAnim);
      }
      if (SkinLastKillCameraShakeAsset.Length != 0) {
        output.WriteRawTag(186, 3);
        output.WriteString(SkinLastKillCameraShakeAsset);
      }
      if (SkinLastKillCameraShakeDelayTimes != 0F) {
        output.WriteRawTag(197, 3);
        output.WriteFloat(SkinLastKillCameraShakeDelayTimes);
      }
      if (SkinLastKillAmplitudeRange != 0F) {
        output.WriteRawTag(205, 3);
        output.WriteFloat(SkinLastKillAmplitudeRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DefaultDecal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefaultDecal);
      }
      size += earthDecal_.CalculateSize(_repeated_earthDecal_codec);
      size += metalDecal_.CalculateSize(_repeated_metalDecal_codec);
      size += woodDecal_.CalculateSize(_repeated_woodDecal_codec);
      size += stoneDecal_.CalculateSize(_repeated_stoneDecal_codec);
      size += fabricDecal_.CalculateSize(_repeated_fabricDecal_codec);
      size += glassDecal_.CalculateSize(_repeated_glassDecal_codec);
      size += oilDecal_.CalculateSize(_repeated_oilDecal_codec);
      size += pawnDecal_.CalculateSize(_repeated_pawnDecal_codec);
      size += leafDecal_.CalculateSize(_repeated_leafDecal_codec);
      size += plasticDecal_.CalculateSize(_repeated_plasticDecal_codec);
      size += rubeerDecal_.CalculateSize(_repeated_rubeerDecal_codec);
      size += sandDecal_.CalculateSize(_repeated_sandDecal_codec);
      size += cementDecal_.CalculateSize(_repeated_cementDecal_codec);
      if (HitEarthEffect != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitEarthEffect);
      }
      if (HitMetalEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitMetalEffect);
      }
      if (HitWoodEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitWoodEffect);
      }
      if (HitStoneEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitStoneEffect);
      }
      if (HitFabricEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitFabricEffect);
      }
      if (HitGlassEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitGlassEffect);
      }
      if (HitOilEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitOilEffect);
      }
      if (HitPawnEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitPawnEffect);
      }
      if (HitLeafEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitLeafEffect);
      }
      if (HitPlasticEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitPlasticEffect);
      }
      if (HitRubeerEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitRubeerEffect);
      }
      if (HitSandEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitSandEffect);
      }
      if (HitCementEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitCementEffect);
      }
      if (MeleeHitSoundFP.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MeleeHitSoundFP);
      }
      if (MeleeHitSoundTP.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MeleeHitSoundTP);
      }
      if (HitWallSound.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HitWallSound);
      }
      if (BodyHitSound1P.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BodyHitSound1P);
      }
      if (HeadHitSound1P.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HeadHitSound1P);
      }
      if (ShieldBodyHitSound1P.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ShieldBodyHitSound1P);
      }
      if (ShieldHeadHitSound1P.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ShieldHeadHitSound1P);
      }
      if (BodyHitSound3P.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BodyHitSound3P);
      }
      if (HeadHitSound3P.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HeadHitSound3P);
      }
      if (ShieldHitSound3P.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ShieldHitSound3P);
      }
      if (DamagedEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DamagedEffect);
      }
      if (DamagedHeadEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DamagedHeadEffect);
      }
      if (DamagedExplosionEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DamagedExplosionEffect);
      }
      if (DamagedHelmetEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DamagedHelmetEffect);
      }
      size += damagedDecal_.CalculateSize(_repeated_damagedDecal_codec);
      size += damagedDecalLegal_.CalculateSize(_repeated_damagedDecalLegal_codec);
      if (DamagedDecalLow != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DamagedDecalLow);
      }
      if (TpDeadAudioEvent.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TpDeadAudioEvent);
      }
      if (TpDeadEffect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TpDeadEffect);
      }
      if (TpDeadRagDollEnable != false) {
        size += 2 + 1;
      }
      if (TpDeadEffectTypeOnBody != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TpDeadEffectTypeOnBody);
      }
      if (SkinKillVFX != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SkinKillVFX);
      }
      if (SkinKillAudio.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SkinKillAudio);
      }
      if (SkinKillAllowAnim != false) {
        size += 2 + 1;
      }
      if (SkinLastKillVFX != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SkinLastKillVFX);
      }
      if (SkinLastKillAudio.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SkinLastKillAudio);
      }
      if (SkinLastKillAllowAnim != false) {
        size += 2 + 1;
      }
      if (SkinLastKillCameraShakeAsset.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SkinLastKillCameraShakeAsset);
      }
      if (SkinLastKillCameraShakeDelayTimes != 0F) {
        size += 2 + 4;
      }
      if (SkinLastKillAmplitudeRange != 0F) {
        size += 2 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WeaponHitSceneDecalComponentData other) {
      if (other == null) {
        return;
      }
      if (other.DefaultDecal != 0) {
        DefaultDecal = other.DefaultDecal;
      }
      earthDecal_.Add(other.earthDecal_);
      metalDecal_.Add(other.metalDecal_);
      woodDecal_.Add(other.woodDecal_);
      stoneDecal_.Add(other.stoneDecal_);
      fabricDecal_.Add(other.fabricDecal_);
      glassDecal_.Add(other.glassDecal_);
      oilDecal_.Add(other.oilDecal_);
      pawnDecal_.Add(other.pawnDecal_);
      leafDecal_.Add(other.leafDecal_);
      plasticDecal_.Add(other.plasticDecal_);
      rubeerDecal_.Add(other.rubeerDecal_);
      sandDecal_.Add(other.sandDecal_);
      cementDecal_.Add(other.cementDecal_);
      if (other.HitEarthEffect != 0) {
        HitEarthEffect = other.HitEarthEffect;
      }
      if (other.HitMetalEffect != 0) {
        HitMetalEffect = other.HitMetalEffect;
      }
      if (other.HitWoodEffect != 0) {
        HitWoodEffect = other.HitWoodEffect;
      }
      if (other.HitStoneEffect != 0) {
        HitStoneEffect = other.HitStoneEffect;
      }
      if (other.HitFabricEffect != 0) {
        HitFabricEffect = other.HitFabricEffect;
      }
      if (other.HitGlassEffect != 0) {
        HitGlassEffect = other.HitGlassEffect;
      }
      if (other.HitOilEffect != 0) {
        HitOilEffect = other.HitOilEffect;
      }
      if (other.HitPawnEffect != 0) {
        HitPawnEffect = other.HitPawnEffect;
      }
      if (other.HitLeafEffect != 0) {
        HitLeafEffect = other.HitLeafEffect;
      }
      if (other.HitPlasticEffect != 0) {
        HitPlasticEffect = other.HitPlasticEffect;
      }
      if (other.HitRubeerEffect != 0) {
        HitRubeerEffect = other.HitRubeerEffect;
      }
      if (other.HitSandEffect != 0) {
        HitSandEffect = other.HitSandEffect;
      }
      if (other.HitCementEffect != 0) {
        HitCementEffect = other.HitCementEffect;
      }
      if (other.MeleeHitSoundFP.Length != 0) {
        MeleeHitSoundFP = other.MeleeHitSoundFP;
      }
      if (other.MeleeHitSoundTP.Length != 0) {
        MeleeHitSoundTP = other.MeleeHitSoundTP;
      }
      if (other.HitWallSound.Length != 0) {
        HitWallSound = other.HitWallSound;
      }
      if (other.BodyHitSound1P.Length != 0) {
        BodyHitSound1P = other.BodyHitSound1P;
      }
      if (other.HeadHitSound1P.Length != 0) {
        HeadHitSound1P = other.HeadHitSound1P;
      }
      if (other.ShieldBodyHitSound1P.Length != 0) {
        ShieldBodyHitSound1P = other.ShieldBodyHitSound1P;
      }
      if (other.ShieldHeadHitSound1P.Length != 0) {
        ShieldHeadHitSound1P = other.ShieldHeadHitSound1P;
      }
      if (other.BodyHitSound3P.Length != 0) {
        BodyHitSound3P = other.BodyHitSound3P;
      }
      if (other.HeadHitSound3P.Length != 0) {
        HeadHitSound3P = other.HeadHitSound3P;
      }
      if (other.ShieldHitSound3P.Length != 0) {
        ShieldHitSound3P = other.ShieldHitSound3P;
      }
      if (other.DamagedEffect != 0) {
        DamagedEffect = other.DamagedEffect;
      }
      if (other.DamagedHeadEffect != 0) {
        DamagedHeadEffect = other.DamagedHeadEffect;
      }
      if (other.DamagedExplosionEffect != 0) {
        DamagedExplosionEffect = other.DamagedExplosionEffect;
      }
      if (other.DamagedHelmetEffect != 0) {
        DamagedHelmetEffect = other.DamagedHelmetEffect;
      }
      damagedDecal_.Add(other.damagedDecal_);
      damagedDecalLegal_.Add(other.damagedDecalLegal_);
      if (other.DamagedDecalLow != 0) {
        DamagedDecalLow = other.DamagedDecalLow;
      }
      if (other.TpDeadAudioEvent.Length != 0) {
        TpDeadAudioEvent = other.TpDeadAudioEvent;
      }
      if (other.TpDeadEffect != 0) {
        TpDeadEffect = other.TpDeadEffect;
      }
      if (other.TpDeadRagDollEnable != false) {
        TpDeadRagDollEnable = other.TpDeadRagDollEnable;
      }
      if (other.TpDeadEffectTypeOnBody != 0) {
        TpDeadEffectTypeOnBody = other.TpDeadEffectTypeOnBody;
      }
      if (other.SkinKillVFX != 0) {
        SkinKillVFX = other.SkinKillVFX;
      }
      if (other.SkinKillAudio.Length != 0) {
        SkinKillAudio = other.SkinKillAudio;
      }
      if (other.SkinKillAllowAnim != false) {
        SkinKillAllowAnim = other.SkinKillAllowAnim;
      }
      if (other.SkinLastKillVFX != 0) {
        SkinLastKillVFX = other.SkinLastKillVFX;
      }
      if (other.SkinLastKillAudio.Length != 0) {
        SkinLastKillAudio = other.SkinLastKillAudio;
      }
      if (other.SkinLastKillAllowAnim != false) {
        SkinLastKillAllowAnim = other.SkinLastKillAllowAnim;
      }
      if (other.SkinLastKillCameraShakeAsset.Length != 0) {
        SkinLastKillCameraShakeAsset = other.SkinLastKillCameraShakeAsset;
      }
      if (other.SkinLastKillCameraShakeDelayTimes != 0F) {
        SkinLastKillCameraShakeDelayTimes = other.SkinLastKillCameraShakeDelayTimes;
      }
      if (other.SkinLastKillAmplitudeRange != 0F) {
        SkinLastKillAmplitudeRange = other.SkinLastKillAmplitudeRange;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DefaultDecal = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            earthDecal_.AddEntriesFrom(input, _repeated_earthDecal_codec);
            break;
          }
          case 26:
          case 24: {
            metalDecal_.AddEntriesFrom(input, _repeated_metalDecal_codec);
            break;
          }
          case 34:
          case 32: {
            woodDecal_.AddEntriesFrom(input, _repeated_woodDecal_codec);
            break;
          }
          case 42:
          case 40: {
            stoneDecal_.AddEntriesFrom(input, _repeated_stoneDecal_codec);
            break;
          }
          case 50:
          case 48: {
            fabricDecal_.AddEntriesFrom(input, _repeated_fabricDecal_codec);
            break;
          }
          case 58:
          case 56: {
            glassDecal_.AddEntriesFrom(input, _repeated_glassDecal_codec);
            break;
          }
          case 66:
          case 64: {
            oilDecal_.AddEntriesFrom(input, _repeated_oilDecal_codec);
            break;
          }
          case 74:
          case 72: {
            pawnDecal_.AddEntriesFrom(input, _repeated_pawnDecal_codec);
            break;
          }
          case 82:
          case 80: {
            leafDecal_.AddEntriesFrom(input, _repeated_leafDecal_codec);
            break;
          }
          case 90:
          case 88: {
            plasticDecal_.AddEntriesFrom(input, _repeated_plasticDecal_codec);
            break;
          }
          case 98:
          case 96: {
            rubeerDecal_.AddEntriesFrom(input, _repeated_rubeerDecal_codec);
            break;
          }
          case 106:
          case 104: {
            sandDecal_.AddEntriesFrom(input, _repeated_sandDecal_codec);
            break;
          }
          case 114:
          case 112: {
            cementDecal_.AddEntriesFrom(input, _repeated_cementDecal_codec);
            break;
          }
          case 120: {
            HitEarthEffect = input.ReadInt32();
            break;
          }
          case 128: {
            HitMetalEffect = input.ReadInt32();
            break;
          }
          case 136: {
            HitWoodEffect = input.ReadInt32();
            break;
          }
          case 144: {
            HitStoneEffect = input.ReadInt32();
            break;
          }
          case 152: {
            HitFabricEffect = input.ReadInt32();
            break;
          }
          case 160: {
            HitGlassEffect = input.ReadInt32();
            break;
          }
          case 168: {
            HitOilEffect = input.ReadInt32();
            break;
          }
          case 176: {
            HitPawnEffect = input.ReadInt32();
            break;
          }
          case 184: {
            HitLeafEffect = input.ReadInt32();
            break;
          }
          case 192: {
            HitPlasticEffect = input.ReadInt32();
            break;
          }
          case 200: {
            HitRubeerEffect = input.ReadInt32();
            break;
          }
          case 208: {
            HitSandEffect = input.ReadInt32();
            break;
          }
          case 216: {
            HitCementEffect = input.ReadInt32();
            break;
          }
          case 226: {
            MeleeHitSoundFP = input.ReadString();
            break;
          }
          case 234: {
            MeleeHitSoundTP = input.ReadString();
            break;
          }
          case 242: {
            HitWallSound = input.ReadString();
            break;
          }
          case 250: {
            BodyHitSound1P = input.ReadString();
            break;
          }
          case 258: {
            HeadHitSound1P = input.ReadString();
            break;
          }
          case 266: {
            ShieldBodyHitSound1P = input.ReadString();
            break;
          }
          case 274: {
            ShieldHeadHitSound1P = input.ReadString();
            break;
          }
          case 282: {
            BodyHitSound3P = input.ReadString();
            break;
          }
          case 290: {
            HeadHitSound3P = input.ReadString();
            break;
          }
          case 298: {
            ShieldHitSound3P = input.ReadString();
            break;
          }
          case 304: {
            DamagedEffect = input.ReadInt32();
            break;
          }
          case 312: {
            DamagedHeadEffect = input.ReadInt32();
            break;
          }
          case 320: {
            DamagedExplosionEffect = input.ReadInt32();
            break;
          }
          case 328: {
            DamagedHelmetEffect = input.ReadInt32();
            break;
          }
          case 338:
          case 336: {
            damagedDecal_.AddEntriesFrom(input, _repeated_damagedDecal_codec);
            break;
          }
          case 346:
          case 344: {
            damagedDecalLegal_.AddEntriesFrom(input, _repeated_damagedDecalLegal_codec);
            break;
          }
          case 352: {
            DamagedDecalLow = input.ReadInt32();
            break;
          }
          case 362: {
            TpDeadAudioEvent = input.ReadString();
            break;
          }
          case 368: {
            TpDeadEffect = input.ReadUInt32();
            break;
          }
          case 376: {
            TpDeadRagDollEnable = input.ReadBool();
            break;
          }
          case 384: {
            TpDeadEffectTypeOnBody = input.ReadInt32();
            break;
          }
          case 392: {
            SkinKillVFX = input.ReadInt32();
            break;
          }
          case 402: {
            SkinKillAudio = input.ReadString();
            break;
          }
          case 408: {
            SkinKillAllowAnim = input.ReadBool();
            break;
          }
          case 416: {
            SkinLastKillVFX = input.ReadInt32();
            break;
          }
          case 426: {
            SkinLastKillAudio = input.ReadString();
            break;
          }
          case 432: {
            SkinLastKillAllowAnim = input.ReadBool();
            break;
          }
          case 442: {
            SkinLastKillCameraShakeAsset = input.ReadString();
            break;
          }
          case 453: {
            SkinLastKillCameraShakeDelayTimes = input.ReadFloat();
            break;
          }
          case 461: {
            SkinLastKillAmplitudeRange = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
