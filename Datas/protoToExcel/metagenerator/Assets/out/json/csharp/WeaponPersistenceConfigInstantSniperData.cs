// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WeaponPersistenceConfigInstantSniperData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace D11.Pjson {

  /// <summary>Holder for reflection information generated from WeaponPersistenceConfigInstantSniperData.proto</summary>
  public static partial class WeaponPersistenceConfigInstantSniperDataReflection {

    #region Descriptor
    /// <summary>File descriptor for WeaponPersistenceConfigInstantSniperData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WeaponPersistenceConfigInstantSniperDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5XZWFwb25QZXJzaXN0ZW5jZUNvbmZpZ0luc3RhbnRTbmlwZXJEYXRhLnBy",
            "b3RvEglEMTEuUGpzb24aKldlYXBvblBlcnNpc3RlbmNlQ29uZmlnQ29tcG9u",
            "ZW50RGF0YS5wcm90byKOBAooV2VhcG9uUGVyc2lzdGVuY2VDb25maWdJbnN0",
            "YW50U25pcGVyRGF0YRIVCg1ab29tSW5GT1ZSYXRlGAEgASgCEhYKDlpvb21P",
            "dXRGT1ZSYXRlGAIgASgCEhMKC1NuaXBlclgxRk9WGAMgASgCEhMKC1NuaXBl",
            "clgyRk9WGAQgASgCEiIKGlNuaXBlclgxV2VhcG9uTWF4TW92ZVNwZWVkGAUg",
            "ASgCEiIKGlNuaXBlclgyV2VhcG9uTWF4TW92ZVNwZWVkGAYgASgCEhkKEVNu",
            "aXBlclJlU2xvdFRpbWVzGAcgASgCEiAKGFNuaXBWaWV3Q2VudGVyQXJlYVNj",
            "YWxlcxgIIAMoAhIbChNTbmlwZXJWaWV3SW1nU2NhbGVzGAkgAygCEhUKDVNu",
            "aXBlclZpZXdJbWcYCiABKA0SIwobU25pcGVySG9yaXpvbnRhbExpbmVWaWV3",
            "SW1nGAsgASgNEiEKGVNuaXBlclZlcnRpY2FsTGluZVZpZXdJbWcYDCABKA0S",
            "HQoVU25pcGVyUmVkUG9pbnRWaWV3SW1nGA0gASgNEhMKC1pvb21Tb3VuZEZw",
            "GA4gASgJEhMKC1pvb21Tb3VuZFRwGA8gASgJEj8KBnBhcmVudBgQIAEoCzIv",
            "LkQxMS5QanNvbi5XZWFwb25QZXJzaXN0ZW5jZUNvbmZpZ0NvbXBvbmVudERh",
            "dGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::D11.Pjson.WeaponPersistenceConfigComponentDataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::D11.Pjson.WeaponPersistenceConfigInstantSniperData), global::D11.Pjson.WeaponPersistenceConfigInstantSniperData.Parser, new[]{ "ZoomInFOVRate", "ZoomOutFOVRate", "SniperX1FOV", "SniperX2FOV", "SniperX1WeaponMaxMoveSpeed", "SniperX2WeaponMaxMoveSpeed", "SniperReSlotTimes", "SnipViewCenterAreaScales", "SniperViewImgScales", "SniperViewImg", "SniperHorizontalLineViewImg", "SniperVerticalLineViewImg", "SniperRedPointViewImg", "ZoomSoundFp", "ZoomSoundTp", "Parent" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class WeaponPersistenceConfigInstantSniperData : pb::IMessage<WeaponPersistenceConfigInstantSniperData> {
    private static readonly pb::MessageParser<WeaponPersistenceConfigInstantSniperData> _parser = new pb::MessageParser<WeaponPersistenceConfigInstantSniperData>(() => new WeaponPersistenceConfigInstantSniperData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WeaponPersistenceConfigInstantSniperData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::D11.Pjson.WeaponPersistenceConfigInstantSniperDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeaponPersistenceConfigInstantSniperData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeaponPersistenceConfigInstantSniperData(WeaponPersistenceConfigInstantSniperData other) : this() {
      zoomInFOVRate_ = other.zoomInFOVRate_;
      zoomOutFOVRate_ = other.zoomOutFOVRate_;
      sniperX1FOV_ = other.sniperX1FOV_;
      sniperX2FOV_ = other.sniperX2FOV_;
      sniperX1WeaponMaxMoveSpeed_ = other.sniperX1WeaponMaxMoveSpeed_;
      sniperX2WeaponMaxMoveSpeed_ = other.sniperX2WeaponMaxMoveSpeed_;
      sniperReSlotTimes_ = other.sniperReSlotTimes_;
      snipViewCenterAreaScales_ = other.snipViewCenterAreaScales_.Clone();
      sniperViewImgScales_ = other.sniperViewImgScales_.Clone();
      sniperViewImg_ = other.sniperViewImg_;
      sniperHorizontalLineViewImg_ = other.sniperHorizontalLineViewImg_;
      sniperVerticalLineViewImg_ = other.sniperVerticalLineViewImg_;
      sniperRedPointViewImg_ = other.sniperRedPointViewImg_;
      zoomSoundFp_ = other.zoomSoundFp_;
      zoomSoundTp_ = other.zoomSoundTp_;
      parent_ = other.parent_ != null ? other.parent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeaponPersistenceConfigInstantSniperData Clone() {
      return new WeaponPersistenceConfigInstantSniperData(this);
    }

    /// <summary>Field number for the "ZoomInFOVRate" field.</summary>
    public const int ZoomInFOVRateFieldNumber = 1;
    private float zoomInFOVRate_;
    /// <summary>
    /// 拉镜速度/s 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ZoomInFOVRate {
      get { return zoomInFOVRate_; }
      set {
        zoomInFOVRate_ = value;
      }
    }

    /// <summary>Field number for the "ZoomOutFOVRate" field.</summary>
    public const int ZoomOutFOVRateFieldNumber = 2;
    private float zoomOutFOVRate_;
    /// <summary>
    /// 收镜速度/s 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ZoomOutFOVRate {
      get { return zoomOutFOVRate_; }
      set {
        zoomOutFOVRate_ = value;
      }
    }

    /// <summary>Field number for the "SniperX1FOV" field.</summary>
    public const int SniperX1FOVFieldNumber = 3;
    private float sniperX1FOV_;
    /// <summary>
    /// 狙击1X FOV 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SniperX1FOV {
      get { return sniperX1FOV_; }
      set {
        sniperX1FOV_ = value;
      }
    }

    /// <summary>Field number for the "SniperX2FOV" field.</summary>
    public const int SniperX2FOVFieldNumber = 4;
    private float sniperX2FOV_;
    /// <summary>
    /// 狙击2X FOV 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SniperX2FOV {
      get { return sniperX2FOV_; }
      set {
        sniperX2FOV_ = value;
      }
    }

    /// <summary>Field number for the "SniperX1WeaponMaxMoveSpeed" field.</summary>
    public const int SniperX1WeaponMaxMoveSpeedFieldNumber = 5;
    private float sniperX1WeaponMaxMoveSpeed_;
    /// <summary>
    /// 狙击X1武器移动速度 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SniperX1WeaponMaxMoveSpeed {
      get { return sniperX1WeaponMaxMoveSpeed_; }
      set {
        sniperX1WeaponMaxMoveSpeed_ = value;
      }
    }

    /// <summary>Field number for the "SniperX2WeaponMaxMoveSpeed" field.</summary>
    public const int SniperX2WeaponMaxMoveSpeedFieldNumber = 6;
    private float sniperX2WeaponMaxMoveSpeed_;
    /// <summary>
    /// 狙击X2武器移动速度 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SniperX2WeaponMaxMoveSpeed {
      get { return sniperX2WeaponMaxMoveSpeed_; }
      set {
        sniperX2WeaponMaxMoveSpeed_ = value;
      }
    }

    /// <summary>Field number for the "SniperReSlotTimes" field.</summary>
    public const int SniperReSlotTimesFieldNumber = 7;
    private float sniperReSlotTimes_;
    /// <summary>
    /// 单发狙拉栓动画时间 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SniperReSlotTimes {
      get { return sniperReSlotTimes_; }
      set {
        sniperReSlotTimes_ = value;
      }
    }

    /// <summary>Field number for the "SnipViewCenterAreaScales" field.</summary>
    public const int SnipViewCenterAreaScalesFieldNumber = 8;
    private static readonly pb::FieldCodec<float> _repeated_snipViewCenterAreaScales_codec
        = pb::FieldCodec.ForFloat(66);
    private readonly pbc::RepeatedField<float> snipViewCenterAreaScales_ = new pbc::RepeatedField<float>();
    /// <summary>
    /// 非遮罩圆形部分Scale 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> SnipViewCenterAreaScales {
      get { return snipViewCenterAreaScales_; }
    }

    /// <summary>Field number for the "SniperViewImgScales" field.</summary>
    public const int SniperViewImgScalesFieldNumber = 9;
    private static readonly pb::FieldCodec<float> _repeated_sniperViewImgScales_codec
        = pb::FieldCodec.ForFloat(74);
    private readonly pbc::RepeatedField<float> sniperViewImgScales_ = new pbc::RepeatedField<float>();
    /// <summary>
    /// 狙击枪UI图片Scale 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> SniperViewImgScales {
      get { return sniperViewImgScales_; }
    }

    /// <summary>Field number for the "SniperViewImg" field.</summary>
    public const int SniperViewImgFieldNumber = 10;
    private uint sniperViewImg_;
    /// <summary>
    /// 狙击枪UI图片 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SniperViewImg {
      get { return sniperViewImg_; }
      set {
        sniperViewImg_ = value;
      }
    }

    /// <summary>Field number for the "SniperHorizontalLineViewImg" field.</summary>
    public const int SniperHorizontalLineViewImgFieldNumber = 11;
    private uint sniperHorizontalLineViewImg_;
    /// <summary>
    /// 狙击枪UI准星横线图片 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SniperHorizontalLineViewImg {
      get { return sniperHorizontalLineViewImg_; }
      set {
        sniperHorizontalLineViewImg_ = value;
      }
    }

    /// <summary>Field number for the "SniperVerticalLineViewImg" field.</summary>
    public const int SniperVerticalLineViewImgFieldNumber = 12;
    private uint sniperVerticalLineViewImg_;
    /// <summary>
    /// 狙击枪UI准星竖线图片 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SniperVerticalLineViewImg {
      get { return sniperVerticalLineViewImg_; }
      set {
        sniperVerticalLineViewImg_ = value;
      }
    }

    /// <summary>Field number for the "SniperRedPointViewImg" field.</summary>
    public const int SniperRedPointViewImgFieldNumber = 13;
    private uint sniperRedPointViewImg_;
    /// <summary>
    /// 狙击枪UI准星红点图片 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SniperRedPointViewImg {
      get { return sniperRedPointViewImg_; }
      set {
        sniperRedPointViewImg_ = value;
      }
    }

    /// <summary>Field number for the "ZoomSoundFp" field.</summary>
    public const int ZoomSoundFpFieldNumber = 14;
    private string zoomSoundFp_ = "";
    /// <summary>
    /// 1p镜子音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZoomSoundFp {
      get { return zoomSoundFp_; }
      set {
        zoomSoundFp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ZoomSoundTp" field.</summary>
    public const int ZoomSoundTpFieldNumber = 15;
    private string zoomSoundTp_ = "";
    /// <summary>
    /// 3p镜子音效 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZoomSoundTp {
      get { return zoomSoundTp_; }
      set {
        zoomSoundTp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 16;
    private global::D11.Pjson.WeaponPersistenceConfigComponentData parent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::D11.Pjson.WeaponPersistenceConfigComponentData Parent {
      get { return parent_; }
      set {
        parent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WeaponPersistenceConfigInstantSniperData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WeaponPersistenceConfigInstantSniperData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ZoomInFOVRate, other.ZoomInFOVRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ZoomOutFOVRate, other.ZoomOutFOVRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SniperX1FOV, other.SniperX1FOV)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SniperX2FOV, other.SniperX2FOV)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SniperX1WeaponMaxMoveSpeed, other.SniperX1WeaponMaxMoveSpeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SniperX2WeaponMaxMoveSpeed, other.SniperX2WeaponMaxMoveSpeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SniperReSlotTimes, other.SniperReSlotTimes)) return false;
      if(!snipViewCenterAreaScales_.Equals(other.snipViewCenterAreaScales_)) return false;
      if(!sniperViewImgScales_.Equals(other.sniperViewImgScales_)) return false;
      if (SniperViewImg != other.SniperViewImg) return false;
      if (SniperHorizontalLineViewImg != other.SniperHorizontalLineViewImg) return false;
      if (SniperVerticalLineViewImg != other.SniperVerticalLineViewImg) return false;
      if (SniperRedPointViewImg != other.SniperRedPointViewImg) return false;
      if (ZoomSoundFp != other.ZoomSoundFp) return false;
      if (ZoomSoundTp != other.ZoomSoundTp) return false;
      if (!object.Equals(Parent, other.Parent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ZoomInFOVRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ZoomInFOVRate);
      if (ZoomOutFOVRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ZoomOutFOVRate);
      if (SniperX1FOV != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SniperX1FOV);
      if (SniperX2FOV != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SniperX2FOV);
      if (SniperX1WeaponMaxMoveSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SniperX1WeaponMaxMoveSpeed);
      if (SniperX2WeaponMaxMoveSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SniperX2WeaponMaxMoveSpeed);
      if (SniperReSlotTimes != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SniperReSlotTimes);
      hash ^= snipViewCenterAreaScales_.GetHashCode();
      hash ^= sniperViewImgScales_.GetHashCode();
      if (SniperViewImg != 0) hash ^= SniperViewImg.GetHashCode();
      if (SniperHorizontalLineViewImg != 0) hash ^= SniperHorizontalLineViewImg.GetHashCode();
      if (SniperVerticalLineViewImg != 0) hash ^= SniperVerticalLineViewImg.GetHashCode();
      if (SniperRedPointViewImg != 0) hash ^= SniperRedPointViewImg.GetHashCode();
      if (ZoomSoundFp.Length != 0) hash ^= ZoomSoundFp.GetHashCode();
      if (ZoomSoundTp.Length != 0) hash ^= ZoomSoundTp.GetHashCode();
      if (parent_ != null) hash ^= Parent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ZoomInFOVRate != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(ZoomInFOVRate);
      }
      if (ZoomOutFOVRate != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(ZoomOutFOVRate);
      }
      if (SniperX1FOV != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(SniperX1FOV);
      }
      if (SniperX2FOV != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(SniperX2FOV);
      }
      if (SniperX1WeaponMaxMoveSpeed != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(SniperX1WeaponMaxMoveSpeed);
      }
      if (SniperX2WeaponMaxMoveSpeed != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(SniperX2WeaponMaxMoveSpeed);
      }
      if (SniperReSlotTimes != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(SniperReSlotTimes);
      }
      snipViewCenterAreaScales_.WriteTo(output, _repeated_snipViewCenterAreaScales_codec);
      sniperViewImgScales_.WriteTo(output, _repeated_sniperViewImgScales_codec);
      if (SniperViewImg != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(SniperViewImg);
      }
      if (SniperHorizontalLineViewImg != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(SniperHorizontalLineViewImg);
      }
      if (SniperVerticalLineViewImg != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(SniperVerticalLineViewImg);
      }
      if (SniperRedPointViewImg != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(SniperRedPointViewImg);
      }
      if (ZoomSoundFp.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ZoomSoundFp);
      }
      if (ZoomSoundTp.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ZoomSoundTp);
      }
      if (parent_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ZoomInFOVRate != 0F) {
        size += 1 + 4;
      }
      if (ZoomOutFOVRate != 0F) {
        size += 1 + 4;
      }
      if (SniperX1FOV != 0F) {
        size += 1 + 4;
      }
      if (SniperX2FOV != 0F) {
        size += 1 + 4;
      }
      if (SniperX1WeaponMaxMoveSpeed != 0F) {
        size += 1 + 4;
      }
      if (SniperX2WeaponMaxMoveSpeed != 0F) {
        size += 1 + 4;
      }
      if (SniperReSlotTimes != 0F) {
        size += 1 + 4;
      }
      size += snipViewCenterAreaScales_.CalculateSize(_repeated_snipViewCenterAreaScales_codec);
      size += sniperViewImgScales_.CalculateSize(_repeated_sniperViewImgScales_codec);
      if (SniperViewImg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SniperViewImg);
      }
      if (SniperHorizontalLineViewImg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SniperHorizontalLineViewImg);
      }
      if (SniperVerticalLineViewImg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SniperVerticalLineViewImg);
      }
      if (SniperRedPointViewImg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SniperRedPointViewImg);
      }
      if (ZoomSoundFp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZoomSoundFp);
      }
      if (ZoomSoundTp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZoomSoundTp);
      }
      if (parent_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Parent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WeaponPersistenceConfigInstantSniperData other) {
      if (other == null) {
        return;
      }
      if (other.ZoomInFOVRate != 0F) {
        ZoomInFOVRate = other.ZoomInFOVRate;
      }
      if (other.ZoomOutFOVRate != 0F) {
        ZoomOutFOVRate = other.ZoomOutFOVRate;
      }
      if (other.SniperX1FOV != 0F) {
        SniperX1FOV = other.SniperX1FOV;
      }
      if (other.SniperX2FOV != 0F) {
        SniperX2FOV = other.SniperX2FOV;
      }
      if (other.SniperX1WeaponMaxMoveSpeed != 0F) {
        SniperX1WeaponMaxMoveSpeed = other.SniperX1WeaponMaxMoveSpeed;
      }
      if (other.SniperX2WeaponMaxMoveSpeed != 0F) {
        SniperX2WeaponMaxMoveSpeed = other.SniperX2WeaponMaxMoveSpeed;
      }
      if (other.SniperReSlotTimes != 0F) {
        SniperReSlotTimes = other.SniperReSlotTimes;
      }
      snipViewCenterAreaScales_.Add(other.snipViewCenterAreaScales_);
      sniperViewImgScales_.Add(other.sniperViewImgScales_);
      if (other.SniperViewImg != 0) {
        SniperViewImg = other.SniperViewImg;
      }
      if (other.SniperHorizontalLineViewImg != 0) {
        SniperHorizontalLineViewImg = other.SniperHorizontalLineViewImg;
      }
      if (other.SniperVerticalLineViewImg != 0) {
        SniperVerticalLineViewImg = other.SniperVerticalLineViewImg;
      }
      if (other.SniperRedPointViewImg != 0) {
        SniperRedPointViewImg = other.SniperRedPointViewImg;
      }
      if (other.ZoomSoundFp.Length != 0) {
        ZoomSoundFp = other.ZoomSoundFp;
      }
      if (other.ZoomSoundTp.Length != 0) {
        ZoomSoundTp = other.ZoomSoundTp;
      }
      if (other.parent_ != null) {
        if (parent_ == null) {
          Parent = new global::D11.Pjson.WeaponPersistenceConfigComponentData();
        }
        Parent.MergeFrom(other.Parent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            ZoomInFOVRate = input.ReadFloat();
            break;
          }
          case 21: {
            ZoomOutFOVRate = input.ReadFloat();
            break;
          }
          case 29: {
            SniperX1FOV = input.ReadFloat();
            break;
          }
          case 37: {
            SniperX2FOV = input.ReadFloat();
            break;
          }
          case 45: {
            SniperX1WeaponMaxMoveSpeed = input.ReadFloat();
            break;
          }
          case 53: {
            SniperX2WeaponMaxMoveSpeed = input.ReadFloat();
            break;
          }
          case 61: {
            SniperReSlotTimes = input.ReadFloat();
            break;
          }
          case 66:
          case 69: {
            snipViewCenterAreaScales_.AddEntriesFrom(input, _repeated_snipViewCenterAreaScales_codec);
            break;
          }
          case 74:
          case 77: {
            sniperViewImgScales_.AddEntriesFrom(input, _repeated_sniperViewImgScales_codec);
            break;
          }
          case 80: {
            SniperViewImg = input.ReadUInt32();
            break;
          }
          case 88: {
            SniperHorizontalLineViewImg = input.ReadUInt32();
            break;
          }
          case 96: {
            SniperVerticalLineViewImg = input.ReadUInt32();
            break;
          }
          case 104: {
            SniperRedPointViewImg = input.ReadUInt32();
            break;
          }
          case 114: {
            ZoomSoundFp = input.ReadString();
            break;
          }
          case 122: {
            ZoomSoundTp = input.ReadString();
            break;
          }
          case 130: {
            if (parent_ == null) {
              Parent = new global::D11.Pjson.WeaponPersistenceConfigComponentData();
            }
            input.ReadMessage(Parent);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
